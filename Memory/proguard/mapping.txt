android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> c
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> d
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> e
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> a
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> a
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitAllowingStateLoss() -> b
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> c
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> P
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> b
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.os.Bundle getArguments() -> b
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> a
    android.support.v4.app.FragmentActivity getActivity() -> c
    android.content.res.Resources getResources() -> d
    java.lang.String getString(int) -> a
    boolean isAdded() -> e
    boolean isDetached() -> f
    boolean isVisible() -> g
    boolean isHidden() -> h
    void onHiddenChanged(boolean) -> a
    void setMenuVisibility(boolean) -> b
    void setUserVisibleHint(boolean) -> c
    android.support.v4.app.LoaderManager getLoaderManager() -> i
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    android.view.View getView() -> j
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> e
    void onStart() -> k
    void onResume() -> l
    void onSaveInstanceState(android.os.Bundle) -> f
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> m
    void onStop() -> n
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> o
    void onDestroy() -> p
    void initState() -> q
    void onDetach() -> r
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> s
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> t
    void performCreate(android.os.Bundle) -> g
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> h
    void performStart() -> u
    void performResume() -> v
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> w
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> i
    void performPause() -> x
    void performStop() -> y
    void performReallyStop() -> z
    void performDestroyView() -> A
    void performDestroy() -> B
android.support.v4.app.Fragment$1 -> android.support.v4.app.e:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.f:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.g:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.h:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a_
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> a
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b_
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> e
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> f
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.i:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.j:
    android.support.v4.app.FragmentActivity this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.k:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.l:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    android.support.v4.util.SimpleArrayMap children -> c
    java.util.ArrayList fragments -> d
    android.support.v4.util.SimpleArrayMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.m:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.n:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.o:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.p:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> b
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> c
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> d
    void makeInactive(android.support.v4.app.Fragment) -> e
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> f
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> g
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.q:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.r:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.s:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.t:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.u:
    android.support.v4.app.FragmentManager mFragmentManager -> a
    android.support.v4.app.FragmentTransaction mCurTransaction -> b
    java.util.ArrayList mSavedState -> c
    java.util.ArrayList mFragments -> d
    android.support.v4.app.Fragment mCurrentPrimaryItem -> e
    android.support.v4.app.Fragment getItem(int) -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.v:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.w:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.x:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.y:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> c
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> d
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> e
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> a
    int commit() -> a
    int commitAllowingStateLoss() -> b
android.support.v4.app.LoaderManager -> android.support.v4.app.z:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> a
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> b
    void destroyLoader(int) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.aa:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.ab:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    boolean mCreatingLoader -> h
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> c
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> d
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> a
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> a
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> b
    void destroyLoader(int) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.ac:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> a
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> b
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.ad:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.ae:
android.support.v4.content.AsyncTaskLoader -> android.support.v4.a.a:
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> a
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> b
    long mUpdateThrottle -> c
    long mLastLoadCompleteTime -> d
    android.os.Handler mHandler -> e
    void onForceLoad() -> a
    boolean cancelLoad() -> b
    void onCanceled(java.lang.Object) -> a
    void executePendingTask() -> c
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> a
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> b
    java.lang.Object loadInBackground() -> d
    java.lang.Object onLoadInBackground() -> e
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.a.b:
    java.lang.Object result -> a
    boolean waiting -> b
    java.util.concurrent.CountDownLatch done -> e
    android.support.v4.content.AsyncTaskLoader this$0 -> c
    java.lang.Object doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Object) -> a
    void onCancelled() -> a
    void run() -> run
    java.lang.Object doInBackground(java.lang.Object[]) -> a
android.support.v4.content.CursorLoader -> android.support.v4.a.c:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> f
    android.net.Uri mUri -> g
    java.lang.String[] mProjection -> h
    java.lang.String mSelection -> i
    java.lang.String[] mSelectionArgs -> j
    java.lang.String mSortOrder -> k
    android.database.Cursor mCursor -> l
    android.database.Cursor loadInBackground() -> f
    void deliverResult(android.database.Cursor) -> a
    void onStartLoading() -> g
    void onStopLoading() -> h
    void onCanceled(android.database.Cursor) -> b
    void onReset() -> i
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    java.lang.Object loadInBackground() -> d
    void onCanceled(java.lang.Object) -> a
    void deliverResult(java.lang.Object) -> b
android.support.v4.content.Loader -> android.support.v4.a.d:
    int mId -> m
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> n
    android.content.Context mContext -> o
    boolean mStarted -> p
    boolean mAbandoned -> q
    boolean mReset -> r
    boolean mContentChanged -> s
    boolean mProcessingChange -> t
    void deliverResult(java.lang.Object) -> b
    android.content.Context getContext() -> j
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    boolean isStarted() -> k
    boolean isAbandoned() -> l
    boolean isReset() -> m
    void startLoading() -> n
    void onStartLoading() -> g
    void forceLoad() -> o
    void onForceLoad() -> a
    void stopLoading() -> p
    void onStopLoading() -> h
    void abandon() -> q
    void onAbandon() -> r
    void reset() -> s
    void onReset() -> i
    boolean takeContentChanged() -> t
    void commitContentChanged() -> u
    void rollbackContentChanged() -> v
    void onContentChanged() -> w
    java.lang.String dataToString(java.lang.Object) -> c
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.a.e:
    android.support.v4.content.Loader this$0 -> a
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.f:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> a
android.support.v4.content.ModernAsyncTask -> android.support.v4.a.g:
    java.util.concurrent.ThreadFactory sThreadFactory -> a
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> b
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> d
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> c
    java.util.concurrent.Executor sDefaultExecutor -> e
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> f
    java.util.concurrent.FutureTask mFuture -> g
    android.support.v4.content.ModernAsyncTask$Status mStatus -> h
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> i
    void postResultIfNotInvoked(java.lang.Object) -> c
    java.lang.Object postResult(java.lang.Object) -> d
    java.lang.Object doInBackground(java.lang.Object[]) -> a
    void onPreExecute() -> b
    void onPostExecute(java.lang.Object) -> a
    void onProgressUpdate(java.lang.Object[]) -> b
    void onCancelled(java.lang.Object) -> b
    void onCancelled() -> a
    boolean isCancelled() -> c
    boolean cancel(boolean) -> a
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> a
    void finish(java.lang.Object) -> e
    java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> a
    java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> a
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> b
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> c
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.a.h:
    java.util.concurrent.atomic.AtomicInteger mCount -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.a.i:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.a.j:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.a.k:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> a
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.a.l:
    android.support.v4.content.ModernAsyncTask mTask -> a
    java.lang.Object[] mData -> b
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.a.m:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.a.n:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> a
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> b
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> c
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> d
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.a.o:
    java.lang.Object[] mParams -> b
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.ArrayMap -> android.support.v4.c.a:
    android.support.v4.util.MapCollections mCollections -> a
    android.support.v4.util.MapCollections getCollection() -> b
    void putAll(java.util.Map) -> putAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.c.b:
    android.support.v4.util.ArrayMap this$0 -> a
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.ContainerHelpers -> android.support.v4.c.c:
    int[] EMPTY_INTS -> a
    long[] EMPTY_LONGS -> b
    java.lang.Object[] EMPTY_OBJECTS -> c
    int idealIntArraySize(int) -> a
    int idealByteArraySize(int) -> b
    boolean equal(java.lang.Object,java.lang.Object) -> a
    int binarySearch(int[],int,int) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.d:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.e:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.LruCache -> android.support.v4.c.f:
    java.util.LinkedHashMap map -> a
    int size -> b
    int maxSize -> c
    int putCount -> d
    int createCount -> e
    int evictionCount -> f
    int hitCount -> g
    int missCount -> h
    java.lang.Object get(java.lang.Object) -> a
    java.lang.Object put(java.lang.Object,java.lang.Object) -> a
    void trimToSize(int) -> a
    java.lang.Object remove(java.lang.Object) -> b
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    java.lang.Object create(java.lang.Object) -> c
    int safeSizeOf(java.lang.Object,java.lang.Object) -> c
    int sizeOf(java.lang.Object,java.lang.Object) -> b
    void evictAll() -> a
    java.lang.String toString() -> toString
android.support.v4.util.MapCollections -> android.support.v4.c.g:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> b
    android.support.v4.util.MapCollections$KeySet mKeySet -> c
    android.support.v4.util.MapCollections$ValuesCollection mValues -> d
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> a
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> b
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> c
    java.lang.Object[] toArrayHelper(int) -> b
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> a
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> a
    java.util.Set getEntrySet() -> d
    java.util.Set getKeySet() -> e
    java.util.Collection getValues() -> f
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.c.h:
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    android.support.v4.util.MapCollections this$0 -> e
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.c.i:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.util.Map$Entry) -> a
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.c.j:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.c.k:
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    android.support.v4.util.MapCollections this$0 -> d
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> a
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.c.l:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.SimpleArrayMap -> android.support.v4.c.m:
    java.lang.Object[] mBaseCache -> b
    int mBaseCacheSize -> c
    java.lang.Object[] mTwiceBaseCache -> d
    int mTwiceBaseCacheSize -> e
    int[] mHashes -> f
    java.lang.Object[] mArray -> g
    int mSize -> h
    int indexOf(java.lang.Object,int) -> a
    int indexOfNull() -> a
    void allocArrays(int) -> e
    void freeArrays(int[],java.lang.Object[],int) -> a
    void clear() -> clear
    void ensureCapacity(int) -> a
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfValue(java.lang.Object) -> a
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> b
    java.lang.Object valueAt(int) -> c
    java.lang.Object setValueAt(int,java.lang.Object) -> a
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> d
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.n:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    android.support.v4.util.SparseArrayCompat clone() -> a
    java.lang.Object get(int) -> a
    java.lang.Object get(int,java.lang.Object) -> a
    void delete(int) -> b
    void remove(int) -> c
    void removeAt(int) -> d
    void gc() -> d
    void put(int,java.lang.Object) -> b
    int size() -> b
    int keyAt(int) -> e
    java.lang.Object valueAt(int) -> f
    int indexOfKey(int) -> g
    void clear() -> c
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.util.TimeUtils -> android.support.v4.c.o:
    java.lang.Object sFormatSync -> a
    char[] sFormatStr -> b
    int accumField(int,int,boolean,int) -> a
    int printField(char[],int,char,int,boolean,int) -> a
    int formatDurationLocked(long,int) -> a
    void formatDuration(long,java.io.PrintWriter,int) -> a
    void formatDuration(long,java.io.PrintWriter) -> a
    void formatDuration(long,long,java.io.PrintWriter) -> a
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.a:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.b:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.c:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.d:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.e:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.f:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.g:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.h:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> a
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.i:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.j:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.k:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> a
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.l:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.m:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.GravityCompat -> android.support.v4.view.n:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.o:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.p:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.q:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.r:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.s:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
    void startTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.t:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.u:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.v:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.w:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.x:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.y:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.z:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.aa:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.ab:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.ac:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.ad:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.ae:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> b
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void notifyDataSetChanged() -> c
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> b
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.af:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.ag:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.ah:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.ai:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.aj:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.ak:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.al:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.am:
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.an:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ao:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ap:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.aq:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ar:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.as:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.at:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.au:
    boolean isOpaque(android.view.View) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.av:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.aw:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ax:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ay:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> b
    void setImportantForAccessibility(android.view.View,int) -> a
    android.view.ViewParent getParentForAccessibility(android.view.View) -> c
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.az:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> a
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ba:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.bb:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.bc:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.bd:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.be:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.bf:
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> a
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> android.support.v4.view.bg:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.bh:
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.bi:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl -> android.support.v4.view.bj:
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.bk:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompatHC -> android.support.v4.view.bl:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    int mPageMargin -> o
    android.graphics.drawable.Drawable mMarginDrawable -> p
    int mTopPageBounds -> q
    int mBottomPageBounds -> r
    float mFirstOffset -> s
    float mLastOffset -> t
    int mChildWidthMeasureSpec -> u
    int mChildHeightMeasureSpec -> v
    boolean mInLayout -> w
    boolean mScrollingCacheEnabled -> x
    boolean mPopulatePending -> y
    int mOffscreenPageLimit -> z
    boolean mIsBeingDragged -> A
    boolean mIsUnableToDrag -> B
    int mDefaultGutterSize -> C
    int mGutterSize -> D
    int mTouchSlop -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    float mInitialMotionX -> H
    float mInitialMotionY -> I
    int mActivePointerId -> J
    android.view.VelocityTracker mVelocityTracker -> K
    int mMinimumVelocity -> L
    int mMaximumVelocity -> M
    int mFlingDistance -> N
    int mCloseEnough -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> R
    boolean mFirstLayout -> S
    boolean mNeedCalculatePageOffsets -> T
    boolean mCalledSuper -> U
    int mDecorChildCount -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> aa
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ab
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ac
    int mDrawingOrder -> ad
    java.util.ArrayList mDrawingOrderedChildren -> ae
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> af
    java.lang.Runnable mEndScrollRunnable -> ag
    int mScrollState -> ah
    void initViewPager() -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> g
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> b
    void populate() -> c
    void populate(int) -> a
    void sortChildDrawingOrder() -> h
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> c
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> i
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> j
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> d
    boolean pageRight() -> e
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> a
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> a
    int access$300(android.support.v4.view.ViewPager) -> b
    int[] access$400() -> f
android.support.v4.view.ViewPager$1 -> android.support.v4.view.bm:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.bn:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.bo:
    android.support.v4.view.ViewPager this$0 -> a
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.bp:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.bq:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.br:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.bs:
    android.support.v4.view.ViewPager this$0 -> b
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean canScroll() -> b
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.bt:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.bu:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.bv:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.bw:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.bx:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.by:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.a.a:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> a
    java.lang.Object getInfo() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void setSource(android.view.View) -> a
    void addChild(android.view.View) -> b
    int getActions() -> b
    void addAction(int) -> a
    void setParent(android.view.View) -> c
    void getBoundsInParent(android.graphics.Rect) -> a
    void setBoundsInParent(android.graphics.Rect) -> b
    void getBoundsInScreen(android.graphics.Rect) -> c
    void setBoundsInScreen(android.graphics.Rect) -> d
    boolean isCheckable() -> c
    boolean isChecked() -> d
    boolean isFocusable() -> e
    void setFocusable(boolean) -> a
    boolean isFocused() -> f
    void setFocused(boolean) -> b
    boolean isVisibleToUser() -> g
    void setVisibleToUser(boolean) -> c
    boolean isAccessibilityFocused() -> h
    void setAccessibilityFocused(boolean) -> d
    boolean isSelected() -> i
    void setSelected(boolean) -> e
    boolean isClickable() -> j
    void setClickable(boolean) -> f
    boolean isLongClickable() -> k
    void setLongClickable(boolean) -> g
    boolean isEnabled() -> l
    void setEnabled(boolean) -> h
    boolean isPassword() -> m
    boolean isScrollable() -> n
    void setScrollable(boolean) -> i
    java.lang.CharSequence getPackageName() -> o
    void setPackageName(java.lang.CharSequence) -> a
    java.lang.CharSequence getClassName() -> p
    void setClassName(java.lang.CharSequence) -> b
    java.lang.CharSequence getText() -> q
    java.lang.CharSequence getContentDescription() -> r
    void setContentDescription(java.lang.CharSequence) -> c
    void recycle() -> s
    java.lang.String getViewIdResourceName() -> t
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String getActionSymbolicName(int) -> b
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.a.b:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.a.c:
    java.lang.Object obtain(java.lang.Object) -> a
    void setSource(java.lang.Object,android.view.View) -> c
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void addAction(java.lang.Object,int) -> a
    void setParent(java.lang.Object,android.view.View) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isFocusable(java.lang.Object) -> k
    void setFocusable(java.lang.Object,boolean) -> c
    boolean isFocused(java.lang.Object) -> l
    void setFocused(java.lang.Object,boolean) -> d
    boolean isVisibleToUser(java.lang.Object) -> r
    void setVisibleToUser(java.lang.Object,boolean) -> h
    boolean isAccessibilityFocused(java.lang.Object) -> s
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    boolean isSelected(java.lang.Object) -> p
    void setSelected(java.lang.Object,boolean) -> g
    boolean isClickable(java.lang.Object) -> i
    void setClickable(java.lang.Object,boolean) -> a
    boolean isLongClickable(java.lang.Object) -> m
    void setLongClickable(java.lang.Object,boolean) -> e
    boolean isEnabled(java.lang.Object) -> j
    void setEnabled(java.lang.Object,boolean) -> b
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    void setScrollable(java.lang.Object,boolean) -> f
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    java.lang.CharSequence getText(java.lang.Object) -> f
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void recycle(java.lang.Object) -> q
    java.lang.String getViewIdResourceName(java.lang.Object) -> t
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.a.d:
    boolean isVisibleToUser(java.lang.Object) -> r
    void setVisibleToUser(java.lang.Object,boolean) -> h
    boolean isAccessibilityFocused(java.lang.Object) -> s
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.a.e:
    java.lang.String getViewIdResourceName(java.lang.Object) -> t
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> android.support.v4.view.a.f:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.a.g:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isVisibleToUser(java.lang.Object) -> r
    boolean isAccessibilityFocused(java.lang.Object) -> s
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setVisibleToUser(java.lang.Object,boolean) -> h
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
    java.lang.String getViewIdResourceName(java.lang.Object) -> t
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.a.h:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.a.i:
    boolean isVisibleToUser(java.lang.Object) -> a
    void setVisibleToUser(java.lang.Object,boolean) -> a
    boolean isAccessibilityFocused(java.lang.Object) -> b
    void setAccesibilityFocused(java.lang.Object,boolean) -> b
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> android.support.v4.view.a.j:
    java.lang.String getViewIdResourceName(java.lang.Object) -> a
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.a.k:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> a
    java.lang.Object mRecord -> b
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> a
    void setScrollable(boolean) -> a
    void setItemCount(int) -> a
    void setFromIndex(int) -> b
    void setToIndex(int) -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.a.l:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.a.m:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.a.n:
    java.lang.Object obtain() -> a
    void setScrollable(java.lang.Object,boolean) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setFromIndex(java.lang.Object,int) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.a.o:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.a.p:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.a.q:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.a:
    boolean mDataValid -> a
    boolean mAutoRequery -> b
    android.database.Cursor mCursor -> c
    android.content.Context mContext -> d
    int mRowIDColumn -> e
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> f
    android.database.DataSetObserver mDataSetObserver -> g
    android.support.v4.widget.CursorFilter mCursorFilter -> h
    android.widget.FilterQueryProvider mFilterQueryProvider -> i
    void init(android.content.Context,android.database.Cursor,int) -> a
    android.database.Cursor getCursor() -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> a
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> b
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> a
    void changeCursor(android.database.Cursor) -> a
    android.database.Cursor swapCursor(android.database.Cursor) -> b
    java.lang.CharSequence convertToString(android.database.Cursor) -> c
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> a
    android.widget.Filter getFilter() -> getFilter
    void onContentChanged() -> b
android.support.v4.widget.CursorAdapter$1 -> android.support.v4.widget.b:
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.c:
    android.support.v4.widget.CursorAdapter this$0 -> a
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.d:
    android.support.v4.widget.CursorAdapter this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.widget.e:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> a
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.f:
    java.lang.CharSequence convertToString(android.database.Cursor) -> c
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> a
    android.database.Cursor getCursor() -> a
    void changeCursor(android.database.Cursor) -> a
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> a
    int mMinDrawerMargin -> b
    int mScrimColor -> c
    float mScrimOpacity -> d
    android.graphics.Paint mScrimPaint -> e
    android.support.v4.widget.ViewDragHelper mLeftDragger -> f
    android.support.v4.widget.ViewDragHelper mRightDragger -> g
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> h
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> i
    int mDrawerState -> j
    boolean mInLayout -> k
    boolean mFirstLayout -> l
    int mLockModeLeft -> m
    int mLockModeRight -> n
    boolean mDisallowInterceptRequested -> o
    boolean mChildrenCanceledTouch -> p
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> q
    float mInitialMotionX -> r
    float mInitialMotionY -> s
    android.graphics.drawable.Drawable mShadowLeft -> t
    android.graphics.drawable.Drawable mShadowRight -> u
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> a
    int getDrawerLockMode(android.view.View) -> a
    void updateDrawerState(int,int,android.view.View) -> a
    void dispatchOnDrawerClosed(android.view.View) -> b
    void dispatchOnDrawerOpened(android.view.View) -> c
    void dispatchOnDrawerSlide(android.view.View,float) -> a
    void setDrawerViewOffset(android.view.View,float) -> b
    float getDrawerViewOffset(android.view.View) -> d
    int getDrawerViewAbsoluteGravity(android.view.View) -> e
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> a
    java.lang.String gravityToString(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> k
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> b
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void openDrawer(int) -> c
    void closeDrawer(android.view.View) -> i
    boolean isDrawerVisible(android.view.View) -> j
    boolean hasPeekingDrawer() -> e
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> f
    android.view.View findVisibleDrawer() -> g
    void cancelChildViewTouch() -> c
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> d
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.g:
    android.graphics.Rect mTmpRect -> c
    android.support.v4.widget.DrawerLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void addChildrenForAccessibility(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean filter(android.view.View) -> a
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.h:
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.i:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.j:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.k:
    int mAbsGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void setDragger(android.support.v4.widget.ViewDragHelper) -> a
    void removeCallbacks() -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void closeOtherDrawer() -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    void peekDrawer() -> c
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
    void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> a
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.l:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> a
    void run() -> run
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.m:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.n:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.o:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.p:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.q:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.r:
    int mLayout -> j
    int mDropDownLayout -> k
    android.view.LayoutInflater mInflater -> l
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> a
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> b
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.s:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> b
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished() -> a
    int getCurrX() -> b
    int getCurrY() -> c
    int getFinalX() -> d
    int getFinalY() -> e
    boolean computeScrollOffset() -> f
    void startScroll(int,int,int,int,int) -> a
    void abortAnimation() -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.t:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.u:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.v:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.w:
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.x:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.SimpleCursorAdapter -> android.support.v4.widget.y:
    int[] mFrom -> j
    int[] mTo -> k
    int mStringConversionColumn -> m
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> n
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> o
    java.lang.String[] mOriginalFrom -> l
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> a
    void setViewImage(android.widget.ImageView,java.lang.String) -> a
    void setViewText(android.widget.TextView,java.lang.String) -> a
    java.lang.CharSequence convertToString(android.database.Cursor) -> c
    void findColumns(java.lang.String[]) -> a
    android.database.Cursor swapCursor(android.database.Cursor) -> b
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter -> android.support.v4.widget.z:
    java.lang.CharSequence convertToString(android.database.Cursor) -> a
android.support.v4.widget.SimpleCursorAdapter$ViewBinder -> android.support.v4.widget.aa:
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> a
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawable -> d
    int mOverhangSize -> e
    boolean mCanSlide -> f
    android.view.View mSlideableView -> g
    float mSlideOffset -> h
    float mParallaxOffset -> i
    int mSlideRange -> j
    boolean mIsUnableToDrag -> k
    int mParallaxBy -> l
    float mInitialMotionX -> m
    float mInitialMotionY -> n
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> o
    android.support.v4.widget.ViewDragHelper mDragHelper -> p
    boolean mPreservedOpenState -> q
    boolean mFirstLayout -> r
    android.graphics.Rect mTmpRect -> s
    java.util.ArrayList mPostedRunnables -> t
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void updateObscuredViewsVisibility(android.view.View) -> a
    void setAllChildrenVisible() -> a
    boolean viewIsOpaque(android.view.View) -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> a
    boolean openPane(android.view.View,int) -> b
    boolean openPane() -> b
    boolean closePane() -> c
    boolean isOpen() -> d
    boolean isSlideable() -> e
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> d
    boolean smoothSlideTo(float,int) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowResource(int) -> setShadowResource
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> a
    boolean isDimmed(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> a
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.ab:
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.ac:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.ad:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.ae:
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.af:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.ag:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.ah:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.ai:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.aj:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.ak:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> a
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> a
    void setMinVelocity(float) -> a
    int getViewDragState() -> a
    void setEdgeTrackingEnabled(int) -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    void abort() -> f
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeSettleDuration(android.view.View,int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    float distanceInfluenceForSnapDuration(float) -> b
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory() -> g
    void clearMotionHistory(int) -> e
    void ensureMotionHistorySizeForId(int) -> f
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    boolean isPointerDown(int) -> b
    void setDragState(int) -> c
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> d
    boolean checkTouchSlop(int,int) -> b
    void releaseViewForPointerUp() -> h
    void dragTo(int,int,int,int) -> b
    boolean isCapturedViewUnder(int,int) -> c
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> d
    int getEdgesTouched(int,int) -> e
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.al:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.am:
    android.support.v4.widget.ViewDragHelper this$0 -> a
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.an:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getOrderedChildIndex(int) -> c
    int getViewHorizontalDragRange(android.view.View) -> a
    int getViewVerticalDragRange(android.view.View) -> b
    boolean tryCaptureView(android.view.View,int) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
aurelienribon.tweenengine.BaseTween -> a.a.a:
    int step -> f
    int repeatCnt -> g
    boolean isIterationStep -> h
    boolean isYoyo -> i
    float delay -> a
    float duration -> b
    float repeatDelay -> j
    float currentTime -> k
    float deltaTime -> l
    boolean isStarted -> m
    boolean isInitialized -> n
    boolean isFinished -> o
    boolean isKilled -> p
    boolean isPaused -> q
    aurelienribon.tweenengine.TweenCallback callback -> r
    int callbackTriggers -> s
    java.lang.Object userData -> t
    boolean isAutoRemoveEnabled -> c
    boolean isAutoStartEnabled -> d
    boolean $assertionsDisabled -> e
    void reset() -> a
    java.lang.Object build() -> b
    java.lang.Object start() -> c
    java.lang.Object start(aurelienribon.tweenengine.TweenManager) -> a
    java.lang.Object delay(float) -> a
    void free() -> d
    java.lang.Object repeatYoyo(int,float) -> a
    java.lang.Object setCallback(aurelienribon.tweenengine.TweenCallback) -> a
    java.lang.Object setCallbackTriggers(int) -> a
    int getRepeatCount() -> e
    float getFullDuration() -> f
    float getCurrentTime() -> g
    boolean isFinished() -> h
    void forceStartValues() -> i
    void forceEndValues() -> j
    void initializeOverride() -> k
    void updateOverride(int,int,boolean,float) -> a
    void forceToStart() -> l
    void forceToEnd(float) -> b
    void callCallback(int) -> b
    boolean isReverse(int) -> c
    boolean isValid(int) -> d
    void update(float) -> c
    void initialize() -> m
    void testRelaunch() -> n
    void updateStep() -> o
    void testCompletion() -> p
aurelienribon.tweenengine.Pool -> a.a.b:
    java.util.ArrayList objects -> a
    aurelienribon.tweenengine.Pool$Callback callback -> b
    java.lang.Object create() -> a
    java.lang.Object get() -> b
    void free(java.lang.Object) -> a
aurelienribon.tweenengine.Pool$Callback -> a.a.c:
    void onPool(java.lang.Object) -> a
    void onUnPool(java.lang.Object) -> b
aurelienribon.tweenengine.Timeline -> a.a.d:
    aurelienribon.tweenengine.Pool$Callback poolCallback -> h
    aurelienribon.tweenengine.Pool pool -> f
    java.util.List children -> i
    aurelienribon.tweenengine.Timeline current -> j
    aurelienribon.tweenengine.Timeline parent -> k
    aurelienribon.tweenengine.Timeline$Modes mode -> l
    boolean isBuilt -> m
    boolean $assertionsDisabled -> g
    aurelienribon.tweenengine.Timeline createParallel() -> m
    void reset() -> a
    void setup(aurelienribon.tweenengine.Timeline$Modes) -> a
    aurelienribon.tweenengine.Timeline push(aurelienribon.tweenengine.Tween) -> a
    aurelienribon.tweenengine.Timeline build() -> n
    aurelienribon.tweenengine.Timeline start() -> o
    void free() -> d
    void updateOverride(int,int,boolean,float) -> a
    void forceStartValues() -> i
    void forceEndValues() -> j
    java.lang.Object start() -> c
    java.lang.Object build() -> b
aurelienribon.tweenengine.Timeline$1 -> a.a.e:
    void onPool(aurelienribon.tweenengine.Timeline) -> a
    void onUnPool(aurelienribon.tweenengine.Timeline) -> b
    void onUnPool(java.lang.Object) -> b
    void onPool(java.lang.Object) -> a
aurelienribon.tweenengine.Timeline$2 -> a.a.f:
    aurelienribon.tweenengine.Timeline create() -> c
    java.lang.Object create() -> a
aurelienribon.tweenengine.Timeline$3 -> a.a.g:
    int[] $SwitchMap$aurelienribon$tweenengine$Timeline$Modes -> a
aurelienribon.tweenengine.Timeline$Modes -> a.a.h:
    aurelienribon.tweenengine.Timeline$Modes SEQUENCE -> a
    aurelienribon.tweenengine.Timeline$Modes PARALLEL -> b
    aurelienribon.tweenengine.Timeline$Modes[] $VALUES -> c
    aurelienribon.tweenengine.Timeline$Modes[] values() -> values
    aurelienribon.tweenengine.Timeline$Modes valueOf(java.lang.String) -> valueOf
aurelienribon.tweenengine.Tween -> a.a.i:
    int combinedAttrsLimit -> g
    int waypointsLimit -> h
    aurelienribon.tweenengine.Pool$Callback poolCallback -> i
    aurelienribon.tweenengine.Pool pool -> j
    java.util.Map registeredAccessors -> k
    java.lang.Object target -> l
    java.lang.Class targetClass -> m
    aurelienribon.tweenengine.TweenAccessor accessor -> n
    int type -> o
    aurelienribon.tweenengine.TweenEquation equation -> p
    aurelienribon.tweenengine.TweenPath path -> q
    boolean isFrom -> r
    boolean isRelative -> s
    int combinedAttrsCnt -> t
    int waypointsCnt -> u
    float[] startValues -> v
    float[] targetValues -> w
    float[] waypoints -> x
    float[] accessorBuffer -> y
    float[] pathBuffer -> z
    boolean $assertionsDisabled -> f
    void registerAccessor(java.lang.Class,aurelienribon.tweenengine.TweenAccessor) -> a
    aurelienribon.tweenengine.Tween to(java.lang.Object,int,float) -> a
    aurelienribon.tweenengine.Tween call(aurelienribon.tweenengine.TweenCallback) -> b
    void reset() -> a
    void setup(java.lang.Object,int,float) -> b
    java.lang.Class findTargetClass() -> n
    aurelienribon.tweenengine.Tween ease(aurelienribon.tweenengine.TweenEquation) -> a
    aurelienribon.tweenengine.Tween target(float,float) -> a
    aurelienribon.tweenengine.Tween path(aurelienribon.tweenengine.TweenPath) -> a
    aurelienribon.tweenengine.Tween build() -> m
    void free() -> d
    void initializeOverride() -> k
    void updateOverride(int,int,boolean,float) -> a
    void forceStartValues() -> i
    void forceEndValues() -> j
    void throwCombinedAttrsLimitReached() -> o
    java.lang.Object build() -> b
aurelienribon.tweenengine.Tween$1 -> a.a.j:
    void onPool(aurelienribon.tweenengine.Tween) -> a
    void onUnPool(aurelienribon.tweenengine.Tween) -> b
    void onUnPool(java.lang.Object) -> b
    void onPool(java.lang.Object) -> a
aurelienribon.tweenengine.Tween$2 -> a.a.k:
    aurelienribon.tweenengine.Tween create() -> c
    java.lang.Object create() -> a
aurelienribon.tweenengine.TweenAccessor -> a.a.l:
    int getValues(java.lang.Object,int,float[]) -> a
    void setValues(java.lang.Object,int,float[]) -> b
aurelienribon.tweenengine.TweenCallback -> a.a.m:
    void onEvent(int,aurelienribon.tweenengine.BaseTween) -> a
aurelienribon.tweenengine.TweenEquation -> a.a.n:
    float compute(float) -> a
aurelienribon.tweenengine.TweenManager -> a.a.o:
    java.util.ArrayList objects -> a
    boolean isPaused -> b
    aurelienribon.tweenengine.TweenManager add(aurelienribon.tweenengine.BaseTween) -> a
    void update(float) -> a
aurelienribon.tweenengine.TweenPath -> a.a.p:
    float compute(float,float[],int) -> a
aurelienribon.tweenengine.TweenPaths -> a.a.q:
    aurelienribon.tweenengine.paths.Linear linear -> a
    aurelienribon.tweenengine.paths.CatmullRom catmullRom -> b
aurelienribon.tweenengine.equations.Quad -> a.a.a.a:
    aurelienribon.tweenengine.equations.Quad IN -> a
    aurelienribon.tweenengine.equations.Quad OUT -> b
    aurelienribon.tweenengine.equations.Quad INOUT -> c
aurelienribon.tweenengine.equations.Quad$1 -> a.a.a.b:
    float compute(float) -> a
    java.lang.String toString() -> toString
aurelienribon.tweenengine.equations.Quad$2 -> a.a.a.c:
    float compute(float) -> a
    java.lang.String toString() -> toString
aurelienribon.tweenengine.equations.Quad$3 -> a.a.a.d:
    float compute(float) -> a
    java.lang.String toString() -> toString
aurelienribon.tweenengine.equations.Sine -> a.a.a.e:
    aurelienribon.tweenengine.equations.Sine IN -> a
    aurelienribon.tweenengine.equations.Sine OUT -> b
    aurelienribon.tweenengine.equations.Sine INOUT -> c
aurelienribon.tweenengine.equations.Sine$1 -> a.a.a.f:
    float compute(float) -> a
    java.lang.String toString() -> toString
aurelienribon.tweenengine.equations.Sine$2 -> a.a.a.g:
    float compute(float) -> a
    java.lang.String toString() -> toString
aurelienribon.tweenengine.equations.Sine$3 -> a.a.a.h:
    float compute(float) -> a
    java.lang.String toString() -> toString
aurelienribon.tweenengine.paths.CatmullRom -> a.a.b.a:
    float compute(float,float[],int) -> a
    float catmullRomSpline(float,float,float,float,float) -> a
aurelienribon.tweenengine.paths.Linear -> a.a.b.b:
    float compute(float,float[],int) -> a
com.badlogic.gdx.Application -> com.badlogic.gdx.a:
    com.badlogic.gdx.Graphics getGraphics() -> a
    void log(java.lang.String,java.lang.String) -> a
    void error(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void debug(java.lang.String,java.lang.String) -> b
    com.badlogic.gdx.Application$ApplicationType getType() -> b
    void postRunnable(java.lang.Runnable) -> a
com.badlogic.gdx.Application$ApplicationType -> com.badlogic.gdx.b:
    com.badlogic.gdx.Application$ApplicationType Android -> a
    com.badlogic.gdx.Application$ApplicationType Desktop -> b
    com.badlogic.gdx.Application$ApplicationType Applet -> c
    com.badlogic.gdx.Application$ApplicationType WebGL -> d
    com.badlogic.gdx.Application$ApplicationType iOS -> e
    com.badlogic.gdx.Application$ApplicationType[] $VALUES -> f
    com.badlogic.gdx.Application$ApplicationType[] values() -> values
    com.badlogic.gdx.Application$ApplicationType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.ApplicationListener -> com.badlogic.gdx.c:
    void create() -> a
    void resize(int,int) -> a
    void render() -> b
    void pause() -> c
    void resume() -> d
    void dispose() -> e
com.badlogic.gdx.Audio -> com.badlogic.gdx.d:
com.badlogic.gdx.Files -> com.badlogic.gdx.e:
    com.badlogic.gdx.files.FileHandle internal(java.lang.String) -> a
    java.lang.String getExternalStoragePath() -> a
com.badlogic.gdx.Files$FileType -> com.badlogic.gdx.f:
    com.badlogic.gdx.Files$FileType Classpath -> a
    com.badlogic.gdx.Files$FileType Internal -> b
    com.badlogic.gdx.Files$FileType External -> c
    com.badlogic.gdx.Files$FileType Absolute -> d
    com.badlogic.gdx.Files$FileType Local -> e
    com.badlogic.gdx.Files$FileType[] $VALUES -> f
    com.badlogic.gdx.Files$FileType[] values() -> values
    com.badlogic.gdx.Files$FileType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Game -> com.badlogic.gdx.g:
    com.badlogic.gdx.Screen screen -> a
    void dispose() -> e
    void pause() -> c
    void resume() -> d
    void render() -> b
    void resize(int,int) -> a
com.badlogic.gdx.Gdx -> com.badlogic.gdx.h:
    com.badlogic.gdx.Application app -> a
    com.badlogic.gdx.Graphics graphics -> b
    com.badlogic.gdx.Audio audio -> c
    com.badlogic.gdx.Input input -> d
    com.badlogic.gdx.Files files -> e
    com.badlogic.gdx.Net net -> f
    com.badlogic.gdx.graphics.GLCommon gl -> g
    com.badlogic.gdx.graphics.GL10 gl10 -> h
    com.badlogic.gdx.graphics.GL11 gl11 -> i
    com.badlogic.gdx.graphics.GL20 gl20 -> j
com.badlogic.gdx.Graphics -> com.badlogic.gdx.i:
    boolean isGL20Available() -> a
    com.badlogic.gdx.graphics.GL20 getGL20() -> b
    int getWidth() -> c
    int getHeight() -> d
    float getDeltaTime() -> e
    com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode() -> f
    boolean supportsExtension(java.lang.String) -> a
    void requestRendering() -> g
com.badlogic.gdx.Graphics$BufferFormat -> com.badlogic.gdx.j:
    int r -> a
    int g -> b
    int b -> c
    int a -> d
    int depth -> e
    int stencil -> f
    int samples -> g
    boolean coverageSampling -> h
    java.lang.String toString() -> toString
com.badlogic.gdx.Graphics$DisplayMode -> com.badlogic.gdx.k:
    int width -> a
    int height -> b
    int refreshRate -> c
    int bitsPerPixel -> d
    java.lang.String toString() -> toString
com.badlogic.gdx.Input -> com.badlogic.gdx.l:
com.badlogic.gdx.Input$Orientation -> com.badlogic.gdx.m:
    com.badlogic.gdx.Input$Orientation Landscape -> a
    com.badlogic.gdx.Input$Orientation Portrait -> b
    com.badlogic.gdx.Input$Orientation[] $VALUES -> c
    com.badlogic.gdx.Input$Orientation[] values() -> values
    com.badlogic.gdx.Input$Orientation valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Input$TextInputListener -> com.badlogic.gdx.n:
com.badlogic.gdx.InputProcessor -> com.badlogic.gdx.o:
    boolean keyDown(int) -> a
    boolean keyUp(int) -> b
    boolean keyTyped(char) -> a
    boolean touchDown(int,int,int,int) -> a
    boolean touchUp(int,int,int,int) -> b
    boolean touchDragged(int,int,int) -> a
com.badlogic.gdx.LifecycleListener -> com.badlogic.gdx.p:
    void pause() -> a
    void resume() -> b
    void dispose() -> c
com.badlogic.gdx.Net -> com.badlogic.gdx.q:
com.badlogic.gdx.Screen -> com.badlogic.gdx.r:
    void render(float) -> a
    void resize(int,int) -> a
    void hide() -> a
    void pause() -> b
    void resume() -> c
com.badlogic.gdx.assets.AssetDescriptor -> com.badlogic.gdx.a.a:
    java.lang.String fileName -> a
    java.lang.Class type -> b
    com.badlogic.gdx.assets.AssetLoaderParameters params -> c
    com.badlogic.gdx.files.FileHandle file -> d
    java.lang.String toString() -> toString
com.badlogic.gdx.assets.AssetErrorListener -> com.badlogic.gdx.a.b:
    void error(com.badlogic.gdx.assets.AssetDescriptor,java.lang.Throwable) -> a
com.badlogic.gdx.assets.AssetLoaderParameters -> com.badlogic.gdx.a.c:
    com.badlogic.gdx.assets.AssetLoaderParameters$LoadedCallback loadedCallback -> a
com.badlogic.gdx.assets.AssetLoaderParameters$LoadedCallback -> com.badlogic.gdx.a.d:
    void finishedLoading(com.badlogic.gdx.assets.AssetManager,java.lang.String,java.lang.Class) -> a
com.badlogic.gdx.assets.AssetLoadingTask -> com.badlogic.gdx.a.e:
    com.badlogic.gdx.assets.AssetManager manager -> a
    com.badlogic.gdx.assets.AssetDescriptor assetDesc -> b
    com.badlogic.gdx.assets.loaders.AssetLoader loader -> c
    com.badlogic.gdx.utils.async.AsyncExecutor executor -> d
    long startTime -> e
    boolean asyncDone -> f
    boolean dependenciesLoaded -> g
    com.badlogic.gdx.utils.Array dependencies -> h
    com.badlogic.gdx.utils.async.AsyncResult depsFuture -> i
    com.badlogic.gdx.utils.async.AsyncResult loadFuture -> j
    java.lang.Object asset -> k
    int ticks -> l
    boolean cancel -> m
    java.lang.Void call() -> a
    boolean update() -> b
    void handleSyncLoader() -> e
    void handleAsyncLoader() -> f
    com.badlogic.gdx.files.FileHandle resolve(com.badlogic.gdx.assets.loaders.AssetLoader,com.badlogic.gdx.assets.AssetDescriptor) -> a
    java.lang.Object getAsset() -> c
    java.lang.Object call() -> d
com.badlogic.gdx.assets.AssetManager -> com.badlogic.gdx.a.f:
    com.badlogic.gdx.utils.ObjectMap assets -> a
    com.badlogic.gdx.utils.ObjectMap assetTypes -> b
    com.badlogic.gdx.utils.ObjectMap assetDependencies -> c
    com.badlogic.gdx.utils.ObjectMap loaders -> d
    com.badlogic.gdx.utils.Array loadQueue -> e
    com.badlogic.gdx.utils.async.AsyncExecutor executor -> f
    java.util.Stack tasks -> g
    com.badlogic.gdx.assets.AssetErrorListener listener -> h
    int loaded -> i
    int toLoad -> j
    com.badlogic.gdx.utils.Logger log -> k
    void unload(java.lang.String) -> a
    java.lang.String getAssetFileName(java.lang.Object) -> a
    boolean isLoaded(java.lang.String) -> b
    com.badlogic.gdx.assets.loaders.AssetLoader getLoader(java.lang.Class,java.lang.String) -> a
    void load(java.lang.String,java.lang.Class,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    boolean update() -> a
    void finishLoading() -> b
    void injectDependencies(java.lang.String,com.badlogic.gdx.utils.Array) -> a
    void injectDependency(java.lang.String,com.badlogic.gdx.assets.AssetDescriptor) -> a
    void nextTask() -> e
    void addTask(com.badlogic.gdx.assets.AssetDescriptor) -> a
    void addAsset(java.lang.String,java.lang.Class,java.lang.Object) -> a
    boolean updateTask() -> f
    void incrementRefCountedDependencies(java.lang.String) -> d
    void handleTaskError(java.lang.Throwable) -> a
    void dispose() -> c
    void clear() -> d
    int getReferenceCount(java.lang.String) -> c
    void setReferenceCount(java.lang.String,int) -> a
com.badlogic.gdx.assets.RefCountedContainer -> com.badlogic.gdx.a.g:
    java.lang.Object object -> a
    int refCount -> b
    void incRefCount() -> a
    void decRefCount() -> b
    int getRefCount() -> c
    void setRefCount(int) -> a
    java.lang.Object getObject(java.lang.Class) -> a
com.badlogic.gdx.assets.loaders.AssetLoader -> com.badlogic.gdx.a.a.a:
    com.badlogic.gdx.assets.loaders.FileHandleResolver resolver -> a
    com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> a
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.AsynchronousAssetLoader -> com.badlogic.gdx.a.a.b:
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> b
com.badlogic.gdx.assets.loaders.FileHandleResolver -> com.badlogic.gdx.a.a.c:
    com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> a
com.badlogic.gdx.assets.loaders.SynchronousAssetLoader -> com.badlogic.gdx.a.a.d:
    java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.TextureLoader -> com.badlogic.gdx.a.a.e:
    com.badlogic.gdx.assets.loaders.TextureLoader$TextureLoaderInfo info -> a
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter) -> a
    com.badlogic.gdx.graphics.Texture loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter) -> b
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter) -> a
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> b
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.TextureLoader$TextureLoaderInfo -> com.badlogic.gdx.a.a.f:
    java.lang.String filename -> a
    com.badlogic.gdx.graphics.TextureData data -> b
    com.badlogic.gdx.graphics.Texture texture -> c
com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter -> com.badlogic.gdx.a.a.g:
    com.badlogic.gdx.graphics.Pixmap$Format format -> b
    boolean genMipMaps -> c
    com.badlogic.gdx.graphics.Texture texture -> d
    com.badlogic.gdx.graphics.TextureData textureData -> e
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> f
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> g
    com.badlogic.gdx.graphics.Texture$TextureWrap wrapU -> h
    com.badlogic.gdx.graphics.Texture$TextureWrap wrapV -> i
com.badlogic.gdx.audio.Music -> com.badlogic.gdx.b.a:
com.badlogic.gdx.audio.Music$OnCompletionListener -> com.badlogic.gdx.b.b:
    void onCompletion(com.badlogic.gdx.audio.Music) -> a
com.badlogic.gdx.backends.android.AndroidApplication -> com.badlogic.gdx.backends.android.a:
    com.badlogic.gdx.backends.android.AndroidGraphics graphics -> n
    com.badlogic.gdx.backends.android.AndroidInput input -> o
    com.badlogic.gdx.backends.android.AndroidAudio audio -> p
    com.badlogic.gdx.backends.android.AndroidFiles files -> q
    com.badlogic.gdx.backends.android.AndroidNet net -> r
    com.badlogic.gdx.ApplicationListener listener -> s
    android.os.Handler handler -> t
    boolean firstResume -> u
    com.badlogic.gdx.utils.Array runnables -> v
    com.badlogic.gdx.utils.Array executedRunnables -> w
    com.badlogic.gdx.utils.Array lifecycleListeners -> x
    android.os.PowerManager$WakeLock wakeLock -> y
    int logLevel -> z
    void createWakeLock(com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> a
    void hideStatusBar(com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> b
    android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,boolean) -> a
    android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> a
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    com.badlogic.gdx.Audio getAudio() -> g
    com.badlogic.gdx.Files getFiles() -> h
    com.badlogic.gdx.Graphics getGraphics() -> a
    com.badlogic.gdx.Input getInput() -> i
    com.badlogic.gdx.Net getNet() -> j
    com.badlogic.gdx.Application$ApplicationType getType() -> b
    int getVersion() -> k
    void postRunnable(java.lang.Runnable) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void debug(java.lang.String,java.lang.String) -> b
    void log(java.lang.String,java.lang.String) -> a
    void log(java.lang.String,java.lang.String,java.lang.Throwable) -> b
    void error(java.lang.String,java.lang.String,java.lang.Throwable) -> a
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration -> com.badlogic.gdx.backends.android.b:
    boolean useGL20 -> a
    int r -> b
    int g -> c
    int b -> d
    int a -> e
    int depth -> f
    int stencil -> g
    int numSamples -> h
    boolean useAccelerometer -> i
    boolean useCompass -> j
    int touchSleepTime -> k
    boolean useWakelock -> l
    boolean hideStatusBar -> m
    int maxSimultaneousSounds -> n
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> o
    boolean getTouchEventsForLiveWallpaper -> p
    boolean useGLSurfaceViewAPI18 -> q
com.badlogic.gdx.backends.android.AndroidAudio -> com.badlogic.gdx.backends.android.c:
    android.media.SoundPool soundPool -> b
    android.media.AudioManager manager -> c
    java.util.List musics -> a
    void pause() -> a
    void resume() -> b
    void dispose() -> c
com.badlogic.gdx.backends.android.AndroidFileHandle -> com.badlogic.gdx.backends.android.d:
    android.content.res.AssetManager assets -> a
    com.badlogic.gdx.files.FileHandle child(java.lang.String) -> a
    com.badlogic.gdx.files.FileHandle parent() -> a
    java.io.InputStream read() -> b
    long length() -> c
com.badlogic.gdx.backends.android.AndroidFiles -> com.badlogic.gdx.backends.android.e:
    java.lang.String sdcard -> a
    java.lang.String localpath -> b
    android.content.res.AssetManager assets -> c
    com.badlogic.gdx.files.FileHandle internal(java.lang.String) -> a
    java.lang.String getExternalStoragePath() -> a
com.badlogic.gdx.backends.android.AndroidGL10 -> com.badlogic.gdx.backends.android.f:
    javax.microedition.khronos.opengles.GL10 gl -> a
    void glBindTexture(int,int) -> glBindTexture
    void glBlendFunc(int,int) -> glBlendFunc
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glClientActiveTexture(int) -> a
    void glColorPointer(int,int,int,java.nio.Buffer) -> a
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthMask(boolean) -> glDepthMask
    void glDisable(int) -> glDisable
    void glDisableClientState(int) -> b
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glEnable(int) -> glEnable
    void glEnableClientState(int) -> c
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    java.lang.String glGetString(int) -> glGetString
    void glMatrixMode(int) -> d
    void glNormalPointer(int,int,java.nio.Buffer) -> a
    void glPixelStorei(int,int) -> glPixelStorei
    void glTexCoordPointer(int,int,int,java.nio.Buffer) -> b
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glVertexPointer(int,int,int,java.nio.Buffer) -> c
    void glLoadMatrixf(float[],int) -> a
com.badlogic.gdx.backends.android.AndroidGL11 -> com.badlogic.gdx.backends.android.g:
    javax.microedition.khronos.opengles.GL11 gl -> b
    void glBindBuffer(int,int) -> a
    void glBufferData(int,int,java.nio.Buffer,int) -> a
    void glBufferSubData(int,int,int,java.nio.Buffer) -> d
    void glDeleteBuffers(int,java.nio.IntBuffer) -> a
    void glGenBuffers(int,java.nio.IntBuffer) -> b
    void glColorPointer(int,int,int,int) -> a
    void glNormalPointer(int,int,int) -> a
    void glTexCoordPointer(int,int,int,int) -> b
    void glVertexPointer(int,int,int,int) -> c
    void glDrawElements(int,int,int,int) -> d
com.badlogic.gdx.backends.android.AndroidGL20 -> com.badlogic.gdx.backends.android.AndroidGL20:
    void init() -> init
    void glAttachShader(int,int) -> glAttachShader
    void glBindBuffer(int,int) -> glBindBuffer
    void glBindFramebuffer(int,int) -> glBindFramebuffer
    void glBindRenderbuffer(int,int) -> glBindRenderbuffer
    void glBindTexture(int,int) -> glBindTexture
    void glBlendFunc(int,int) -> glBlendFunc
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    int glCheckFramebufferStatus(int) -> glCheckFramebufferStatus
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glCompileShader(int) -> glCompileShader
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    int glCreateProgram() -> glCreateProgram
    int glCreateShader(int) -> glCreateShader
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glDeleteFramebuffers(int,java.nio.IntBuffer) -> glDeleteFramebuffers
    void glDeleteProgram(int) -> glDeleteProgram
    void glDeleteRenderbuffers(int,java.nio.IntBuffer) -> glDeleteRenderbuffers
    void glDeleteShader(int) -> glDeleteShader
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthMask(boolean) -> glDepthMask
    void glDisable(int) -> glDisable
    void glDisableVertexAttribArray(int) -> glDisableVertexAttribArray
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glDrawElements(int,int,int,int) -> glDrawElements
    void glEnable(int) -> glEnable
    void glEnableVertexAttribArray(int) -> glEnableVertexAttribArray
    void glFramebufferRenderbuffer(int,int,int,int) -> glFramebufferRenderbuffer
    void glFramebufferTexture2D(int,int,int,int,int) -> glFramebufferTexture2D
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGenerateMipmap(int) -> glGenerateMipmap
    void glGenFramebuffers(int,java.nio.IntBuffer) -> glGenFramebuffers
    void glGenRenderbuffers(int,java.nio.IntBuffer) -> glGenRenderbuffers
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    java.lang.String glGetActiveAttrib(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveAttrib
    java.lang.String glGetActiveUniform(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveUniform
    int glGetAttribLocation(int,java.lang.String) -> glGetAttribLocation
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    void glGetProgramiv(int,int,java.nio.IntBuffer) -> glGetProgramiv
    java.lang.String glGetProgramInfoLog(int) -> glGetProgramInfoLog
    void glGetShaderiv(int,int,java.nio.IntBuffer) -> glGetShaderiv
    java.lang.String glGetShaderInfoLog(int) -> glGetShaderInfoLog
    java.lang.String glGetString(int) -> glGetString
    int glGetUniformLocation(int,java.lang.String) -> glGetUniformLocation
    void glLinkProgram(int) -> glLinkProgram
    void glPixelStorei(int,int) -> glPixelStorei
    void glRenderbufferStorage(int,int,int,int) -> glRenderbufferStorage
    void glShaderSource(int,java.lang.String) -> glShaderSource
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glUniform1i(int,int) -> glUniform1i
    void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4fv
    void glUseProgram(int) -> glUseProgram
    void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer) -> glVertexAttribPointer
    void glVertexAttribPointer(int,int,int,boolean,int,int) -> glVertexAttribPointer
com.badlogic.gdx.backends.android.AndroidGraphics -> com.badlogic.gdx.backends.android.h:
    android.view.View view -> a
    int width -> b
    int height -> c
    com.badlogic.gdx.backends.android.AndroidApplication app -> d
    com.badlogic.gdx.graphics.GLCommon gl -> e
    com.badlogic.gdx.graphics.GL10 gl10 -> f
    com.badlogic.gdx.graphics.GL11 gl11 -> g
    com.badlogic.gdx.graphics.GL20 gl20 -> h
    javax.microedition.khronos.egl.EGLContext eglContext -> i
    java.lang.String extensions -> j
    long lastFrameTime -> r
    float deltaTime -> s
    long frameStart -> t
    int frames -> u
    int fps -> v
    com.badlogic.gdx.math.WindowedMean mean -> w
    boolean created -> k
    boolean running -> l
    boolean pause -> m
    boolean resume -> n
    boolean destroy -> o
    float ppiX -> x
    float ppiY -> y
    float ppcX -> z
    float ppcY -> A
    float density -> B
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config -> C
    com.badlogic.gdx.Graphics$BufferFormat bufferFormat -> D
    boolean isContinuous -> E
    int[] value -> p
    java.lang.Object synch -> q
    void setPreserveContext(android.view.View) -> a
    android.view.View createGLSurfaceView(android.app.Activity,boolean,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy) -> a
    android.opengl.GLSurfaceView$EGLConfigChooser getEglConfigChooser() -> n
    void updatePpi() -> o
    boolean checkGL20() -> p
    com.badlogic.gdx.graphics.GL20 getGL20() -> b
    int getHeight() -> d
    int getWidth() -> c
    boolean isGL20Available() -> a
    void setupGL(javax.microedition.khronos.opengles.GL10) -> a
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    void logConfig(javax.microedition.khronos.egl.EGLConfig) -> a
    int getAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> a
    void resume() -> h
    void pause() -> i
    void destroy() -> j
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    float getDeltaTime() -> e
    void clearManagedCaches() -> k
    android.view.View getView() -> l
    com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode() -> f
    boolean supportsExtension(java.lang.String) -> a
    void setContinuousRendering(boolean) -> a
    boolean isContinuousRendering() -> m
    void requestRendering() -> g
com.badlogic.gdx.backends.android.AndroidGraphics$1 -> com.badlogic.gdx.backends.android.i:
    com.badlogic.gdx.backends.android.AndroidGraphics this$0 -> a
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy val$resolutionStrategy -> b
    void onMeasure(int,int) -> onMeasure
    android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
com.badlogic.gdx.backends.android.AndroidGraphics$1$1 -> com.badlogic.gdx.backends.android.j:
    com.badlogic.gdx.backends.android.AndroidGraphics$1 this$1 -> a
    boolean deleteSurroundingText(int,int) -> deleteSurroundingText
    void sendDownUpKeyEventForBackwardCompatibility(int) -> a
com.badlogic.gdx.backends.android.AndroidGraphics$AndroidDisplayMode -> com.badlogic.gdx.backends.android.k:
    com.badlogic.gdx.backends.android.AndroidGraphics this$0 -> e
com.badlogic.gdx.backends.android.AndroidInput -> com.badlogic.gdx.backends.android.AndroidInput:
    com.badlogic.gdx.utils.Pool usedKeyEvents -> a
    com.badlogic.gdx.utils.Pool usedTouchEvents -> b
    java.util.ArrayList keyListeners -> c
    java.util.ArrayList keyEvents -> d
    java.util.ArrayList touchEvents -> e
    int[] touchX -> f
    int[] touchY -> g
    int[] deltaX -> h
    int[] deltaY -> i
    boolean[] touched -> j
    int[] realId -> k
    boolean hasMultitouch -> l
    com.badlogic.gdx.utils.IntMap keys -> u
    android.hardware.SensorManager manager -> v
    boolean accelerometerAvailable -> m
    float[] accelerometerValues -> w
    java.lang.String text -> x
    com.badlogic.gdx.Input$TextInputListener textListener -> y
    android.os.Handler handle -> z
    com.badlogic.gdx.Application app -> n
    android.content.Context context -> o
    com.badlogic.gdx.backends.android.AndroidTouchHandler touchHandler -> A
    int sleepTime -> B
    boolean catchBack -> C
    boolean catchMenu -> D
    android.os.Vibrator vibrator -> p
    boolean compassAvailable -> E
    boolean keyboardAvailable -> q
    float[] magneticFieldValues -> F
    float azimuth -> G
    float pitch -> H
    float roll -> I
    float inclination -> J
    boolean justTouched -> K
    com.badlogic.gdx.InputProcessor processor -> L
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config -> M
    com.badlogic.gdx.Input$Orientation nativeOrientation -> N
    long currentEventTimeStamp -> O
    com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard onscreenKeyboard -> P
    android.hardware.SensorEventListener accelerometerListener -> Q
    android.hardware.SensorEventListener compassListener -> R
    boolean requestFocus -> r
    float[] R -> s
    float[] orientation -> t
    void processEvents() -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    void registerSensorListeners() -> b
    void unregisterSensorListeners() -> c
    int getFreePointerIndex() -> d
    int lookUpPointerIndex(int) -> a
    int getRotation() -> e
com.badlogic.gdx.backends.android.AndroidInput$1 -> com.badlogic.gdx.backends.android.AndroidInput$1:
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> a
    com.badlogic.gdx.backends.android.AndroidInput$KeyEvent newObject() -> a
    java.lang.Object newObject() -> b
com.badlogic.gdx.backends.android.AndroidInput$2 -> com.badlogic.gdx.backends.android.AndroidInput$2:
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> a
    com.badlogic.gdx.backends.android.AndroidInput$TouchEvent newObject() -> a
    java.lang.Object newObject() -> b
com.badlogic.gdx.backends.android.AndroidInput$KeyEvent -> com.badlogic.gdx.backends.android.AndroidInput$KeyEvent:
    long timeStamp -> a
    int type -> b
    int keyCode -> c
    char keyChar -> d
com.badlogic.gdx.backends.android.AndroidInput$SensorListener -> com.badlogic.gdx.backends.android.AndroidInput$SensorListener:
    float[] accelerometerValues -> a
    float[] magneticFieldValues -> b
    com.badlogic.gdx.Input$Orientation nativeOrientation -> c
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> d
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
com.badlogic.gdx.backends.android.AndroidInput$TouchEvent -> com.badlogic.gdx.backends.android.AndroidInput$TouchEvent:
    long timeStamp -> a
    int type -> b
    int x -> c
    int y -> d
    int pointer -> e
com.badlogic.gdx.backends.android.AndroidInputFactory -> com.badlogic.gdx.backends.android.AndroidInputFactory:
    com.badlogic.gdx.backends.android.AndroidInput newAndroidInput(com.badlogic.gdx.Application,android.content.Context,java.lang.Object,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> a
com.badlogic.gdx.backends.android.AndroidInputThreePlus -> com.badlogic.gdx.backends.android.AndroidInputThreePlus:
    java.util.ArrayList genericMotionListeners -> u
    boolean onGenericMotion(android.view.View,android.view.MotionEvent) -> onGenericMotion
com.badlogic.gdx.backends.android.AndroidMultiTouchHandler -> com.badlogic.gdx.backends.android.l:
    void onTouch(android.view.MotionEvent,com.badlogic.gdx.backends.android.AndroidInput) -> a
    void postTouchEvent(com.badlogic.gdx.backends.android.AndroidInput,int,int,int,int,long) -> a
    boolean supportsMultitouch(android.content.Context) -> a
com.badlogic.gdx.backends.android.AndroidMusic -> com.badlogic.gdx.backends.android.m:
    com.badlogic.gdx.backends.android.AndroidAudio audio -> c
    android.media.MediaPlayer player -> d
    boolean isPrepared -> e
    boolean wasPlaying -> a
    com.badlogic.gdx.audio.Music$OnCompletionListener onCompletionListener -> b
    void dispose() -> c
    boolean isPlaying() -> a
    void pause() -> b
    void play() -> d
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.badlogic.gdx.backends.android.AndroidMusic$1 -> com.badlogic.gdx.backends.android.n:
    com.badlogic.gdx.backends.android.AndroidMusic this$0 -> a
    void run() -> run
com.badlogic.gdx.backends.android.AndroidNet -> com.badlogic.gdx.backends.android.o:
    com.badlogic.gdx.backends.android.AndroidApplication app -> a
    com.badlogic.gdx.net.NetJavaImpl netJavaImpl -> b
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard -> com.badlogic.gdx.backends.android.p:
    android.content.Context context -> a
    android.os.Handler handler -> b
    com.badlogic.gdx.backends.android.AndroidInput input -> c
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.badlogic.gdx.backends.android.AndroidSingleTouchHandler -> com.badlogic.gdx.backends.android.q:
    void onTouch(android.view.MotionEvent,com.badlogic.gdx.backends.android.AndroidInput) -> a
    void postTouchEvent(com.badlogic.gdx.backends.android.AndroidInput,int,int,int,int,long) -> a
    boolean supportsMultitouch(android.content.Context) -> a
com.badlogic.gdx.backends.android.AndroidTouchHandler -> com.badlogic.gdx.backends.android.r:
    void onTouch(android.view.MotionEvent,com.badlogic.gdx.backends.android.AndroidInput) -> a
    boolean supportsMultitouch(android.content.Context) -> a
com.badlogic.gdx.backends.android.surfaceview.EGLLogWrapper -> com.badlogic.gdx.backends.android.a.a:
    javax.microedition.khronos.egl.EGL10 mEgl10 -> d
    java.io.Writer mLog -> a
    boolean mLogArgumentNames -> b
    boolean mCheckError -> c
    int mArgCount -> e
    boolean eglChooseConfig(javax.microedition.khronos.egl.EGLDisplay,int[],javax.microedition.khronos.egl.EGLConfig[],int,int[]) -> eglChooseConfig
    boolean eglCopyBuffers(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,java.lang.Object) -> eglCopyBuffers
    javax.microedition.khronos.egl.EGLContext eglCreateContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,javax.microedition.khronos.egl.EGLContext,int[]) -> eglCreateContext
    javax.microedition.khronos.egl.EGLSurface eglCreatePbufferSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int[]) -> eglCreatePbufferSurface
    javax.microedition.khronos.egl.EGLSurface eglCreatePixmapSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[]) -> eglCreatePixmapSurface
    javax.microedition.khronos.egl.EGLSurface eglCreateWindowSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[]) -> eglCreateWindowSurface
    boolean eglDestroyContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> eglDestroyContext
    boolean eglDestroySurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> eglDestroySurface
    boolean eglGetConfigAttrib(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int[]) -> eglGetConfigAttrib
    boolean eglGetConfigs(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[],int,int[]) -> eglGetConfigs
    javax.microedition.khronos.egl.EGLContext eglGetCurrentContext() -> eglGetCurrentContext
    javax.microedition.khronos.egl.EGLDisplay eglGetCurrentDisplay() -> eglGetCurrentDisplay
    javax.microedition.khronos.egl.EGLSurface eglGetCurrentSurface(int) -> eglGetCurrentSurface
    javax.microedition.khronos.egl.EGLDisplay eglGetDisplay(java.lang.Object) -> eglGetDisplay
    int eglGetError() -> eglGetError
    boolean eglInitialize(javax.microedition.khronos.egl.EGLDisplay,int[]) -> eglInitialize
    boolean eglMakeCurrent(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLContext) -> eglMakeCurrent
    boolean eglQueryContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext,int,int[]) -> eglQueryContext
    java.lang.String eglQueryString(javax.microedition.khronos.egl.EGLDisplay,int) -> eglQueryString
    boolean eglQuerySurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,int,int[]) -> eglQuerySurface
    boolean eglSwapBuffers(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> eglSwapBuffers
    boolean eglTerminate(javax.microedition.khronos.egl.EGLDisplay) -> eglTerminate
    boolean eglWaitGL() -> eglWaitGL
    boolean eglWaitNative(int,java.lang.Object) -> eglWaitNative
    void checkError() -> a
    void logLine(java.lang.String) -> a
    void log(java.lang.String) -> b
    void begin(java.lang.String) -> c
    void arg(java.lang.String,java.lang.String) -> a
    void end() -> b
    void flush() -> c
    void arg(java.lang.String,int) -> a
    void arg(java.lang.String,java.lang.Object) -> a
    void arg(java.lang.String,javax.microedition.khronos.egl.EGLDisplay) -> a
    void arg(java.lang.String,javax.microedition.khronos.egl.EGLContext) -> a
    void arg(java.lang.String,javax.microedition.khronos.egl.EGLSurface) -> a
    void returns(java.lang.String) -> d
    void returns(int) -> b
    void returns(boolean) -> a
    void returns(java.lang.Object) -> a
    java.lang.String toString(java.lang.Object) -> b
    void arg(java.lang.String,int[]) -> a
    void arg(java.lang.String,java.lang.Object[]) -> a
    java.lang.String toString(int,int[],int) -> a
    java.lang.String toString(int,java.lang.Object[],int) -> a
    java.lang.String getHex(int) -> c
    java.lang.String getErrorString(int) -> a
com.badlogic.gdx.backends.android.surfaceview.FillResolutionStrategy -> com.badlogic.gdx.backends.android.a.b:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> a
com.badlogic.gdx.backends.android.surfaceview.GLDebugHelper -> com.badlogic.gdx.backends.android.a.c:
    javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL,int,java.io.Writer) -> a
com.badlogic.gdx.backends.android.surfaceview.GLErrorWrapper -> com.badlogic.gdx.backends.android.a.d:
    boolean mCheckError -> a
    boolean mCheckThread -> b
    java.lang.Thread mOurThread -> c
    void checkThread() -> a
    void checkError() -> b
    void glActiveTexture(int) -> glActiveTexture
    void glAlphaFunc(int,float) -> glAlphaFunc
    void glAlphaFuncx(int,int) -> glAlphaFuncx
    void glBindTexture(int,int) -> glBindTexture
    void glBlendFunc(int,int) -> glBlendFunc
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glClearColorx(int,int,int,int) -> glClearColorx
    void glClearDepthf(float) -> glClearDepthf
    void glClearDepthx(int) -> glClearDepthx
    void glClearStencil(int) -> glClearStencil
    void glClientActiveTexture(int) -> glClientActiveTexture
    void glColor4f(float,float,float,float) -> glColor4f
    void glColor4x(int,int,int,int) -> glColor4x
    void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    void glColorPointer(int,int,int,java.nio.Buffer) -> glColorPointer
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    void glCullFace(int) -> glCullFace
    void glDeleteTextures(int,int[],int) -> glDeleteTextures
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthFunc(int) -> glDepthFunc
    void glDepthMask(boolean) -> glDepthMask
    void glDepthRangef(float,float) -> glDepthRangef
    void glDepthRangex(int,int) -> glDepthRangex
    void glDisable(int) -> glDisable
    void glDisableClientState(int) -> glDisableClientState
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glEnable(int) -> glEnable
    void glEnableClientState(int) -> glEnableClientState
    void glFinish() -> glFinish
    void glFlush() -> glFlush
    void glFogf(int,float) -> glFogf
    void glFogfv(int,float[],int) -> glFogfv
    void glFogfv(int,java.nio.FloatBuffer) -> glFogfv
    void glFogx(int,int) -> glFogx
    void glFogxv(int,int[],int) -> glFogxv
    void glFogxv(int,java.nio.IntBuffer) -> glFogxv
    void glFrontFace(int) -> glFrontFace
    void glFrustumf(float,float,float,float,float,float) -> glFrustumf
    void glFrustumx(int,int,int,int,int,int) -> glFrustumx
    void glGenTextures(int,int[],int) -> glGenTextures
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    int glGetError() -> glGetError
    void glGetIntegerv(int,int[],int) -> glGetIntegerv
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    java.lang.String glGetString(int) -> glGetString
    void glHint(int,int) -> glHint
    void glLightModelf(int,float) -> glLightModelf
    void glLightModelfv(int,float[],int) -> glLightModelfv
    void glLightModelfv(int,java.nio.FloatBuffer) -> glLightModelfv
    void glLightModelx(int,int) -> glLightModelx
    void glLightModelxv(int,int[],int) -> glLightModelxv
    void glLightModelxv(int,java.nio.IntBuffer) -> glLightModelxv
    void glLightf(int,int,float) -> glLightf
    void glLightfv(int,int,float[],int) -> glLightfv
    void glLightfv(int,int,java.nio.FloatBuffer) -> glLightfv
    void glLightx(int,int,int) -> glLightx
    void glLightxv(int,int,int[],int) -> glLightxv
    void glLightxv(int,int,java.nio.IntBuffer) -> glLightxv
    void glLineWidth(float) -> glLineWidth
    void glLineWidthx(int) -> glLineWidthx
    void glLoadIdentity() -> glLoadIdentity
    void glLoadMatrixf(float[],int) -> glLoadMatrixf
    void glLoadMatrixf(java.nio.FloatBuffer) -> glLoadMatrixf
    void glLoadMatrixx(int[],int) -> glLoadMatrixx
    void glLoadMatrixx(java.nio.IntBuffer) -> glLoadMatrixx
    void glLogicOp(int) -> glLogicOp
    void glMaterialf(int,int,float) -> glMaterialf
    void glMaterialfv(int,int,float[],int) -> glMaterialfv
    void glMaterialfv(int,int,java.nio.FloatBuffer) -> glMaterialfv
    void glMaterialx(int,int,int) -> glMaterialx
    void glMaterialxv(int,int,int[],int) -> glMaterialxv
    void glMaterialxv(int,int,java.nio.IntBuffer) -> glMaterialxv
    void glMatrixMode(int) -> glMatrixMode
    void glMultMatrixf(float[],int) -> glMultMatrixf
    void glMultMatrixf(java.nio.FloatBuffer) -> glMultMatrixf
    void glMultMatrixx(int[],int) -> glMultMatrixx
    void glMultMatrixx(java.nio.IntBuffer) -> glMultMatrixx
    void glMultiTexCoord4f(int,float,float,float,float) -> glMultiTexCoord4f
    void glMultiTexCoord4x(int,int,int,int,int) -> glMultiTexCoord4x
    void glNormal3f(float,float,float) -> glNormal3f
    void glNormal3x(int,int,int) -> glNormal3x
    void glNormalPointer(int,int,java.nio.Buffer) -> glNormalPointer
    void glOrthof(float,float,float,float,float,float) -> glOrthof
    void glOrthox(int,int,int,int,int,int) -> glOrthox
    void glPixelStorei(int,int) -> glPixelStorei
    void glPointSize(float) -> glPointSize
    void glPointSizex(int) -> glPointSizex
    void glPolygonOffset(float,float) -> glPolygonOffset
    void glPolygonOffsetx(int,int) -> glPolygonOffsetx
    void glPopMatrix() -> glPopMatrix
    void glPushMatrix() -> glPushMatrix
    void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    void glRotatef(float,float,float,float) -> glRotatef
    void glRotatex(int,int,int,int) -> glRotatex
    void glSampleCoverage(float,boolean) -> glSampleCoverage
    void glSampleCoveragex(int,boolean) -> glSampleCoveragex
    void glScalef(float,float,float) -> glScalef
    void glScalex(int,int,int) -> glScalex
    void glScissor(int,int,int,int) -> glScissor
    void glShadeModel(int) -> glShadeModel
    void glStencilFunc(int,int,int) -> glStencilFunc
    void glStencilMask(int) -> glStencilMask
    void glStencilOp(int,int,int) -> glStencilOp
    void glTexCoordPointer(int,int,int,java.nio.Buffer) -> glTexCoordPointer
    void glTexEnvf(int,int,float) -> glTexEnvf
    void glTexEnvfv(int,int,float[],int) -> glTexEnvfv
    void glTexEnvfv(int,int,java.nio.FloatBuffer) -> glTexEnvfv
    void glTexEnvx(int,int,int) -> glTexEnvx
    void glTexEnvxv(int,int,int[],int) -> glTexEnvxv
    void glTexEnvxv(int,int,java.nio.IntBuffer) -> glTexEnvxv
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glTexParameterx(int,int,int) -> glTexParameterx
    void glTexParameteriv(int,int,int[],int) -> glTexParameteriv
    void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    void glTranslatef(float,float,float) -> glTranslatef
    void glTranslatex(int,int,int) -> glTranslatex
    void glVertexPointer(int,int,int,java.nio.Buffer) -> glVertexPointer
    void glViewport(int,int,int,int) -> glViewport
    void glClipPlanef(int,float[],int) -> glClipPlanef
    void glClipPlanef(int,java.nio.FloatBuffer) -> glClipPlanef
    void glClipPlanex(int,int[],int) -> glClipPlanex
    void glClipPlanex(int,java.nio.IntBuffer) -> glClipPlanex
    void glDrawTexfOES(float,float,float,float,float) -> glDrawTexfOES
    void glDrawTexfvOES(float[],int) -> glDrawTexfvOES
    void glDrawTexfvOES(java.nio.FloatBuffer) -> glDrawTexfvOES
    void glDrawTexiOES(int,int,int,int,int) -> glDrawTexiOES
    void glDrawTexivOES(int[],int) -> glDrawTexivOES
    void glDrawTexivOES(java.nio.IntBuffer) -> glDrawTexivOES
    void glDrawTexsOES(short,short,short,short,short) -> glDrawTexsOES
    void glDrawTexsvOES(short[],int) -> glDrawTexsvOES
    void glDrawTexsvOES(java.nio.ShortBuffer) -> glDrawTexsvOES
    void glDrawTexxOES(int,int,int,int,int) -> glDrawTexxOES
    void glDrawTexxvOES(int[],int) -> glDrawTexxvOES
    void glDrawTexxvOES(java.nio.IntBuffer) -> glDrawTexxvOES
    int glQueryMatrixxOES(int[],int,int[],int) -> glQueryMatrixxOES
    int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer) -> glQueryMatrixxOES
com.badlogic.gdx.backends.android.surfaceview.GLException -> com.badlogic.gdx.backends.android.a.e:
    int mError -> a
    java.lang.String getErrorString(int) -> a
com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper -> com.badlogic.gdx.backends.android.a.f:
    java.io.Writer mLog -> k
    boolean mLogArgumentNames -> l
    int mArgCount -> m
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo mColorPointer -> n
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo mNormalPointer -> o
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo mTexCoordPointer -> p
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo mVertexPointer -> q
    boolean mColorArrayEnabled -> a
    boolean mNormalArrayEnabled -> b
    boolean mTextureCoordArrayEnabled -> c
    boolean mVertexArrayEnabled -> d
    java.lang.StringBuilder mStringBuilder -> e
    void checkError() -> a
    void logLine(java.lang.String) -> a
    void log(java.lang.String) -> b
    void begin(java.lang.String) -> c
    void arg(java.lang.String,java.lang.String) -> a
    void end() -> b
    void flush() -> c
    void arg(java.lang.String,boolean) -> a
    void arg(java.lang.String,int) -> a
    void arg(java.lang.String,float) -> a
    void returns(java.lang.String) -> d
    void returns(int) -> a
    void arg(java.lang.String,int,int[],int) -> a
    void arg(java.lang.String,int,short[],int) -> a
    void arg(java.lang.String,int,float[],int) -> a
    void formattedAppend(java.lang.StringBuilder,int,int) -> a
    java.lang.String toString(int,int,int[],int) -> a
    java.lang.String toString(int,short[],int) -> a
    java.lang.String toString(int,float[],int) -> a
    java.lang.String toString(int,java.nio.FloatBuffer) -> a
    java.lang.String toString(int,int,java.nio.IntBuffer) -> a
    java.lang.String toString(int,java.nio.ShortBuffer) -> a
    void arg(java.lang.String,int,java.nio.FloatBuffer) -> a
    void arg(java.lang.String,int,java.nio.IntBuffer) -> a
    void arg(java.lang.String,int,java.nio.ShortBuffer) -> a
    void argPointer(int,int,int,java.nio.Buffer) -> a
    java.lang.String getHex(int) -> b
    java.lang.String getClearBufferMask(int) -> c
    java.lang.String getFactor(int) -> d
    java.lang.String getShadeModel(int) -> e
    java.lang.String getTextureTarget(int) -> f
    java.lang.String getTextureEnvTarget(int) -> g
    java.lang.String getTextureEnvPName(int) -> h
    int getTextureEnvParamCount(int) -> i
    java.lang.String getTextureEnvParamName(float) -> a
    java.lang.String getMatrixMode(int) -> j
    java.lang.String getClientState(int) -> k
    java.lang.String getCap(int) -> l
    java.lang.String getTexturePName(int) -> m
    java.lang.String getTextureParamName(float) -> b
    java.lang.String getFogPName(int) -> n
    int getFogParamCount(int) -> o
    java.lang.String getBeginMode(int) -> p
    java.lang.String getIndexType(int) -> q
    java.lang.String getIntegerStateName(int) -> r
    int getIntegerStateSize(int) -> s
    int getIntegerStateFormat(int) -> t
    java.lang.String getHintTarget(int) -> u
    java.lang.String getHintMode(int) -> v
    java.lang.String getFaceName(int) -> w
    java.lang.String getMaterialPName(int) -> x
    int getMaterialParamCount(int) -> y
    java.lang.String getLightName(int) -> z
    java.lang.String getLightPName(int) -> A
    int getLightParamCount(int) -> B
    java.lang.String getLightModelPName(int) -> C
    int getLightModelParamCount(int) -> D
    java.lang.String getPointerTypeName(int) -> E
    java.nio.ByteBuffer toByteBuffer(int,java.nio.Buffer) -> a
    char[] toCharIndices(int,int,java.nio.Buffer) -> a
    void doArrayElement(java.lang.StringBuilder,boolean,java.lang.String,com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo,int) -> a
    void doElement(java.lang.StringBuilder,int,int) -> b
    void bindArrays() -> d
    void unbindArrays() -> e
    void startLogIndices() -> f
    void endLogIndices() -> g
    void glActiveTexture(int) -> glActiveTexture
    void glAlphaFunc(int,float) -> glAlphaFunc
    void glAlphaFuncx(int,int) -> glAlphaFuncx
    void glBindTexture(int,int) -> glBindTexture
    void glBlendFunc(int,int) -> glBlendFunc
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glClearColorx(int,int,int,int) -> glClearColorx
    void glClearDepthf(float) -> glClearDepthf
    void glClearDepthx(int) -> glClearDepthx
    void glClearStencil(int) -> glClearStencil
    void glClientActiveTexture(int) -> glClientActiveTexture
    void glColor4f(float,float,float,float) -> glColor4f
    void glColor4x(int,int,int,int) -> glColor4x
    void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    void glColorPointer(int,int,int,java.nio.Buffer) -> glColorPointer
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    void glCullFace(int) -> glCullFace
    void glDeleteTextures(int,int[],int) -> glDeleteTextures
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthFunc(int) -> glDepthFunc
    void glDepthMask(boolean) -> glDepthMask
    void glDepthRangef(float,float) -> glDepthRangef
    void glDepthRangex(int,int) -> glDepthRangex
    void glDisable(int) -> glDisable
    void glDisableClientState(int) -> glDisableClientState
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glEnable(int) -> glEnable
    void glEnableClientState(int) -> glEnableClientState
    void glFinish() -> glFinish
    void glFlush() -> glFlush
    void glFogf(int,float) -> glFogf
    void glFogfv(int,float[],int) -> glFogfv
    void glFogfv(int,java.nio.FloatBuffer) -> glFogfv
    void glFogx(int,int) -> glFogx
    void glFogxv(int,int[],int) -> glFogxv
    void glFogxv(int,java.nio.IntBuffer) -> glFogxv
    void glFrontFace(int) -> glFrontFace
    void glFrustumf(float,float,float,float,float,float) -> glFrustumf
    void glFrustumx(int,int,int,int,int,int) -> glFrustumx
    void glGenTextures(int,int[],int) -> glGenTextures
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    int glGetError() -> glGetError
    void glGetIntegerv(int,int[],int) -> glGetIntegerv
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    java.lang.String glGetString(int) -> glGetString
    void glHint(int,int) -> glHint
    void glLightModelf(int,float) -> glLightModelf
    void glLightModelfv(int,float[],int) -> glLightModelfv
    void glLightModelfv(int,java.nio.FloatBuffer) -> glLightModelfv
    void glLightModelx(int,int) -> glLightModelx
    void glLightModelxv(int,int[],int) -> glLightModelxv
    void glLightModelxv(int,java.nio.IntBuffer) -> glLightModelxv
    void glLightf(int,int,float) -> glLightf
    void glLightfv(int,int,float[],int) -> glLightfv
    void glLightfv(int,int,java.nio.FloatBuffer) -> glLightfv
    void glLightx(int,int,int) -> glLightx
    void glLightxv(int,int,int[],int) -> glLightxv
    void glLightxv(int,int,java.nio.IntBuffer) -> glLightxv
    void glLineWidth(float) -> glLineWidth
    void glLineWidthx(int) -> glLineWidthx
    void glLoadIdentity() -> glLoadIdentity
    void glLoadMatrixf(float[],int) -> glLoadMatrixf
    void glLoadMatrixf(java.nio.FloatBuffer) -> glLoadMatrixf
    void glLoadMatrixx(int[],int) -> glLoadMatrixx
    void glLoadMatrixx(java.nio.IntBuffer) -> glLoadMatrixx
    void glLogicOp(int) -> glLogicOp
    void glMaterialf(int,int,float) -> glMaterialf
    void glMaterialfv(int,int,float[],int) -> glMaterialfv
    void glMaterialfv(int,int,java.nio.FloatBuffer) -> glMaterialfv
    void glMaterialx(int,int,int) -> glMaterialx
    void glMaterialxv(int,int,int[],int) -> glMaterialxv
    void glMaterialxv(int,int,java.nio.IntBuffer) -> glMaterialxv
    void glMatrixMode(int) -> glMatrixMode
    void glMultMatrixf(float[],int) -> glMultMatrixf
    void glMultMatrixf(java.nio.FloatBuffer) -> glMultMatrixf
    void glMultMatrixx(int[],int) -> glMultMatrixx
    void glMultMatrixx(java.nio.IntBuffer) -> glMultMatrixx
    void glMultiTexCoord4f(int,float,float,float,float) -> glMultiTexCoord4f
    void glMultiTexCoord4x(int,int,int,int,int) -> glMultiTexCoord4x
    void glNormal3f(float,float,float) -> glNormal3f
    void glNormal3x(int,int,int) -> glNormal3x
    void glNormalPointer(int,int,java.nio.Buffer) -> glNormalPointer
    void glOrthof(float,float,float,float,float,float) -> glOrthof
    void glOrthox(int,int,int,int,int,int) -> glOrthox
    void glPixelStorei(int,int) -> glPixelStorei
    void glPointSize(float) -> glPointSize
    void glPointSizex(int) -> glPointSizex
    void glPolygonOffset(float,float) -> glPolygonOffset
    void glPolygonOffsetx(int,int) -> glPolygonOffsetx
    void glPopMatrix() -> glPopMatrix
    void glPushMatrix() -> glPushMatrix
    void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    void glRotatef(float,float,float,float) -> glRotatef
    void glRotatex(int,int,int,int) -> glRotatex
    void glSampleCoverage(float,boolean) -> glSampleCoverage
    void glSampleCoveragex(int,boolean) -> glSampleCoveragex
    void glScalef(float,float,float) -> glScalef
    void glScalex(int,int,int) -> glScalex
    void glScissor(int,int,int,int) -> glScissor
    void glShadeModel(int) -> glShadeModel
    void glStencilFunc(int,int,int) -> glStencilFunc
    void glStencilMask(int) -> glStencilMask
    void glStencilOp(int,int,int) -> glStencilOp
    void glTexCoordPointer(int,int,int,java.nio.Buffer) -> glTexCoordPointer
    void glTexEnvf(int,int,float) -> glTexEnvf
    void glTexEnvfv(int,int,float[],int) -> glTexEnvfv
    void glTexEnvfv(int,int,java.nio.FloatBuffer) -> glTexEnvfv
    void glTexEnvx(int,int,int) -> glTexEnvx
    void glTexEnvxv(int,int,int[],int) -> glTexEnvxv
    void glTexEnvxv(int,int,java.nio.IntBuffer) -> glTexEnvxv
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glTexParameterx(int,int,int) -> glTexParameterx
    void glTexParameteriv(int,int,int[],int) -> glTexParameteriv
    void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    void glTranslatef(float,float,float) -> glTranslatef
    void glTranslatex(int,int,int) -> glTranslatex
    void glVertexPointer(int,int,int,java.nio.Buffer) -> glVertexPointer
    void glViewport(int,int,int,int) -> glViewport
    void glClipPlanef(int,float[],int) -> glClipPlanef
    void glClipPlanef(int,java.nio.FloatBuffer) -> glClipPlanef
    void glClipPlanex(int,int[],int) -> glClipPlanex
    void glClipPlanex(int,java.nio.IntBuffer) -> glClipPlanex
    void glDrawTexfOES(float,float,float,float,float) -> glDrawTexfOES
    void glDrawTexfvOES(float[],int) -> glDrawTexfvOES
    void glDrawTexfvOES(java.nio.FloatBuffer) -> glDrawTexfvOES
    void glDrawTexiOES(int,int,int,int,int) -> glDrawTexiOES
    void glDrawTexivOES(int[],int) -> glDrawTexivOES
    void glDrawTexivOES(java.nio.IntBuffer) -> glDrawTexivOES
    void glDrawTexsOES(short,short,short,short,short) -> glDrawTexsOES
    void glDrawTexsvOES(short[],int) -> glDrawTexsvOES
    void glDrawTexsvOES(java.nio.ShortBuffer) -> glDrawTexsvOES
    void glDrawTexxOES(int,int,int,int,int) -> glDrawTexxOES
    void glDrawTexxvOES(int[],int) -> glDrawTexxvOES
    void glDrawTexxvOES(java.nio.IntBuffer) -> glDrawTexxvOES
    int glQueryMatrixxOES(int[],int,int[],int) -> glQueryMatrixxOES
    int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer) -> glQueryMatrixxOES
    void glBindBuffer(int,int) -> glBindBuffer
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    void glColor4ub(byte,byte,byte,byte) -> glColor4ub
    void glDeleteBuffers(int,int[],int) -> glDeleteBuffers
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glGenBuffers(int,int[],int) -> glGenBuffers
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGetBooleanv(int,boolean[],int) -> glGetBooleanv
    void glGetBooleanv(int,java.nio.IntBuffer) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,int[],int) -> glGetBufferParameteriv
    void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    void glGetClipPlanef(int,float[],int) -> glGetClipPlanef
    void glGetClipPlanef(int,java.nio.FloatBuffer) -> glGetClipPlanef
    void glGetClipPlanex(int,int[],int) -> glGetClipPlanex
    void glGetClipPlanex(int,java.nio.IntBuffer) -> glGetClipPlanex
    void glGetFixedv(int,int[],int) -> glGetFixedv
    void glGetFixedv(int,java.nio.IntBuffer) -> glGetFixedv
    void glGetFloatv(int,float[],int) -> glGetFloatv
    void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    void glGetLightfv(int,int,float[],int) -> glGetLightfv
    void glGetLightfv(int,int,java.nio.FloatBuffer) -> glGetLightfv
    void glGetLightxv(int,int,int[],int) -> glGetLightxv
    void glGetLightxv(int,int,java.nio.IntBuffer) -> glGetLightxv
    void glGetMaterialfv(int,int,float[],int) -> glGetMaterialfv
    void glGetMaterialfv(int,int,java.nio.FloatBuffer) -> glGetMaterialfv
    void glGetMaterialxv(int,int,int[],int) -> glGetMaterialxv
    void glGetMaterialxv(int,int,java.nio.IntBuffer) -> glGetMaterialxv
    void glGetTexEnviv(int,int,int[],int) -> glGetTexEnviv
    void glGetTexEnviv(int,int,java.nio.IntBuffer) -> glGetTexEnviv
    void glGetTexEnvxv(int,int,int[],int) -> glGetTexEnvxv
    void glGetTexEnvxv(int,int,java.nio.IntBuffer) -> glGetTexEnvxv
    void glGetTexParameterfv(int,int,float[],int) -> glGetTexParameterfv
    void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    void glGetTexParameteriv(int,int,int[],int) -> glGetTexParameteriv
    void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    void glGetTexParameterxv(int,int,int[],int) -> glGetTexParameterxv
    void glGetTexParameterxv(int,int,java.nio.IntBuffer) -> glGetTexParameterxv
    boolean glIsBuffer(int) -> glIsBuffer
    boolean glIsEnabled(int) -> glIsEnabled
    boolean glIsTexture(int) -> glIsTexture
    void glPointParameterf(int,float) -> glPointParameterf
    void glPointParameterfv(int,float[],int) -> glPointParameterfv
    void glPointParameterfv(int,java.nio.FloatBuffer) -> glPointParameterfv
    void glPointParameterx(int,int) -> glPointParameterx
    void glPointParameterxv(int,int[],int) -> glPointParameterxv
    void glPointParameterxv(int,java.nio.IntBuffer) -> glPointParameterxv
    void glPointSizePointerOES(int,int,java.nio.Buffer) -> glPointSizePointerOES
    void glTexEnvi(int,int,int) -> glTexEnvi
    void glTexEnviv(int,int,int[],int) -> glTexEnviv
    void glTexEnviv(int,int,java.nio.IntBuffer) -> glTexEnviv
    void glTexParameterfv(int,int,float[],int) -> glTexParameterfv
    void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    void glTexParameteri(int,int,int) -> glTexParameteri
    void glTexParameterxv(int,int,int[],int) -> glTexParameterxv
    void glTexParameterxv(int,int,java.nio.IntBuffer) -> glTexParameterxv
com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo -> com.badlogic.gdx.backends.android.a.g:
    int mSize -> a
    int mType -> b
    int mStride -> c
    java.nio.Buffer mPointer -> d
    java.nio.ByteBuffer mTempByteBuffer -> e
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper this$0 -> f
    int sizeof(int) -> a
    int getStride() -> a
    void bindByteBuffer() -> b
    void unbindByteBuffer() -> c
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20 -> com.badlogic.gdx.backends.android.a.h:
    java.lang.String TAG -> a
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> b
    void onMeasure(int,int) -> onMeasure
    android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    void init(boolean,int,int) -> a
    void checkEglError(java.lang.String,javax.microedition.khronos.egl.EGL10) -> a
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$1 -> com.badlogic.gdx.backends.android.a.i:
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20 this$0 -> a
    boolean deleteSurroundingText(int,int) -> deleteSurroundingText
    void sendDownUpKeyEventForBackwardCompatibility(int) -> a
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser -> com.badlogic.gdx.backends.android.a.j:
    int EGL_OPENGL_ES2_BIT -> g
    int[] s_configAttribs2 -> h
    int mRedSize -> a
    int mGreenSize -> b
    int mBlueSize -> c
    int mAlphaSize -> d
    int mDepthSize -> e
    int mStencilSize -> f
    int[] mValue -> i
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> a
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> a
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ContextFactory -> com.badlogic.gdx.backends.android.a.k:
    int EGL_CONTEXT_CLIENT_VERSION -> a
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18 -> com.badlogic.gdx.backends.android.a.l:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> a
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThreadManager sGLThreadManager -> b
    java.lang.ref.WeakReference mThisWeakRef -> c
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread mGLThread -> d
    android.opengl.GLSurfaceView$Renderer mRenderer -> e
    boolean mDetached -> f
    android.opengl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser -> g
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLContextFactory mEGLContextFactory -> h
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLWindowSurfaceFactory mEGLWindowSurfaceFactory -> i
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLWrapper mGLWrapper -> j
    int mDebugFlags -> k
    int mEGLContextClientVersion -> l
    boolean mPreserveEGLContextOnPause -> m
    void onMeasure(int,int) -> onMeasure
    void finalize() -> finalize
    void init() -> e
    void setGLWrapper(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLWrapper) -> setGLWrapper
    void setDebugFlags(int) -> setDebugFlags
    int getDebugFlags() -> getDebugFlags
    void setPreserveEGLContextOnPause(boolean) -> setPreserveEGLContextOnPause
    boolean getPreserveEGLContextOnPause() -> getPreserveEGLContextOnPause
    void setRenderer(android.opengl.GLSurfaceView$Renderer) -> setRenderer
    void setEGLContextFactory(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLContextFactory) -> setEGLContextFactory
    void setEGLWindowSurfaceFactory(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLWindowSurfaceFactory) -> setEGLWindowSurfaceFactory
    void setEGLConfigChooser(android.opengl.GLSurfaceView$EGLConfigChooser) -> setEGLConfigChooser
    void setEGLConfigChooser(boolean) -> setEGLConfigChooser
    void setEGLConfigChooser(int,int,int,int,int,int) -> a
    void setEGLContextClientVersion(int) -> setEGLContextClientVersion
    void setRenderMode(int) -> setRenderMode
    int getRenderMode() -> getRenderMode
    void requestRender() -> a
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void onPause() -> b
    void onResume() -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void checkRenderThreadState() -> f
    int access$0(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18) -> a
    android.opengl.GLSurfaceView$EGLConfigChooser access$1(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18) -> b
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLContextFactory access$2(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18) -> c
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLWindowSurfaceFactory access$3(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18) -> d
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLWrapper access$4(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18) -> e
    int access$5(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18) -> f
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThreadManager access$6() -> d
    boolean access$7(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18) -> g
    android.opengl.GLSurfaceView$Renderer access$8(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18) -> h
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$BaseConfigChooser -> com.badlogic.gdx.backends.android.a.m:
    int[] mConfigSpec -> a
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18 this$0 -> b
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> a
    int[] filterConfigSpec(int[]) -> a
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$ComponentSizeChooser -> com.badlogic.gdx.backends.android.a.n:
    int[] mValue -> j
    int mRedSize -> c
    int mGreenSize -> d
    int mBlueSize -> e
    int mAlphaSize -> f
    int mDepthSize -> g
    int mStencilSize -> h
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18 this$0 -> i
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> a
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> a
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$DefaultContextFactory -> com.badlogic.gdx.backends.android.a.o:
    int EGL_CONTEXT_CLIENT_VERSION -> b
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18 this$0 -> a
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> a
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> a
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$DefaultWindowSurfaceFactory -> com.badlogic.gdx.backends.android.a.p:
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> a
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> a
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLContextFactory -> com.badlogic.gdx.backends.android.a.q:
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> a
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> a
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLWindowSurfaceFactory -> com.badlogic.gdx.backends.android.a.r:
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> a
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> a
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EglHelper -> com.badlogic.gdx.backends.android.a.s:
    java.lang.ref.WeakReference mGLSurfaceViewWeakRef -> f
    javax.microedition.khronos.egl.EGL10 mEgl -> a
    javax.microedition.khronos.egl.EGLDisplay mEglDisplay -> b
    javax.microedition.khronos.egl.EGLSurface mEglSurface -> c
    javax.microedition.khronos.egl.EGLConfig mEglConfig -> d
    javax.microedition.khronos.egl.EGLContext mEglContext -> e
    void start() -> a
    boolean createSurface() -> b
    javax.microedition.khronos.opengles.GL createGL() -> c
    int swap() -> d
    void destroySurface() -> e
    void destroySurfaceImp() -> g
    void finish() -> f
    void throwEglException(java.lang.String) -> a
    void throwEglException(java.lang.String,int) -> a
    void logEglErrorAsWarning(java.lang.String,java.lang.String,int) -> a
    java.lang.String formatEglError(java.lang.String,int) -> b
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread -> com.badlogic.gdx.backends.android.a.t:
    boolean mShouldExit -> a
    boolean mExited -> b
    boolean mRequestPaused -> c
    boolean mPaused -> d
    boolean mHasSurface -> e
    boolean mSurfaceIsBad -> f
    boolean mWaitingForSurface -> g
    boolean mHaveEglContext -> h
    boolean mHaveEglSurface -> i
    boolean mFinishedCreatingEglSurface -> j
    boolean mShouldReleaseEglContext -> k
    int mWidth -> l
    int mHeight -> m
    int mRenderMode -> n
    boolean mRequestRender -> o
    boolean mRenderComplete -> p
    java.util.ArrayList mEventQueue -> q
    boolean mSizeChanged -> r
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EglHelper mEglHelper -> s
    java.lang.ref.WeakReference mGLSurfaceViewWeakRef -> t
    void run() -> run
    void stopEglSurfaceLocked() -> j
    void stopEglContextLocked() -> k
    void guardedRun() -> l
    boolean ableToDraw() -> a
    boolean readyToDraw() -> m
    void setRenderMode(int) -> a
    int getRenderMode() -> b
    void requestRender() -> c
    void surfaceCreated() -> d
    void surfaceDestroyed() -> e
    void onPause() -> f
    void onResume() -> g
    void onWindowResize(int,int) -> a
    void requestExitAndWait() -> h
    void requestReleaseEglContextLocked() -> i
    void access$0(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread,boolean) -> a
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThreadManager -> com.badlogic.gdx.backends.android.a.u:
    java.lang.String TAG -> a
    boolean mGLESVersionCheckComplete -> b
    int mGLESVersion -> c
    boolean mGLESDriverCheckComplete -> d
    boolean mMultipleGLESContextsAllowed -> e
    boolean mLimitedGLESContexts -> f
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread mEglOwner -> g
    void threadExiting(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread) -> a
    boolean tryAcquireEglContextLocked(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread) -> b
    void releaseEglContextLocked(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread) -> c
    boolean shouldReleaseEGLContextWhenPausing() -> a
    boolean shouldTerminateEGLWhenPausing() -> b
    void checkGLDriver(javax.microedition.khronos.opengles.GL10) -> a
    void checkGLESVersion() -> c
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLWrapper -> com.badlogic.gdx.backends.android.a.v:
    javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL) -> a
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$LogWriter -> com.badlogic.gdx.backends.android.a.w:
    java.lang.StringBuilder mBuilder -> a
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$SimpleEGLConfigChooser -> com.badlogic.gdx.backends.android.a.x:
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18 this$0 -> j
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake -> com.badlogic.gdx.backends.android.a.y:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> a
    java.lang.Object sEglLock -> b
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLThread mGLThread -> e
    android.opengl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser -> c
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLWrapper mGLWrapper -> d
    int mDebugFlags -> f
    int mRenderMode -> g
    android.opengl.GLSurfaceView$Renderer mRenderer -> h
    int mSurfaceWidth -> i
    int mSurfaceHeight -> j
    boolean mHasSurface -> k
    void onMeasure(int,int) -> onMeasure
    void init() -> d
    void setGLWrapper(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLWrapper) -> setGLWrapper
    void setDebugFlags(int) -> setDebugFlags
    int getDebugFlags() -> getDebugFlags
    void setRenderer(android.opengl.GLSurfaceView$Renderer) -> setRenderer
    void setEGLConfigChooser(android.opengl.GLSurfaceView$EGLConfigChooser) -> setEGLConfigChooser
    void setEGLConfigChooser(boolean) -> setEGLConfigChooser
    void setEGLConfigChooser(int,int,int,int,int,int) -> a
    void setRenderMode(int) -> setRenderMode
    int getRenderMode() -> getRenderMode
    void requestRender() -> a
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void onPause() -> b
    void onResume() -> c
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$BaseConfigChooser -> com.badlogic.gdx.backends.android.a.z:
    int[] mConfigSpec -> a
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> a
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$ComponentSizeChooser -> com.badlogic.gdx.backends.android.a.aa:
    int[] mValue -> h
    int mRedSize -> b
    int mGreenSize -> c
    int mBlueSize -> d
    int mAlphaSize -> e
    int mDepthSize -> f
    int mStencilSize -> g
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> a
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> a
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$EglHelper -> com.badlogic.gdx.backends.android.a.ab:
    javax.microedition.khronos.egl.EGL10 mEgl -> a
    javax.microedition.khronos.egl.EGLDisplay mEglDisplay -> b
    javax.microedition.khronos.egl.EGLSurface mEglSurface -> c
    javax.microedition.khronos.egl.EGLConfig mEglConfig -> d
    javax.microedition.khronos.egl.EGLContext mEglContext -> e
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake this$0 -> f
    void start() -> a
    javax.microedition.khronos.opengles.GL createSurface(android.view.SurfaceHolder) -> a
    boolean swap() -> b
    void finish() -> c
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLThread -> com.badlogic.gdx.backends.android.a.ac:
    boolean mDone -> b
    boolean mPaused -> c
    boolean mHasSurface -> d
    int mWidth -> e
    int mHeight -> f
    int mRenderMode -> g
    boolean mRequestRender -> h
    android.opengl.GLSurfaceView$Renderer mRenderer -> i
    java.util.ArrayList mEventQueue -> j
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$EglHelper mEglHelper -> k
    boolean mSizeChanged -> l
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake this$0 -> a
    void run() -> run
    void guardedRun() -> g
    boolean needToWait() -> h
    void setRenderMode(int) -> a
    void requestRender() -> a
    void surfaceCreated() -> b
    void surfaceDestroyed() -> c
    void onPause() -> d
    void onResume() -> e
    void onWindowResize(int,int) -> a
    void requestExitAndWait() -> f
    java.lang.Runnable getEvent() -> i
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLWrapper -> com.badlogic.gdx.backends.android.a.ad:
    javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL) -> a
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$SimpleEGLConfigChooser -> com.badlogic.gdx.backends.android.a.ae:
com.badlogic.gdx.backends.android.surfaceview.GLWrapperBase -> com.badlogic.gdx.backends.android.a.af:
    javax.microedition.khronos.opengles.GL10 mgl -> f
    javax.microedition.khronos.opengles.GL10Ext mgl10Ext -> g
    javax.microedition.khronos.opengles.GL11 mgl11 -> h
    javax.microedition.khronos.opengles.GL11Ext mgl11Ext -> i
    javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack -> j
    void glGetPointerv(int,java.nio.Buffer[]) -> glGetPointerv
    void glColorPointer(int,int,int,int) -> glColorPointer
    void glNormalPointer(int,int,int) -> glNormalPointer
    void glTexCoordPointer(int,int,int,int) -> glTexCoordPointer
    void glVertexPointer(int,int,int,int) -> glVertexPointer
    void glDrawElements(int,int,int,int) -> glDrawElements
    void glBindBuffer(int,int) -> glBindBuffer
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    void glColor4ub(byte,byte,byte,byte) -> glColor4ub
    void glDeleteBuffers(int,int[],int) -> glDeleteBuffers
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glGenBuffers(int,int[],int) -> glGenBuffers
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGetBooleanv(int,boolean[],int) -> glGetBooleanv
    void glGetBooleanv(int,java.nio.IntBuffer) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,int[],int) -> glGetBufferParameteriv
    void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    void glGetClipPlanef(int,float[],int) -> glGetClipPlanef
    void glGetClipPlanef(int,java.nio.FloatBuffer) -> glGetClipPlanef
    void glGetClipPlanex(int,int[],int) -> glGetClipPlanex
    void glGetClipPlanex(int,java.nio.IntBuffer) -> glGetClipPlanex
    void glGetFixedv(int,int[],int) -> glGetFixedv
    void glGetFixedv(int,java.nio.IntBuffer) -> glGetFixedv
    void glGetFloatv(int,float[],int) -> glGetFloatv
    void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    void glGetLightfv(int,int,float[],int) -> glGetLightfv
    void glGetLightfv(int,int,java.nio.FloatBuffer) -> glGetLightfv
    void glGetLightxv(int,int,int[],int) -> glGetLightxv
    void glGetLightxv(int,int,java.nio.IntBuffer) -> glGetLightxv
    void glGetMaterialfv(int,int,float[],int) -> glGetMaterialfv
    void glGetMaterialfv(int,int,java.nio.FloatBuffer) -> glGetMaterialfv
    void glGetMaterialxv(int,int,int[],int) -> glGetMaterialxv
    void glGetMaterialxv(int,int,java.nio.IntBuffer) -> glGetMaterialxv
    void glGetTexEnviv(int,int,int[],int) -> glGetTexEnviv
    void glGetTexEnviv(int,int,java.nio.IntBuffer) -> glGetTexEnviv
    void glGetTexEnvxv(int,int,int[],int) -> glGetTexEnvxv
    void glGetTexEnvxv(int,int,java.nio.IntBuffer) -> glGetTexEnvxv
    void glGetTexParameterfv(int,int,float[],int) -> glGetTexParameterfv
    void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    void glGetTexParameteriv(int,int,int[],int) -> glGetTexParameteriv
    void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    void glGetTexParameterxv(int,int,int[],int) -> glGetTexParameterxv
    void glGetTexParameterxv(int,int,java.nio.IntBuffer) -> glGetTexParameterxv
    boolean glIsBuffer(int) -> glIsBuffer
    boolean glIsEnabled(int) -> glIsEnabled
    boolean glIsTexture(int) -> glIsTexture
    void glPointParameterf(int,float) -> glPointParameterf
    void glPointParameterfv(int,float[],int) -> glPointParameterfv
    void glPointParameterfv(int,java.nio.FloatBuffer) -> glPointParameterfv
    void glPointParameterx(int,int) -> glPointParameterx
    void glPointParameterxv(int,int[],int) -> glPointParameterxv
    void glPointParameterxv(int,java.nio.IntBuffer) -> glPointParameterxv
    void glPointSizePointerOES(int,int,java.nio.Buffer) -> glPointSizePointerOES
    void glTexEnvi(int,int,int) -> glTexEnvi
    void glTexEnviv(int,int,int[],int) -> glTexEnviv
    void glTexEnviv(int,int,java.nio.IntBuffer) -> glTexEnviv
    void glTexParameterfv(int,int,float[],int) -> glTexParameterfv
    void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    void glTexParameteri(int,int,int) -> glTexParameteri
    void glTexParameterxv(int,int,int[],int) -> glTexParameterxv
    void glTexParameterxv(int,int,java.nio.IntBuffer) -> glTexParameterxv
    void glCurrentPaletteMatrixOES(int) -> glCurrentPaletteMatrixOES
    void glLoadPaletteFromModelViewMatrixOES() -> glLoadPaletteFromModelViewMatrixOES
    void glMatrixIndexPointerOES(int,int,int,java.nio.Buffer) -> glMatrixIndexPointerOES
    void glMatrixIndexPointerOES(int,int,int,int) -> glMatrixIndexPointerOES
    void glWeightPointerOES(int,int,int,java.nio.Buffer) -> glWeightPointerOES
    void glWeightPointerOES(int,int,int,int) -> glWeightPointerOES
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser -> com.badlogic.gdx.backends.android.a.ag:
    int mRedSize -> a
    int mGreenSize -> b
    int mBlueSize -> c
    int mAlphaSize -> d
    int mDepthSize -> e
    int mStencilSize -> f
    int mNumSamples -> g
    boolean mUseGL20 -> h
    int[] mConfigAttribs -> i
    int[] mValue -> j
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> a
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> a
com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy -> com.badlogic.gdx.backends.android.a.ah:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> a
com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension -> com.badlogic.gdx.backends.android.a.ai:
    int width -> a
    int height -> b
com.badlogic.gdx.files.FileHandle -> com.badlogic.gdx.c.a:
    java.io.File file -> b
    com.badlogic.gdx.Files$FileType type -> c
    java.lang.String path() -> d
    java.lang.String name() -> e
    java.lang.String extension() -> f
    java.io.File file() -> g
    java.io.InputStream read() -> b
    byte[] readBytes() -> h
    com.badlogic.gdx.files.FileHandle child(java.lang.String) -> a
    com.badlogic.gdx.files.FileHandle parent() -> a
    long length() -> c
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.badlogic.gdx.graphics.Camera -> com.badlogic.gdx.graphics.a:
    com.badlogic.gdx.math.Vector3 position -> a
    com.badlogic.gdx.math.Vector3 direction -> b
    com.badlogic.gdx.math.Vector3 up -> c
    com.badlogic.gdx.math.Matrix4 projection -> d
    com.badlogic.gdx.math.Matrix4 view -> e
    com.badlogic.gdx.math.Matrix4 combined -> f
    com.badlogic.gdx.math.Matrix4 invProjectionView -> g
    float near -> h
    float far -> i
    float viewportWidth -> j
    float viewportHeight -> k
    com.badlogic.gdx.math.Frustum frustum -> l
    com.badlogic.gdx.math.Vector3 tmpVec -> n
    com.badlogic.gdx.math.collision.Ray ray -> m
com.badlogic.gdx.graphics.Color -> com.badlogic.gdx.graphics.b:
    com.badlogic.gdx.graphics.Color CLEAR -> a
    com.badlogic.gdx.graphics.Color WHITE -> b
    com.badlogic.gdx.graphics.Color BLACK -> c
    com.badlogic.gdx.graphics.Color RED -> d
    com.badlogic.gdx.graphics.Color GREEN -> e
    com.badlogic.gdx.graphics.Color BLUE -> f
    com.badlogic.gdx.graphics.Color LIGHT_GRAY -> g
    com.badlogic.gdx.graphics.Color GRAY -> h
    com.badlogic.gdx.graphics.Color DARK_GRAY -> i
    com.badlogic.gdx.graphics.Color PINK -> j
    com.badlogic.gdx.graphics.Color ORANGE -> k
    com.badlogic.gdx.graphics.Color YELLOW -> l
    com.badlogic.gdx.graphics.Color MAGENTA -> m
    com.badlogic.gdx.graphics.Color CYAN -> n
    com.badlogic.gdx.graphics.Color tmp -> o
    float r -> p
    float g -> q
    float b -> r
    float a -> s
    com.badlogic.gdx.graphics.Color clamp() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    float toFloatBits() -> b
    int toIntBits() -> c
    java.lang.String toString() -> toString
    int rgba8888(float,float,float,float) -> a
com.badlogic.gdx.graphics.GL10 -> com.badlogic.gdx.graphics.c:
    void glClientActiveTexture(int) -> a
    void glColorPointer(int,int,int,java.nio.Buffer) -> a
    void glDisableClientState(int) -> b
    void glEnableClientState(int) -> c
    void glLoadMatrixf(float[],int) -> a
    void glMatrixMode(int) -> d
    void glNormalPointer(int,int,java.nio.Buffer) -> a
    void glTexCoordPointer(int,int,int,java.nio.Buffer) -> b
    void glVertexPointer(int,int,int,java.nio.Buffer) -> c
com.badlogic.gdx.graphics.GL11 -> com.badlogic.gdx.graphics.d:
    void glBindBuffer(int,int) -> a
    void glBufferData(int,int,java.nio.Buffer,int) -> a
    void glBufferSubData(int,int,int,java.nio.Buffer) -> d
    void glDeleteBuffers(int,java.nio.IntBuffer) -> a
    void glGenBuffers(int,java.nio.IntBuffer) -> b
    void glVertexPointer(int,int,int,int) -> c
    void glColorPointer(int,int,int,int) -> a
    void glNormalPointer(int,int,int) -> a
    void glTexCoordPointer(int,int,int,int) -> b
    void glDrawElements(int,int,int,int) -> d
com.badlogic.gdx.graphics.GL20 -> com.badlogic.gdx.graphics.e:
    void glAttachShader(int,int) -> glAttachShader
    void glBindBuffer(int,int) -> glBindBuffer
    void glBindFramebuffer(int,int) -> glBindFramebuffer
    void glBindRenderbuffer(int,int) -> glBindRenderbuffer
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    int glCheckFramebufferStatus(int) -> glCheckFramebufferStatus
    void glCompileShader(int) -> glCompileShader
    int glCreateProgram() -> glCreateProgram
    int glCreateShader(int) -> glCreateShader
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glDeleteFramebuffers(int,java.nio.IntBuffer) -> glDeleteFramebuffers
    void glDeleteProgram(int) -> glDeleteProgram
    void glDeleteRenderbuffers(int,java.nio.IntBuffer) -> glDeleteRenderbuffers
    void glDeleteShader(int) -> glDeleteShader
    void glDisableVertexAttribArray(int) -> glDisableVertexAttribArray
    void glDrawElements(int,int,int,int) -> glDrawElements
    void glEnableVertexAttribArray(int) -> glEnableVertexAttribArray
    void glFramebufferRenderbuffer(int,int,int,int) -> glFramebufferRenderbuffer
    void glFramebufferTexture2D(int,int,int,int,int) -> glFramebufferTexture2D
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGenerateMipmap(int) -> glGenerateMipmap
    void glGenFramebuffers(int,java.nio.IntBuffer) -> glGenFramebuffers
    void glGenRenderbuffers(int,java.nio.IntBuffer) -> glGenRenderbuffers
    java.lang.String glGetActiveAttrib(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveAttrib
    java.lang.String glGetActiveUniform(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveUniform
    int glGetAttribLocation(int,java.lang.String) -> glGetAttribLocation
    void glGetProgramiv(int,int,java.nio.IntBuffer) -> glGetProgramiv
    java.lang.String glGetProgramInfoLog(int) -> glGetProgramInfoLog
    void glGetShaderiv(int,int,java.nio.IntBuffer) -> glGetShaderiv
    java.lang.String glGetShaderInfoLog(int) -> glGetShaderInfoLog
    int glGetUniformLocation(int,java.lang.String) -> glGetUniformLocation
    void glLinkProgram(int) -> glLinkProgram
    void glRenderbufferStorage(int,int,int,int) -> glRenderbufferStorage
    void glShaderSource(int,java.lang.String) -> glShaderSource
    void glUniform1i(int,int) -> glUniform1i
    void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4fv
    void glUseProgram(int) -> glUseProgram
    void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer) -> glVertexAttribPointer
    void glVertexAttribPointer(int,int,int,boolean,int,int) -> glVertexAttribPointer
com.badlogic.gdx.graphics.GLCommon -> com.badlogic.gdx.graphics.f:
    void glBindTexture(int,int) -> glBindTexture
    void glBlendFunc(int,int) -> glBlendFunc
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthMask(boolean) -> glDepthMask
    void glDisable(int) -> glDisable
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glEnable(int) -> glEnable
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    java.lang.String glGetString(int) -> glGetString
    void glPixelStorei(int,int) -> glPixelStorei
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
com.badlogic.gdx.graphics.GLTexture -> com.badlogic.gdx.graphics.g:
    int glTarget -> a
    int glHandle -> b
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> c
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> d
    com.badlogic.gdx.graphics.Texture$TextureWrap uWrap -> e
    com.badlogic.gdx.graphics.Texture$TextureWrap vWrap -> f
    boolean enforcePotImages -> g
    java.nio.IntBuffer buffer -> h
    void bind() -> a
    com.badlogic.gdx.graphics.Texture$TextureFilter getMinFilter() -> b
    com.badlogic.gdx.graphics.Texture$TextureFilter getMagFilter() -> d
    com.badlogic.gdx.graphics.Texture$TextureWrap getUWrap() -> e
    com.badlogic.gdx.graphics.Texture$TextureWrap getVWrap() -> f
    int getTextureObjectHandle() -> g
    void setWrap(com.badlogic.gdx.graphics.Texture$TextureWrap,com.badlogic.gdx.graphics.Texture$TextureWrap) -> a
    void setFilter(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter) -> a
    void delete() -> h
    void dispose() -> c
    com.badlogic.gdx.graphics.TextureData createTextureData(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap$Format,boolean) -> a
    int createGLHandle() -> i
    void uploadImageData(int,com.badlogic.gdx.graphics.TextureData) -> a
com.badlogic.gdx.graphics.Mesh -> com.badlogic.gdx.graphics.h:
    java.util.Map meshes -> a
    boolean forceVBO -> b
    com.badlogic.gdx.graphics.glutils.VertexData vertices -> c
    com.badlogic.gdx.graphics.glutils.IndexData indices -> d
    boolean autoBind -> e
    boolean isVertexArray -> f
    com.badlogic.gdx.math.Vector3 tmpV -> g
    com.badlogic.gdx.graphics.Mesh setVertices(float[],int,int) -> a
    com.badlogic.gdx.graphics.Mesh setIndices(short[]) -> a
    void bind() -> a
    void unbind() -> b
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> a
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> b
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> b
    void render(int,int,int) -> a
    void render(int,int,int,boolean) -> a
    void render(com.badlogic.gdx.graphics.glutils.ShaderProgram,int,int,int) -> a
    void render(com.badlogic.gdx.graphics.glutils.ShaderProgram,int,int,int,boolean) -> a
    void dispose() -> c
    java.nio.ShortBuffer getIndicesBuffer() -> d
    void addManagedMesh(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.Mesh) -> a
    void invalidateAllMeshes(com.badlogic.gdx.Application) -> a
    void clearAllMeshes(com.badlogic.gdx.Application) -> b
    java.lang.String getManagedStatus() -> e
com.badlogic.gdx.graphics.Mesh$VertexDataType -> com.badlogic.gdx.graphics.i:
    com.badlogic.gdx.graphics.Mesh$VertexDataType VertexArray -> a
    com.badlogic.gdx.graphics.Mesh$VertexDataType VertexBufferObject -> b
    com.badlogic.gdx.graphics.Mesh$VertexDataType VertexBufferObjectSubData -> c
    com.badlogic.gdx.graphics.Mesh$VertexDataType[] $VALUES -> d
    com.badlogic.gdx.graphics.Mesh$VertexDataType[] values() -> values
    com.badlogic.gdx.graphics.Mesh$VertexDataType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.OrthographicCamera -> com.badlogic.gdx.graphics.j:
    float zoom -> n
    com.badlogic.gdx.math.Vector3 tmp -> o
    void update() -> a
    void update(boolean) -> a
com.badlogic.gdx.graphics.Pixmap -> com.badlogic.gdx.graphics.k:
    com.badlogic.gdx.graphics.Pixmap$Blending blending -> c
    com.badlogic.gdx.graphics.g2d.Gdx2DPixmap pixmap -> a
    int color -> b
    boolean disposed -> d
    void setBlending(com.badlogic.gdx.graphics.Pixmap$Blending) -> a
    void setColor(float,float,float,float) -> a
    void fill() -> a
    void drawPixmap(com.badlogic.gdx.graphics.Pixmap,int,int,int,int,int,int) -> a
    void drawPixmap(com.badlogic.gdx.graphics.Pixmap,int,int,int,int,int,int,int,int) -> a
    int getWidth() -> b
    int getHeight() -> d
    void dispose() -> c
    int getGLFormat() -> e
    int getGLInternalFormat() -> f
    int getGLType() -> g
    java.nio.ByteBuffer getPixels() -> h
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> i
    com.badlogic.gdx.graphics.Pixmap$Blending getBlending() -> j
com.badlogic.gdx.graphics.Pixmap$Blending -> com.badlogic.gdx.graphics.l:
    com.badlogic.gdx.graphics.Pixmap$Blending None -> a
    com.badlogic.gdx.graphics.Pixmap$Blending SourceOver -> b
    com.badlogic.gdx.graphics.Pixmap$Blending[] $VALUES -> c
    com.badlogic.gdx.graphics.Pixmap$Blending[] values() -> values
    com.badlogic.gdx.graphics.Pixmap$Blending valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.Pixmap$Format -> com.badlogic.gdx.graphics.m:
    com.badlogic.gdx.graphics.Pixmap$Format Alpha -> a
    com.badlogic.gdx.graphics.Pixmap$Format Intensity -> b
    com.badlogic.gdx.graphics.Pixmap$Format LuminanceAlpha -> c
    com.badlogic.gdx.graphics.Pixmap$Format RGB565 -> d
    com.badlogic.gdx.graphics.Pixmap$Format RGBA4444 -> e
    com.badlogic.gdx.graphics.Pixmap$Format RGB888 -> f
    com.badlogic.gdx.graphics.Pixmap$Format RGBA8888 -> g
    com.badlogic.gdx.graphics.Pixmap$Format[] $VALUES -> h
    com.badlogic.gdx.graphics.Pixmap$Format[] values() -> values
    com.badlogic.gdx.graphics.Pixmap$Format valueOf(java.lang.String) -> valueOf
    int toGdx2DPixmapFormat(com.badlogic.gdx.graphics.Pixmap$Format) -> a
    com.badlogic.gdx.graphics.Pixmap$Format fromGdx2DPixmapFormat(int) -> a
com.badlogic.gdx.graphics.PixmapIO -> com.badlogic.gdx.graphics.n:
    com.badlogic.gdx.graphics.Pixmap readCIM(com.badlogic.gdx.files.FileHandle) -> a
com.badlogic.gdx.graphics.PixmapIO$CIM -> com.badlogic.gdx.graphics.o:
    byte[] writeBuffer -> a
    byte[] readBuffer -> b
    com.badlogic.gdx.graphics.Pixmap read(com.badlogic.gdx.files.FileHandle) -> a
com.badlogic.gdx.graphics.Texture -> com.badlogic.gdx.graphics.p:
    com.badlogic.gdx.assets.AssetManager assetManager -> i
    java.util.Map managedTextures -> g
    com.badlogic.gdx.graphics.TextureData data -> h
    void load(com.badlogic.gdx.graphics.TextureData) -> a
    void reload() -> j
    int getWidth() -> k
    int getHeight() -> l
    com.badlogic.gdx.graphics.TextureData getTextureData() -> m
    boolean isManaged() -> n
    void dispose() -> c
    void addManagedTexture(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.Texture) -> a
    void clearAllTextures(com.badlogic.gdx.Application) -> a
    void invalidateAllTextures(com.badlogic.gdx.Application) -> b
    java.lang.String getManagedStatus() -> o
com.badlogic.gdx.graphics.Texture$1 -> com.badlogic.gdx.graphics.q:
    int val$refCount -> a
    void finishedLoading(com.badlogic.gdx.assets.AssetManager,java.lang.String,java.lang.Class) -> a
com.badlogic.gdx.graphics.Texture$TextureFilter -> com.badlogic.gdx.graphics.r:
    com.badlogic.gdx.graphics.Texture$TextureFilter Nearest -> a
    com.badlogic.gdx.graphics.Texture$TextureFilter Linear -> b
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMap -> c
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapNearestNearest -> d
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapLinearNearest -> e
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapNearestLinear -> f
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapLinearLinear -> g
    int glEnum -> h
    com.badlogic.gdx.graphics.Texture$TextureFilter[] $VALUES -> i
    com.badlogic.gdx.graphics.Texture$TextureFilter[] values() -> values
    com.badlogic.gdx.graphics.Texture$TextureFilter valueOf(java.lang.String) -> valueOf
    boolean isMipMap() -> a
    int getGLEnum() -> b
com.badlogic.gdx.graphics.Texture$TextureWrap -> com.badlogic.gdx.graphics.s:
    com.badlogic.gdx.graphics.Texture$TextureWrap MirroredRepeat -> a
    com.badlogic.gdx.graphics.Texture$TextureWrap ClampToEdge -> b
    com.badlogic.gdx.graphics.Texture$TextureWrap Repeat -> c
    int glEnum -> d
    com.badlogic.gdx.graphics.Texture$TextureWrap[] $VALUES -> e
    com.badlogic.gdx.graphics.Texture$TextureWrap[] values() -> values
    com.badlogic.gdx.graphics.Texture$TextureWrap valueOf(java.lang.String) -> valueOf
    int getGLEnum() -> a
com.badlogic.gdx.graphics.TextureData -> com.badlogic.gdx.graphics.t:
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> a
    boolean isPrepared() -> b
    void prepare() -> c
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> d
    boolean disposePixmap() -> e
    void consumeCompressedData(int) -> a
    int getWidth() -> f
    int getHeight() -> g
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> h
    boolean useMipMaps() -> i
    boolean isManaged() -> j
com.badlogic.gdx.graphics.TextureData$TextureDataType -> com.badlogic.gdx.graphics.u:
    com.badlogic.gdx.graphics.TextureData$TextureDataType Pixmap -> a
    com.badlogic.gdx.graphics.TextureData$TextureDataType Compressed -> b
    com.badlogic.gdx.graphics.TextureData$TextureDataType Float -> c
    com.badlogic.gdx.graphics.TextureData$TextureDataType[] $VALUES -> d
    com.badlogic.gdx.graphics.TextureData$TextureDataType[] values() -> values
    com.badlogic.gdx.graphics.TextureData$TextureDataType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.VertexAttribute -> com.badlogic.gdx.graphics.v:
    int usage -> a
    int numComponents -> b
    int offset -> c
    java.lang.String alias -> d
    int unit -> e
    int usageIndex -> f
    boolean equals(java.lang.Object) -> equals
    boolean equals(com.badlogic.gdx.graphics.VertexAttribute) -> a
com.badlogic.gdx.graphics.VertexAttributes -> com.badlogic.gdx.graphics.w:
    com.badlogic.gdx.graphics.VertexAttribute[] attributes -> b
    int vertexSize -> a
    long mask -> c
    int calculateOffsets() -> b
    void checkValidity() -> c
    int size() -> a
    com.badlogic.gdx.graphics.VertexAttribute get(int) -> a
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap -> com.badlogic.gdx.graphics.g2d.Gdx2DPixmap:
    long basePtr -> a
    int width -> b
    int height -> c
    int format -> d
    java.nio.ByteBuffer pixelPtr -> e
    long[] nativeData -> f
    void dispose() -> c
    void clear(int) -> a
    void drawPixmap(com.badlogic.gdx.graphics.g2d.Gdx2DPixmap,int,int,int,int,int,int) -> a
    void drawPixmap(com.badlogic.gdx.graphics.g2d.Gdx2DPixmap,int,int,int,int,int,int,int,int) -> a
    java.nio.ByteBuffer getPixels() -> a
    int getHeight() -> b
    int getWidth() -> d
    int getFormat() -> e
    int getGLInternalFormat() -> f
    int getGLFormat() -> g
    int getGLType() -> h
    java.nio.ByteBuffer load(long[],byte[],int,int,int) -> load
    java.nio.ByteBuffer newPixmap(long[],int,int,int) -> newPixmap
    void free(long) -> free
    void clear(long,int) -> clear
    void drawPixmap(long,long,int,int,int,int,int,int,int,int) -> drawPixmap
    void setBlend(int) -> setBlend
    void setScale(int) -> setScale
    java.lang.String getFailureReason() -> getFailureReason
com.badlogic.gdx.graphics.g2d.Sprite -> com.badlogic.gdx.graphics.g2d.a:
    float[] vertices -> a
    com.badlogic.gdx.graphics.Color color -> d
    float x -> e
    float y -> f
    float width -> b
    float height -> c
    float originX -> g
    float originY -> h
    float rotation -> i
    float scaleX -> j
    float scaleY -> k
    boolean dirty -> s
    void setBounds(float,float,float,float) -> a
    void setSize(float,float) -> a
    void setPosition(float,float) -> b
    void translate(float,float) -> c
    void setColor(float,float,float,float) -> b
    void setOrigin(float,float) -> d
    void rotate90(boolean) -> a
    float[] getVertices() -> a
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> a
    float getX() -> b
    float getY() -> c
    float getWidth() -> d
    float getHeight() -> e
    float getOriginX() -> f
    float getOriginY() -> g
    void setRegion(float,float,float,float) -> c
    void flip(boolean,boolean) -> a
com.badlogic.gdx.graphics.g2d.SpriteBatch -> com.badlogic.gdx.graphics.g2d.b:
    com.badlogic.gdx.graphics.Mesh mesh -> e
    com.badlogic.gdx.graphics.Mesh[] buffers -> f
    int currBufferIdx -> g
    float[] vertices -> h
    int idx -> i
    com.badlogic.gdx.graphics.Texture lastTexture -> j
    float invTexWidth -> k
    float invTexHeight -> l
    boolean drawing -> m
    com.badlogic.gdx.math.Matrix4 transformMatrix -> n
    com.badlogic.gdx.math.Matrix4 projectionMatrix -> o
    com.badlogic.gdx.math.Matrix4 combinedMatrix -> p
    boolean blendingDisabled -> q
    int blendSrcFunc -> r
    int blendDstFunc -> s
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> t
    com.badlogic.gdx.graphics.glutils.ShaderProgram customShader -> u
    boolean ownsShader -> v
    float color -> a
    com.badlogic.gdx.graphics.Color tempColor -> w
    int renderCalls -> b
    int totalRenderCalls -> c
    int maxSpritesInBatch -> d
    com.badlogic.gdx.graphics.glutils.ShaderProgram createDefaultShader() -> a
    void begin() -> b
    void end() -> d
    void draw(com.badlogic.gdx.graphics.Texture,float[],int,int) -> a
    void flush() -> e
    void dispose() -> c
    void setProjectionMatrix(com.badlogic.gdx.math.Matrix4) -> a
    void setupMatrices() -> g
    void switchTexture(com.badlogic.gdx.graphics.Texture) -> a
    boolean isBlendingEnabled() -> f
com.badlogic.gdx.graphics.g2d.TextureAtlas -> com.badlogic.gdx.graphics.g2d.c:
    java.lang.String[] tuple -> a
    java.util.HashSet textures -> c
    com.badlogic.gdx.utils.Array regions -> d
    java.util.Comparator indexComparator -> b
    void load(com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData) -> a
    com.badlogic.gdx.graphics.g2d.Sprite createSprite(java.lang.String) -> a
    com.badlogic.gdx.graphics.g2d.Sprite newSprite(com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion) -> a
    void dispose() -> c
    java.lang.String readValue(java.io.BufferedReader) -> a
    int readTuple(java.io.BufferedReader) -> b
com.badlogic.gdx.graphics.g2d.TextureAtlas$1 -> com.badlogic.gdx.graphics.g2d.d:
    int compare(com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region,com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion -> com.badlogic.gdx.graphics.g2d.e:
    int index -> a
    java.lang.String name -> b
    float offsetX -> c
    float offsetY -> d
    int packedWidth -> e
    int packedHeight -> f
    int originalWidth -> g
    int originalHeight -> h
    boolean rotate -> i
    int[] splits -> j
    int[] pads -> k
    void flip(boolean,boolean) -> a
    float getRotatedPackedWidth() -> a
    float getRotatedPackedHeight() -> b
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite -> com.badlogic.gdx.graphics.g2d.f:
    com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion region -> d
    float originalOffsetX -> e
    float originalOffsetY -> f
    void setPosition(float,float) -> b
    void setBounds(float,float,float,float) -> a
    void setSize(float,float) -> a
    void setOrigin(float,float) -> d
    void flip(boolean,boolean) -> a
    void rotate90(boolean) -> a
    float getX() -> b
    float getY() -> c
    float getOriginX() -> f
    float getOriginY() -> g
    float getWidth() -> d
    float getHeight() -> e
    float getWidthRatio() -> h
    float getHeightRatio() -> i
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData -> com.badlogic.gdx.graphics.g2d.g:
    com.badlogic.gdx.utils.Array pages -> a
    com.badlogic.gdx.utils.Array regions -> b
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page -> com.badlogic.gdx.graphics.g2d.h:
    com.badlogic.gdx.files.FileHandle textureFile -> a
    com.badlogic.gdx.graphics.Texture texture -> b
    boolean useMipMaps -> c
    com.badlogic.gdx.graphics.Pixmap$Format format -> d
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> e
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> f
    com.badlogic.gdx.graphics.Texture$TextureWrap uWrap -> g
    com.badlogic.gdx.graphics.Texture$TextureWrap vWrap -> h
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region -> com.badlogic.gdx.graphics.g2d.i:
    com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page page -> a
    int index -> b
    java.lang.String name -> c
    float offsetX -> d
    float offsetY -> e
    int originalWidth -> f
    int originalHeight -> g
    boolean rotate -> h
    int left -> i
    int top -> j
    int width -> k
    int height -> l
    boolean flip -> m
    int[] splits -> n
    int[] pads -> o
com.badlogic.gdx.graphics.g2d.TextureRegion -> com.badlogic.gdx.graphics.g2d.j:
    com.badlogic.gdx.graphics.Texture texture -> l
    float u -> m
    float v -> n
    float u2 -> o
    float v2 -> p
    int regionWidth -> q
    int regionHeight -> r
    void setRegion(int,int,int,int) -> a
    void setRegion(float,float,float,float) -> c
    void setRegion(com.badlogic.gdx.graphics.g2d.TextureRegion) -> a
    int getRegionWidth() -> j
    int getRegionHeight() -> k
    void flip(boolean,boolean) -> a
com.badlogic.gdx.graphics.glutils.ETC1 -> com.badlogic.gdx.graphics.glutils.ETC1:
    int PKM_HEADER_SIZE -> a
    int ETC1_RGB8_OES -> b
    int getPixelSize(com.badlogic.gdx.graphics.Pixmap$Format) -> a
    com.badlogic.gdx.graphics.Pixmap decodeImage(com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data,com.badlogic.gdx.graphics.Pixmap$Format) -> a
    int getWidthPKM(java.nio.ByteBuffer,int) -> getWidthPKM
    int getHeightPKM(java.nio.ByteBuffer,int) -> getHeightPKM
    boolean isValidPKM(java.nio.ByteBuffer,int) -> isValidPKM
    void decodeImage(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int,int) -> decodeImage
com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data -> com.badlogic.gdx.graphics.glutils.a:
    int width -> a
    int height -> b
    java.nio.ByteBuffer compressedData -> c
    int dataOffset -> d
    void checkNPOT() -> b
    boolean hasPKMHeader() -> a
    void dispose() -> c
    java.lang.String toString() -> toString
com.badlogic.gdx.graphics.glutils.ETC1TextureData -> com.badlogic.gdx.graphics.glutils.b:
    com.badlogic.gdx.files.FileHandle file -> a
    com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data data -> b
    boolean useMipMaps -> c
    int width -> d
    int height -> e
    boolean isPrepared -> f
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> a
    boolean isPrepared() -> b
    void prepare() -> c
    void consumeCompressedData(int) -> a
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> d
    boolean disposePixmap() -> e
    int getWidth() -> f
    int getHeight() -> g
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> h
    boolean useMipMaps() -> i
    boolean isManaged() -> j
com.badlogic.gdx.graphics.glutils.FileTextureData -> com.badlogic.gdx.graphics.glutils.c:
    boolean copyToPOT -> a
    com.badlogic.gdx.files.FileHandle file -> b
    int width -> c
    int height -> d
    com.badlogic.gdx.graphics.Pixmap$Format format -> e
    com.badlogic.gdx.graphics.Pixmap pixmap -> f
    boolean useMipMaps -> g
    boolean isPrepared -> h
    boolean isPrepared() -> b
    void prepare() -> c
    com.badlogic.gdx.graphics.Pixmap ensurePot(com.badlogic.gdx.graphics.Pixmap) -> a
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> d
    boolean disposePixmap() -> e
    int getWidth() -> f
    int getHeight() -> g
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> h
    boolean useMipMaps() -> i
    boolean isManaged() -> j
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> a
    void consumeCompressedData(int) -> a
com.badlogic.gdx.graphics.glutils.FrameBuffer -> com.badlogic.gdx.graphics.glutils.d:
    java.util.Map buffers -> f
    com.badlogic.gdx.graphics.Texture colorTexture -> a
    int defaultFramebufferHandle -> g
    boolean defaultFramebufferHandleInitialized -> h
    int framebufferHandle -> i
    int depthbufferHandle -> j
    int width -> b
    int height -> c
    boolean hasDepth -> d
    com.badlogic.gdx.graphics.Pixmap$Format format -> e
    void setupTexture() -> a
    void build() -> d
    void dispose() -> c
    void invalidateAllFrameBuffers(com.badlogic.gdx.Application) -> a
    void clearAllFrameBuffers(com.badlogic.gdx.Application) -> b
    java.lang.StringBuilder getManagedStatus(java.lang.StringBuilder) -> a
    java.lang.String getManagedStatus() -> b
com.badlogic.gdx.graphics.glutils.IndexArray -> com.badlogic.gdx.graphics.glutils.e:
    java.nio.IntBuffer tmpHandle -> a
    java.nio.ShortBuffer buffer -> b
    java.nio.ByteBuffer byteBuffer -> c
    int getNumIndices() -> a
    void setIndices(short[],int,int) -> a
    java.nio.ShortBuffer getBuffer() -> b
    void bind() -> d
    void unbind() -> e
    void invalidate() -> f
    void dispose() -> c
com.badlogic.gdx.graphics.glutils.IndexBufferObject -> com.badlogic.gdx.graphics.glutils.f:
    java.nio.IntBuffer tmpHandle -> a
    java.nio.ShortBuffer buffer -> b
    java.nio.ByteBuffer byteBuffer -> c
    int bufferHandle -> d
    boolean isDirect -> e
    boolean isDirty -> f
    boolean isBound -> g
    int usage -> h
    int createBufferObject() -> g
    int getNumIndices() -> a
    void setIndices(short[],int,int) -> a
    java.nio.ShortBuffer getBuffer() -> b
    void bind() -> d
    void unbind() -> e
    void invalidate() -> f
    void dispose() -> c
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData -> com.badlogic.gdx.graphics.glutils.g:
    java.nio.IntBuffer tmpHandle -> a
    java.nio.ShortBuffer buffer -> b
    java.nio.ByteBuffer byteBuffer -> c
    int bufferHandle -> d
    boolean isDirect -> e
    boolean isDirty -> f
    boolean isBound -> g
    int usage -> h
    int createBufferObject() -> g
    int getNumIndices() -> a
    void setIndices(short[],int,int) -> a
    java.nio.ShortBuffer getBuffer() -> b
    void bind() -> d
    void unbind() -> e
    void invalidate() -> f
    void dispose() -> c
com.badlogic.gdx.graphics.glutils.IndexData -> com.badlogic.gdx.graphics.glutils.h:
    int getNumIndices() -> a
    void setIndices(short[],int,int) -> a
    java.nio.ShortBuffer getBuffer() -> b
    void bind() -> d
    void unbind() -> e
    void invalidate() -> f
    void dispose() -> c
com.badlogic.gdx.graphics.glutils.MipMapGenerator -> com.badlogic.gdx.graphics.glutils.i:
    boolean useHWMipMap -> a
    void generateMipMap(int,com.badlogic.gdx.graphics.Pixmap,int,int) -> a
    void generateMipMapGLES20(int,com.badlogic.gdx.graphics.Pixmap) -> a
    void generateMipMapDesktop(int,com.badlogic.gdx.graphics.Pixmap,int,int) -> b
    void generateMipMapCPU(int,com.badlogic.gdx.graphics.Pixmap,int,int) -> c
com.badlogic.gdx.graphics.glutils.PixmapTextureData -> com.badlogic.gdx.graphics.glutils.j:
    com.badlogic.gdx.graphics.Pixmap pixmap -> a
    com.badlogic.gdx.graphics.Pixmap$Format format -> b
    boolean useMipMaps -> c
    boolean disposePixmap -> d
    boolean disposePixmap() -> e
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> d
    int getWidth() -> f
    int getHeight() -> g
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> h
    boolean useMipMaps() -> i
    boolean isManaged() -> j
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> a
    void consumeCompressedData(int) -> a
    boolean isPrepared() -> b
    void prepare() -> c
com.badlogic.gdx.graphics.glutils.ShaderProgram -> com.badlogic.gdx.graphics.glutils.k:
    boolean pedantic -> a
    com.badlogic.gdx.utils.ObjectMap shaders -> e
    java.lang.String log -> f
    boolean isCompiled -> g
    com.badlogic.gdx.utils.ObjectIntMap uniforms -> h
    com.badlogic.gdx.utils.ObjectIntMap uniformTypes -> i
    com.badlogic.gdx.utils.ObjectIntMap uniformSizes -> j
    java.lang.String[] uniformNames -> k
    com.badlogic.gdx.utils.ObjectIntMap attributes -> l
    com.badlogic.gdx.utils.ObjectIntMap attributeTypes -> m
    com.badlogic.gdx.utils.ObjectIntMap attributeSizes -> n
    java.lang.String[] attributeNames -> o
    int program -> p
    int vertexShaderHandle -> q
    int fragmentShaderHandle -> r
    java.nio.FloatBuffer matrix -> s
    java.lang.String vertexShaderSource -> t
    java.lang.String fragmentShaderSource -> u
    boolean invalidated -> v
    java.nio.ByteBuffer buffer -> w
    java.nio.FloatBuffer floatBuffer -> x
    java.nio.IntBuffer intBuffer -> y
    int refCount -> z
    java.nio.IntBuffer intbuf -> b
    java.nio.IntBuffer params -> c
    java.nio.IntBuffer type -> d
    void compileShaders(java.lang.String,java.lang.String) -> a
    int loadShader(int,java.lang.String) -> a
    int linkProgram() -> g
    java.lang.String getLog() -> a
    boolean isCompiled() -> b
    int fetchAttributeLocation(java.lang.String) -> c
    int fetchUniformLocation(java.lang.String) -> d
    int fetchUniformLocation(java.lang.String,boolean) -> a
    void setUniformi(java.lang.String,int) -> a
    void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix4) -> a
    void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix4,boolean) -> a
    void setVertexAttribute(int,int,int,boolean,int,java.nio.Buffer) -> a
    void setVertexAttribute(int,int,int,boolean,int,int) -> a
    void begin() -> d
    void end() -> e
    void dispose() -> c
    void disableVertexAttribute(java.lang.String) -> a
    void disableVertexAttribute(int) -> a
    void enableVertexAttribute(int) -> b
    void checkManaged() -> h
    void addManagedShader(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    void invalidateAllShaderPrograms(com.badlogic.gdx.Application) -> a
    void clearAllShaderPrograms(com.badlogic.gdx.Application) -> b
    java.lang.String getManagedStatus() -> f
    void fetchUniforms() -> i
    void fetchAttributes() -> j
    int getAttributeLocation(java.lang.String) -> b
com.badlogic.gdx.graphics.glutils.VertexArray -> com.badlogic.gdx.graphics.glutils.l:
    com.badlogic.gdx.graphics.VertexAttributes attributes -> a
    java.nio.FloatBuffer buffer -> b
    java.nio.ByteBuffer byteBuffer -> c
    boolean isBound -> d
    void dispose() -> c
    void setVertices(float[],int,int) -> a
    void bind() -> a
    void unbind() -> b
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> a
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> b
com.badlogic.gdx.graphics.glutils.VertexBufferObject -> com.badlogic.gdx.graphics.glutils.m:
    java.nio.IntBuffer tmpHandle -> a
    com.badlogic.gdx.graphics.VertexAttributes attributes -> b
    java.nio.FloatBuffer buffer -> c
    java.nio.ByteBuffer byteBuffer -> d
    int bufferHandle -> e
    boolean isStatic -> f
    int usage -> g
    boolean isDirty -> h
    boolean isBound -> i
    int createBufferObject() -> e
    void setVertices(float[],int,int) -> a
    void bind() -> a
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> a
    void unbind() -> b
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> b
    void invalidate() -> d
    void dispose() -> c
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData -> com.badlogic.gdx.graphics.glutils.n:
    java.nio.IntBuffer tmpHandle -> a
    com.badlogic.gdx.graphics.VertexAttributes attributes -> b
    java.nio.FloatBuffer buffer -> c
    java.nio.ByteBuffer byteBuffer -> d
    int bufferHandle -> e
    boolean isDirect -> f
    boolean isStatic -> g
    int usage -> h
    boolean isDirty -> i
    boolean isBound -> j
    int createBufferObject() -> d
    void setVertices(float[],int,int) -> a
    void bind() -> a
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> a
    void unbind() -> b
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> b
    void dispose() -> c
com.badlogic.gdx.graphics.glutils.VertexData -> com.badlogic.gdx.graphics.glutils.o:
    void setVertices(float[],int,int) -> a
    void bind() -> a
    void unbind() -> b
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> a
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> b
    void dispose() -> c
com.badlogic.gdx.math.Frustum -> com.badlogic.gdx.math.a:
    com.badlogic.gdx.math.Vector3[] clipSpacePlanePoints -> a
    float[] clipSpacePlanePointsArray -> b
    com.badlogic.gdx.math.Plane[] planes -> c
    com.badlogic.gdx.math.Vector3[] planePoints -> d
    float[] planePointsArray -> e
    void update(com.badlogic.gdx.math.Matrix4) -> a
com.badlogic.gdx.math.MathUtils -> com.badlogic.gdx.math.b:
    int ATAN2_DIM -> a
    float INV_ATAN2_DIM_MINUS_1 -> c
    java.util.Random random -> b
    float sinDeg(float) -> a
    float cosDeg(float) -> b
    int random(int) -> a
    float random() -> a
    int nextPowerOfTwo(int) -> b
    boolean isPowerOfTwo(int) -> c
com.badlogic.gdx.math.MathUtils$Sin -> com.badlogic.gdx.math.c:
    float[] table -> a
com.badlogic.gdx.math.Matrix4 -> com.badlogic.gdx.math.Matrix4:
    float[] tmp -> a
    float[] val -> b
    com.badlogic.gdx.math.Quaternion quat -> c
    com.badlogic.gdx.math.Vector3 l_vez -> d
    com.badlogic.gdx.math.Vector3 l_vex -> e
    com.badlogic.gdx.math.Vector3 l_vey -> f
    com.badlogic.gdx.math.Vector3 tmpVec -> g
    com.badlogic.gdx.math.Matrix4 tmpMat -> h
    com.badlogic.gdx.math.Vector3 right -> i
    com.badlogic.gdx.math.Vector3 tmpForward -> j
    com.badlogic.gdx.math.Vector3 tmpUp -> k
    com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Matrix4) -> a
    com.badlogic.gdx.math.Matrix4 set(float[]) -> a
    com.badlogic.gdx.math.Matrix4 mul(com.badlogic.gdx.math.Matrix4) -> b
    com.badlogic.gdx.math.Matrix4 idt() -> a
    com.badlogic.gdx.math.Matrix4 setToOrtho2D(float,float,float,float) -> a
    com.badlogic.gdx.math.Matrix4 setToOrtho(float,float,float,float,float,float) -> a
    com.badlogic.gdx.math.Matrix4 setToTranslation(com.badlogic.gdx.math.Vector3) -> a
    com.badlogic.gdx.math.Matrix4 setToLookAt(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> a
    com.badlogic.gdx.math.Matrix4 setToLookAt(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> a
    java.lang.String toString() -> toString
    void mul(float[],float[]) -> mul
    void prj(float[],float[],int,int,int) -> prj
    boolean inv(float[]) -> inv
com.badlogic.gdx.math.Plane -> com.badlogic.gdx.math.d:
    com.badlogic.gdx.math.Vector3 normal -> a
    float d -> b
    void set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> a
    java.lang.String toString() -> toString
com.badlogic.gdx.math.Quaternion -> com.badlogic.gdx.math.e:
    com.badlogic.gdx.math.Quaternion tmp1 -> e
    com.badlogic.gdx.math.Quaternion tmp2 -> f
    float x -> a
    float y -> b
    float z -> c
    float w -> d
    com.badlogic.gdx.math.Quaternion set(float,float,float,float) -> a
    java.lang.String toString() -> toString
    com.badlogic.gdx.math.Quaternion idt() -> a
    boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.math.Vector3 -> com.badlogic.gdx.math.f:
    float x -> a
    float y -> b
    float z -> c
    com.badlogic.gdx.math.Vector3 tmp -> d
    com.badlogic.gdx.math.Vector3 tmp2 -> e
    com.badlogic.gdx.math.Vector3 tmp3 -> f
    com.badlogic.gdx.math.Vector3 X -> g
    com.badlogic.gdx.math.Vector3 Y -> h
    com.badlogic.gdx.math.Vector3 Z -> i
    com.badlogic.gdx.math.Vector3 Zero -> j
    com.badlogic.gdx.math.Matrix4 tmpMat -> k
    com.badlogic.gdx.math.Vector3 set(float,float,float) -> a
    com.badlogic.gdx.math.Vector3 set(com.badlogic.gdx.math.Vector3) -> a
    com.badlogic.gdx.math.Vector3 tmp() -> a
    com.badlogic.gdx.math.Vector3 tmp2() -> b
    com.badlogic.gdx.math.Vector3 add(com.badlogic.gdx.math.Vector3) -> b
    com.badlogic.gdx.math.Vector3 add(float,float,float) -> b
    com.badlogic.gdx.math.Vector3 sub(com.badlogic.gdx.math.Vector3) -> c
    com.badlogic.gdx.math.Vector3 sub(float,float,float) -> c
    com.badlogic.gdx.math.Vector3 scl(float) -> a
    float len2() -> c
    com.badlogic.gdx.math.Vector3 nor() -> d
    float dot(com.badlogic.gdx.math.Vector3) -> d
    com.badlogic.gdx.math.Vector3 crs(com.badlogic.gdx.math.Vector3) -> e
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.math.WindowedMean -> com.badlogic.gdx.math.g:
    float[] values -> a
    int added_values -> b
    int last_value -> c
    float mean -> d
    boolean dirty -> e
    boolean hasEnoughData() -> a
    void clear() -> b
    void addValue(float) -> a
    float getMean() -> c
com.badlogic.gdx.math.collision.Ray -> com.badlogic.gdx.math.a.a:
    com.badlogic.gdx.math.Vector3 origin -> a
    com.badlogic.gdx.math.Vector3 direction -> b
    com.badlogic.gdx.math.Vector3 tmp -> c
    java.lang.String toString() -> toString
com.badlogic.gdx.net.NetJavaImpl -> com.badlogic.gdx.d.a:
    java.util.concurrent.ExecutorService executorService -> a
com.badlogic.gdx.utils.Array -> com.badlogic.gdx.utils.a:
    java.lang.Object[] items -> a
    int size -> b
    boolean ordered -> c
    com.badlogic.gdx.utils.Array$ArrayIterable iterable -> d
    void add(java.lang.Object) -> a
    void addAll(com.badlogic.gdx.utils.Array) -> a
    void addAll(com.badlogic.gdx.utils.Array,int,int) -> a
    void addAll(java.lang.Object[],int,int) -> a
    java.lang.Object get(int) -> a
    boolean removeValue(java.lang.Object,boolean) -> a
    java.lang.Object removeIndex(int) -> b
    java.lang.Object pop() -> a
    void clear() -> b
    java.lang.Object[] resize(int) -> c
    java.util.Iterator iterator() -> iterator
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.Array$ArrayIterable -> com.badlogic.gdx.utils.b:
    com.badlogic.gdx.utils.Array array -> a
    boolean allowRemove -> b
    com.badlogic.gdx.utils.Array$ArrayIterator iterator1 -> c
    com.badlogic.gdx.utils.Array$ArrayIterator iterator2 -> d
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.Array$ArrayIterator -> com.badlogic.gdx.utils.c:
    com.badlogic.gdx.utils.Array array -> c
    boolean allowRemove -> d
    int index -> a
    boolean valid -> b
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.BufferUtils -> com.badlogic.gdx.utils.BufferUtils:
    com.badlogic.gdx.utils.Array unsafeBuffers -> a
    int allocatedUnsafe -> b
    void copy(float[],java.nio.Buffer,int,int) -> a
    java.nio.FloatBuffer newFloatBuffer(int) -> a
    java.nio.ByteBuffer newByteBuffer(int) -> b
    java.nio.IntBuffer newIntBuffer(int) -> c
    void disposeUnsafeByteBuffer(java.nio.ByteBuffer) -> a
    java.nio.ByteBuffer newUnsafeByteBuffer(int) -> d
    void freeMemory(java.nio.ByteBuffer) -> freeMemory
    java.nio.ByteBuffer newDisposableByteBuffer(int) -> newDisposableByteBuffer
    void copyJni(float[],java.nio.Buffer,int,int) -> copyJni
com.badlogic.gdx.utils.Disposable -> com.badlogic.gdx.utils.d:
    void dispose() -> c
com.badlogic.gdx.utils.GdxNativesLoader -> com.badlogic.gdx.utils.e:
    boolean disableNativesLoading -> a
    boolean nativesLoaded -> b
    void load() -> a
com.badlogic.gdx.utils.GdxRuntimeException -> com.badlogic.gdx.utils.f:
com.badlogic.gdx.utils.IntMap -> com.badlogic.gdx.utils.g:
    int size -> a
    int[] keyTable -> b
    java.lang.Object[] valueTable -> c
    int capacity -> d
    int stashSize -> e
    java.lang.Object zeroValue -> f
    boolean hasZeroValue -> g
    float loadFactor -> h
    int hashShift -> i
    int mask -> j
    int threshold -> k
    int stashCapacity -> l
    int pushIterations -> m
    java.lang.Object put(int,java.lang.Object) -> a
    void putResize(int,java.lang.Object) -> b
    void push(int,java.lang.Object,int,int,int,int,int,int) -> a
    void putStash(int,java.lang.Object) -> c
    java.lang.Object remove(int) -> a
    java.lang.Object removeStash(int) -> b
    void removeStashIndex(int) -> c
    void resize(int) -> d
    int hash2(int) -> e
    int hash3(int) -> f
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.Logger -> com.badlogic.gdx.utils.h:
    java.lang.String tag -> a
    int level -> b
    void debug(java.lang.String) -> a
    void info(java.lang.String) -> b
    void error(java.lang.String,java.lang.Throwable) -> a
    int getLevel() -> a
com.badlogic.gdx.utils.NumberUtils -> com.badlogic.gdx.utils.i:
    boolean intToFloatColorMask -> a
    int floatToIntBits(float) -> a
    float intToFloatColor(int) -> a
com.badlogic.gdx.utils.ObjectIntMap -> com.badlogic.gdx.utils.j:
    int size -> a
    java.lang.Object[] keyTable -> b
    int[] valueTable -> c
    int capacity -> d
    int stashSize -> e
    float loadFactor -> f
    int hashShift -> g
    int mask -> h
    int threshold -> i
    int stashCapacity -> j
    int pushIterations -> k
    void put(java.lang.Object,int) -> a
    void putResize(java.lang.Object,int) -> c
    void push(java.lang.Object,int,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object) -> a
    void putStash(java.lang.Object,int) -> d
    int get(java.lang.Object,int) -> b
    int getStash(java.lang.Object,int) -> e
    void clear() -> a
    void resize(int) -> a
    int hash2(int) -> b
    int hash3(int) -> c
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.ObjectMap -> com.badlogic.gdx.utils.k:
    int size -> a
    java.lang.Object[] keyTable -> b
    java.lang.Object[] valueTable -> c
    int capacity -> d
    int stashSize -> e
    float loadFactor -> f
    int hashShift -> g
    int mask -> h
    int threshold -> i
    int stashCapacity -> j
    int pushIterations -> k
    com.badlogic.gdx.utils.ObjectMap$Entries entries1 -> l
    com.badlogic.gdx.utils.ObjectMap$Entries entries2 -> m
    com.badlogic.gdx.utils.ObjectMap$Keys keys1 -> n
    com.badlogic.gdx.utils.ObjectMap$Keys keys2 -> o
    java.lang.Object put(java.lang.Object,java.lang.Object) -> a
    java.lang.Object put_internal(java.lang.Object,java.lang.Object) -> b
    void putResize(java.lang.Object,java.lang.Object) -> c
    void push(java.lang.Object,java.lang.Object,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object) -> a
    void putStash(java.lang.Object,java.lang.Object) -> d
    java.lang.Object get(java.lang.Object) -> a
    java.lang.Object getStash(java.lang.Object) -> e
    java.lang.Object remove(java.lang.Object) -> b
    java.lang.Object removeStash(java.lang.Object) -> c
    void removeStashIndex(int) -> a
    void clear() -> a
    boolean containsKey(java.lang.Object) -> d
    boolean containsKeyStash(java.lang.Object) -> f
    void resize(int) -> b
    int hash2(int) -> c
    int hash3(int) -> d
    java.lang.String toString() -> toString
    com.badlogic.gdx.utils.ObjectMap$Entries entries() -> b
    com.badlogic.gdx.utils.ObjectMap$Keys keys() -> c
com.badlogic.gdx.utils.ObjectMap$Entries -> com.badlogic.gdx.utils.l:
    com.badlogic.gdx.utils.ObjectMap$Entry entry -> a
    com.badlogic.gdx.utils.ObjectMap$Entry next() -> a
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    void remove() -> remove
    void reset() -> b
    java.lang.Object next() -> next
com.badlogic.gdx.utils.ObjectMap$Entry -> com.badlogic.gdx.utils.m:
    java.lang.Object key -> a
    java.lang.Object value -> b
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.ObjectMap$Keys -> com.badlogic.gdx.utils.n:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> a
    void remove() -> remove
    void reset() -> b
com.badlogic.gdx.utils.ObjectMap$MapIterator -> com.badlogic.gdx.utils.o:
    boolean hasNext -> b
    com.badlogic.gdx.utils.ObjectMap map -> c
    int nextIndex -> d
    int currentIndex -> e
    boolean valid -> f
    void reset() -> b
    void advance() -> c
    void remove() -> remove
com.badlogic.gdx.utils.Pool -> com.badlogic.gdx.utils.p:
    int max -> b
    int peak -> c
    com.badlogic.gdx.utils.Array freeObjects -> a
    java.lang.Object newObject() -> b
    java.lang.Object obtain() -> c
    void free(java.lang.Object) -> a
com.badlogic.gdx.utils.Pool$Poolable -> com.badlogic.gdx.utils.q:
    void reset() -> a
com.badlogic.gdx.utils.SharedLibraryLoader -> com.badlogic.gdx.utils.r:
    boolean isWindows -> a
    boolean isLinux -> b
    boolean isMac -> c
    boolean isIos -> d
    boolean isAndroid -> e
    boolean is64Bit -> f
    java.util.HashSet loadedLibraries -> g
    java.lang.String nativesJar -> h
    java.lang.String crc(java.io.InputStream) -> a
    java.lang.String mapLibraryName(java.lang.String) -> a
    void load(java.lang.String) -> b
    java.io.InputStream readFile(java.lang.String) -> c
    java.io.File extractFile(java.lang.String,java.lang.String,java.io.File) -> a
    void loadFile(java.lang.String) -> d
    java.lang.Throwable loadFile(java.lang.String,java.lang.String,java.io.File) -> b
com.badlogic.gdx.utils.Sort -> com.badlogic.gdx.utils.s:
    com.badlogic.gdx.utils.TimSort timSort -> a
    void sort(java.lang.Object[],java.util.Comparator,int,int) -> a
com.badlogic.gdx.utils.StreamUtils -> com.badlogic.gdx.utils.t:
    byte[] EMPTY_BYTES -> a
    void closeQuietly(java.io.Closeable) -> a
com.badlogic.gdx.utils.StringBuilder -> com.badlogic.gdx.utils.u:
    char[] chars -> a
    int length -> b
    char[] digits -> c
    void enlargeBuffer(int) -> b
    void appendNull() -> a
    void append0(char) -> a
    void append0(java.lang.String) -> a
    void append0(java.lang.CharSequence,int,int) -> a
    char charAt(int) -> charAt
    int length() -> length
    java.lang.String substring(int,int) -> a
    java.lang.String toString() -> toString
    java.lang.CharSequence subSequence(int,int) -> subSequence
    com.badlogic.gdx.utils.StringBuilder append(char) -> b
    com.badlogic.gdx.utils.StringBuilder append(int) -> a
    com.badlogic.gdx.utils.StringBuilder append(java.lang.Object) -> a
    com.badlogic.gdx.utils.StringBuilder append(java.lang.String) -> b
    com.badlogic.gdx.utils.StringBuilder append(java.lang.CharSequence) -> a
    com.badlogic.gdx.utils.StringBuilder append(java.lang.CharSequence,int,int) -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Appendable append(char) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(java.lang.CharSequence) -> append
com.badlogic.gdx.utils.TimSort -> com.badlogic.gdx.utils.v:
    java.lang.Object[] a -> a
    java.util.Comparator c -> b
    int minGallop -> c
    java.lang.Object[] tmp -> d
    int tmpCount -> e
    int stackSize -> f
    int[] runBase -> g
    int[] runLen -> h
    void doSort(java.lang.Object[],java.util.Comparator,int,int) -> a
    void binarySort(java.lang.Object[],int,int,int,java.util.Comparator) -> a
    int countRunAndMakeAscending(java.lang.Object[],int,int,java.util.Comparator) -> a
    void reverseRange(java.lang.Object[],int,int) -> a
    int minRunLength(int) -> a
    void pushRun(int,int) -> a
    void mergeCollapse() -> a
    void mergeForceCollapse() -> b
    void mergeAt(int) -> b
    int gallopLeft(java.lang.Object,java.lang.Object[],int,int,int,java.util.Comparator) -> a
    int gallopRight(java.lang.Object,java.lang.Object[],int,int,int,java.util.Comparator) -> b
    void mergeLo(int,int,int,int) -> a
    void mergeHi(int,int,int,int) -> b
    java.lang.Object[] ensureCapacity(int) -> c
    void rangeCheck(int,int,int) -> a
com.badlogic.gdx.utils.TimeUtils -> com.badlogic.gdx.utils.w:
    long nanoTime() -> a
com.badlogic.gdx.utils.async.AsyncExecutor -> com.badlogic.gdx.utils.a.a:
    java.util.concurrent.ExecutorService executor -> a
    com.badlogic.gdx.utils.async.AsyncResult submit(com.badlogic.gdx.utils.async.AsyncTask) -> a
    void dispose() -> c
com.badlogic.gdx.utils.async.AsyncExecutor$2 -> com.badlogic.gdx.utils.a.b:
    com.badlogic.gdx.utils.async.AsyncTask val$task -> a
    com.badlogic.gdx.utils.async.AsyncExecutor this$0 -> b
    java.lang.Object call() -> call
com.badlogic.gdx.utils.async.AsyncResult -> com.badlogic.gdx.utils.a.c:
    java.util.concurrent.Future future -> a
    boolean isDone() -> a
    java.lang.Object get() -> b
com.badlogic.gdx.utils.async.AsyncTask -> com.badlogic.gdx.utils.a.d:
    java.lang.Object call() -> d
com.badlogic.gdx.utils.async.ThreadUtils -> com.badlogic.gdx.utils.a.e:
    void yield() -> a
com.badlogic.gdx.utils.reflect.ArrayReflection -> com.badlogic.gdx.utils.b.a:
    java.lang.Object newInstance(java.lang.Class,int) -> a
com.badlogic.gdx.utils.reflect.ClassReflection -> com.badlogic.gdx.utils.b.b:
    java.lang.String getSimpleName(java.lang.Class) -> a
com.dailystudio.GlobalContextWrapper -> com.dailystudio.a:
    android.content.Context sContext -> a
    void bindContext(android.content.Context) -> a
    void unbindContext(android.content.Context) -> b
    android.content.Context getContext() -> a
com.dailystudio.R -> com.dailystudio.R:
com.dailystudio.R$drawable -> com.dailystudio.R$drawable:
    int icon -> icon
com.dailystudio.R$string -> com.dailystudio.R$string:
    int app_name -> app_name
    int build_device -> build_device
    int build_manufacture -> build_manufacture
    int build_platform -> build_platform
com.dailystudio.app.R -> com.dailystudio.app.R:
com.dailystudio.app.R$drawable -> com.dailystudio.app.R$drawable:
    int ic_launcher -> ic_launcher
    int icon -> icon
com.dailystudio.app.R$string -> com.dailystudio.app.R$string:
    int app_name -> app_name
    int build_device -> build_device
    int build_manufacture -> build_manufacture
    int build_platform -> build_platform
com.dailystudio.app.dataobject.BaseDatabaseStream -> com.dailystudio.app.dataobject.a:
    com.dailystudio.dataobject.database.DatabaseConnectivity mConnectivity -> b
    com.dailystudio.app.dataobject.QueryBuilder mQueryBuilder -> a
    com.dailystudio.app.dataobject.QueryBuilder onCreateQueryBuilder(java.lang.Class) -> a
    com.dailystudio.dataobject.database.DatabaseConnectivity getConnectivity() -> a
    com.dailystudio.dataobject.query.Query getQuery() -> b
com.dailystudio.app.dataobject.CountObject -> com.dailystudio.app.dataobject.CountObject:
    com.dailystudio.dataobject.Column COLUMN_ID -> a
    com.dailystudio.dataobject.Column COLUMN_COUNT -> b
    com.dailystudio.dataobject.Column[] sColumns -> f
    void setCount(int) -> a
    int getCount() -> a
    java.lang.String toString() -> toString
com.dailystudio.app.dataobject.DatabaseReader -> com.dailystudio.app.dataobject.b:
    com.dailystudio.app.dataobject.QueryBuilder onCreateQueryBuilder(java.lang.Class) -> a
    java.util.List query(com.dailystudio.dataobject.query.Query) -> a
    java.util.List query(com.dailystudio.dataobject.query.Query,java.lang.Class) -> a
    java.util.List queryTopN(com.dailystudio.dataobject.query.Query,int) -> a
    com.dailystudio.dataobject.DatabaseObject queryLastOne(com.dailystudio.dataobject.query.Query) -> b
    long queryCount(com.dailystudio.dataobject.query.Query) -> c
    com.dailystudio.dataobject.query.Query getQuery() -> b
com.dailystudio.app.dataobject.DatabaseWriter -> com.dailystudio.app.dataobject.c:
    long insert(com.dailystudio.dataobject.DatabaseObject) -> a
    int delete(com.dailystudio.dataobject.query.Query) -> a
    com.dailystudio.dataobject.query.Query getQuery() -> b
com.dailystudio.app.dataobject.QueryBuilder -> com.dailystudio.app.dataobject.d:
    java.lang.Class mObjectClass -> a
    com.dailystudio.dataobject.query.Query getQuery() -> a
com.dailystudio.app.dataobject.loader.ConvertedDatabaseObjectsLoader -> com.dailystudio.app.dataobject.a.a:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> f
    java.util.List loadInBackground() -> f
    com.dailystudio.dataobject.database.DatabaseConnectivity getDatabaseConnectivity(java.lang.Class) -> a
    com.dailystudio.dataobject.query.Query getQuery(java.lang.Class) -> b
    java.lang.Class getProjectionClass() -> x
    java.lang.Class getObjectClass() -> y
    java.lang.Object loadInBackground() -> d
com.dailystudio.app.dataobject.loader.DatabaseCursorLoader -> com.dailystudio.app.dataobject.a.b:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> u
    android.database.Cursor loadInBackground() -> f
    com.dailystudio.dataobject.database.DatabaseConnectivity getDatabaseConnectivity(java.lang.Class) -> a
    com.dailystudio.dataobject.query.Query getQuery(java.lang.Class) -> b
    java.lang.Class getProjectionClass() -> x
    java.lang.Class getObjectClass() -> y
com.dailystudio.app.dataobject.loader.DatabaseObjectsLoader -> com.dailystudio.app.dataobject.a.c:
com.dailystudio.app.dataobject.loader.ProjectedDatabaseObjectsLoader -> com.dailystudio.app.dataobject.a.d:
com.dailystudio.app.fragment.AbsAdapterFragment -> com.dailystudio.app.a.a:
    android.widget.AdapterView mAdapterView -> P
    android.widget.BaseAdapter mAdapter -> Q
    com.dailystudio.app.fragment.AbsAdapterFragment$OnListItemSelectedListener mOnListItemSelectedListener -> R
    android.os.Handler mHandler -> S
    com.dailystudio.app.widget.DeferredHandler mDeferredHandler -> T
    java.lang.Runnable notifyAdapterChangedRunnable -> U
    void onActivityCreated(android.os.Bundle) -> d
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    int getAdapterViewId() -> C
    void bindAdapterView() -> D
    android.widget.BaseAdapter getAdapter() -> E
    void onAttach(android.app.Activity) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
    void removeCallbacks(java.lang.Runnable) -> a
    void post(java.lang.Runnable) -> b
    void notifyAdapterChangedOnIdle() -> F
    void bindData(android.widget.BaseAdapter,java.lang.Object) -> a
    android.widget.BaseAdapter onCreateAdapter() -> G
    android.widget.BaseAdapter access$0(com.dailystudio.app.fragment.AbsAdapterFragment) -> a
com.dailystudio.app.fragment.AbsAdapterFragment$1 -> com.dailystudio.app.a.b:
    com.dailystudio.app.fragment.AbsAdapterFragment this$0 -> a
    void run() -> run
com.dailystudio.app.fragment.AbsAdapterFragment$OnListItemSelectedListener -> com.dailystudio.app.a.c:
    void onListItemSelected(java.lang.Object) -> a
com.dailystudio.app.fragment.AbsArrayAdapterFragment -> com.dailystudio.app.a.d:
    java.lang.Runnable mSortAdapterRunnable -> P
    void onLoadFinished(android.support.v4.content.Loader,java.util.List) -> a
    void bindData(android.widget.BaseAdapter,java.util.List) -> a
    boolean clearBeforeBindData() -> H
    void sortAdapterIfPossible() -> I
    java.util.Comparator getComparator() -> J
    void bindData(android.widget.BaseAdapter,java.lang.Object) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
com.dailystudio.app.fragment.AbsArrayAdapterFragment$1 -> com.dailystudio.app.a.e:
    com.dailystudio.app.fragment.AbsArrayAdapterFragment this$0 -> a
    void run() -> run
com.dailystudio.app.fragment.AbsCursorAdapterFragment -> com.dailystudio.app.a.f:
    void onDestroy() -> p
    void bindAdapterView() -> D
    void bindData(android.widget.BaseAdapter,android.database.Cursor) -> a
    void swapCursor(android.database.Cursor) -> a
    void bindData(android.widget.BaseAdapter,java.lang.Object) -> a
com.dailystudio.app.fragment.AbsLoaderFragment -> com.dailystudio.app.a.g:
    void onActivityCreated(android.os.Bundle) -> d
    void onNewIntent(android.content.Intent) -> a
    void bindIntent(android.content.Intent) -> b
    void restartLoader() -> K
    int getEmptyViewId() -> L
    int getLoaderId() -> M
    android.os.Bundle createLoaderArguments() -> N
com.dailystudio.app.loader.AbsAsyncDataLoader -> com.dailystudio.app.b.a:
    java.lang.Object mData -> g
    void deliverResult(java.lang.Object) -> b
    void onStartLoading() -> g
    void onStopLoading() -> h
    void onCanceled(java.lang.Object) -> a
    void onReset() -> i
    void onReleaseData(java.lang.Object) -> d
com.dailystudio.app.prefs.AbsPrefs -> com.dailystudio.app.c.a:
    android.content.SharedPreferences getSharedPreferences(android.content.Context) -> a
    android.content.SharedPreferences$Editor getEditor(android.content.Context) -> b
    void setBooleanPrefValue(android.content.Context,java.lang.String,boolean) -> a
    boolean getBooleanPrefValue(android.content.Context,java.lang.String,boolean) -> b
    java.lang.String getPrefName() -> a
com.dailystudio.app.utils.ActivityLauncher -> com.dailystudio.app.d.a:
    com.dailystudio.app.utils.ActivityLauncher$OnExceptionHandler sOnExceptionHandler -> a
    void launchActivity(android.content.Context,android.content.Intent,com.dailystudio.app.utils.ActivityLauncher$OnExceptionHandler) -> a
    void launchActivity(android.content.Context,android.content.Intent) -> a
com.dailystudio.app.utils.ActivityLauncher$1 -> com.dailystudio.app.d.b:
    void onException(android.content.Intent,java.lang.Exception) -> a
com.dailystudio.app.utils.ActivityLauncher$OnExceptionHandler -> com.dailystudio.app.d.c:
    void onException(android.content.Intent,java.lang.Exception) -> a
com.dailystudio.app.utils.FileUtils -> com.dailystudio.app.d.d:
    java.lang.String getFileContent(java.io.InputStream,java.lang.String) -> a
    java.lang.String getAssetFileContent(android.content.Context,java.lang.String) -> a
    java.lang.String detectFileEncoding(java.io.InputStream) -> a
com.dailystudio.app.utils.ThumbAsyncDecoder -> com.dailystudio.app.d.e:
    java.util.Set sThumbDecodeRequests -> a
    void requestDecodeFileThumb(android.content.Context,java.lang.String,java.lang.String) -> a
    void requestDecodeResourceThumb(android.content.Context,java.lang.String,java.lang.String,int) -> a
    void requestDecodeAndroidResourceSchemeThumb(android.content.Context,java.lang.String,java.lang.String) -> b
    void requestDecodeThumb(android.content.Context,com.dailystudio.app.utils.ThumbAsyncDecoder$AbsDecodeThumbAsyncTask) -> a
    java.util.Set access$0() -> a
com.dailystudio.app.utils.ThumbAsyncDecoder$AbsDecodeThumbAsyncTask -> com.dailystudio.app.d.f:
    java.lang.String mThumbKey -> b
    java.lang.String mDecodeSource -> c
    java.lang.String getThumbKey() -> a
    java.lang.String getDecodeSource() -> b
    void decode(android.content.Context) -> a
    android.graphics.Bitmap doInBackground(android.content.Context[]) -> a
    void onPostExecute(android.graphics.Bitmap) -> a
    android.graphics.Bitmap doDecodeBitmap(android.content.Context,java.lang.String,java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> a
com.dailystudio.app.utils.ThumbAsyncDecoder$DecodeAndroidResourceSchemeThumbAsyncTask -> com.dailystudio.app.d.g:
    android.graphics.Bitmap doDecodeBitmap(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String dumpPackage(java.lang.String) -> a
    java.lang.String dumpResourceName(java.lang.String) -> b
    java.lang.String dumpResourceType(java.lang.String) -> c
com.dailystudio.app.utils.ThumbAsyncDecoder$DecodeFileThumbAsyncTask -> com.dailystudio.app.d.h:
    android.graphics.Bitmap doDecodeBitmap(android.content.Context,java.lang.String,java.lang.String) -> a
com.dailystudio.app.utils.ThumbAsyncDecoder$DecodeResourceThumbAsyncTask -> com.dailystudio.app.d.i:
    android.graphics.Bitmap doDecodeBitmap(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String buildupResourceInfo(java.lang.String,int) -> a
    java.lang.String dumpPackage(java.lang.String) -> a
    int dumpResourceId(java.lang.String) -> b
com.dailystudio.app.utils.ThumbCacheManager -> com.dailystudio.app.d.j:
    android.support.v4.util.LruCache sThumbsCache -> a
    com.dailystudio.app.utils.ThumbCacheManager$ThumbCacheObserable sThumbCacheObserable -> b
    java.lang.Runnable sNotifyChangesRunnable -> c
    android.os.Handler sHandler -> d
    void clear() -> a
    void addCacheObserver(java.util.Observer) -> a
    void removeCacheObserver(java.util.Observer) -> b
    android.graphics.Bitmap queryCachedThumb(java.lang.String) -> a
    void cachedThumb(java.lang.String,android.graphics.Bitmap) -> a
    void removeThumb(java.lang.String) -> b
    com.dailystudio.app.utils.ThumbCacheManager$ThumbCacheObserable access$0() -> b
com.dailystudio.app.utils.ThumbCacheManager$1 -> com.dailystudio.app.d.k:
    void run() -> run
com.dailystudio.app.utils.ThumbCacheManager$ThumbCacheObserable -> com.dailystudio.app.d.l:
    void notifyCacheChanges() -> a
com.dailystudio.app.utils.WebViewUtils -> com.dailystudio.app.d.m:
    void setBackgroundToTransparent(android.webkit.WebView) -> a
com.dailystudio.app.widget.DeferredHandler -> com.dailystudio.app.e.a:
    java.util.LinkedList mQueue -> a
    android.os.MessageQueue mMessageQueue -> b
    com.dailystudio.app.widget.DeferredHandler$Impl mHandler -> c
    void post(java.lang.Runnable) -> a
    void postIdle(java.lang.Runnable) -> b
    void scheduleNextLocked() -> a
    java.util.LinkedList access$0(com.dailystudio.app.widget.DeferredHandler) -> a
com.dailystudio.app.widget.DeferredHandler$IdleRunnable -> com.dailystudio.app.e.b:
    java.lang.Runnable mRunnable -> a
    com.dailystudio.app.widget.DeferredHandler this$0 -> b
    void run() -> run
com.dailystudio.app.widget.DeferredHandler$Impl -> com.dailystudio.app.e.c:
    com.dailystudio.app.widget.DeferredHandler this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
    boolean queueIdle() -> queueIdle
com.dailystudio.app.widget.SimpleDatabaseObjectCursorAdapter -> com.dailystudio.app.e.d:
    java.lang.Class mObjectClass -> m
    int mVersion -> n
    com.dailystudio.dataobject.DatabaseObject dumpItem(int) -> a
    com.dailystudio.dataobject.DatabaseObject dumpItem(android.database.Cursor) -> d
com.dailystudio.compat.CompatAsyncTask -> com.dailystudio.a.a:
    java.util.concurrent.ThreadFactory sThreadFactory -> b
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> c
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> a
    com.dailystudio.compat.CompatAsyncTask$InternalHandler sHandler -> d
    java.util.concurrent.Executor sDefaultExecutor -> e
    com.dailystudio.compat.CompatAsyncTask$WorkerRunnable mWorker -> f
    java.util.concurrent.FutureTask mFuture -> g
    com.dailystudio.compat.CompatAsyncTask$Status mStatus -> h
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> i
    int[] $SWITCH_TABLE$com$dailystudio$compat$CompatAsyncTask$Status -> j
    void postResultIfNotInvoked(java.lang.Object) -> c
    java.lang.Object postResult(java.lang.Object) -> d
    com.dailystudio.compat.CompatAsyncTask$Status getStatus() -> e_
    java.lang.Object doInBackground(java.lang.Object[]) -> a
    void onPreExecute() -> d
    void onPostExecute(java.lang.Object) -> a
    void onProgressUpdate(java.lang.Object[]) -> b
    void onCancelled(java.lang.Object) -> b
    void onCancelled() -> e
    boolean isCancelled() -> f
    boolean cancel(boolean) -> a
    com.dailystudio.compat.CompatAsyncTask execute(java.lang.Object[]) -> c
    com.dailystudio.compat.CompatAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> a
    void finish(java.lang.Object) -> e
    void access$0(com.dailystudio.compat.CompatAsyncTask,java.lang.Object) -> a
    java.util.concurrent.atomic.AtomicBoolean access$1(com.dailystudio.compat.CompatAsyncTask) -> a
    java.lang.Object access$2(com.dailystudio.compat.CompatAsyncTask,java.lang.Object) -> b
    void access$3(com.dailystudio.compat.CompatAsyncTask,java.lang.Object) -> c
    int[] $SWITCH_TABLE$com$dailystudio$compat$CompatAsyncTask$Status() -> g
com.dailystudio.compat.CompatAsyncTask$1 -> com.dailystudio.a.b:
    java.util.concurrent.atomic.AtomicInteger mCount -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.dailystudio.compat.CompatAsyncTask$2 -> com.dailystudio.a.c:
    com.dailystudio.compat.CompatAsyncTask this$0 -> a
    java.lang.Object call() -> call
com.dailystudio.compat.CompatAsyncTask$3 -> com.dailystudio.a.d:
    com.dailystudio.compat.CompatAsyncTask this$0 -> a
    void done() -> done
com.dailystudio.compat.CompatAsyncTask$AsyncTaskResult -> com.dailystudio.a.e:
    com.dailystudio.compat.CompatAsyncTask mTask -> a
    java.lang.Object[] mData -> b
com.dailystudio.compat.CompatAsyncTask$InternalHandler -> com.dailystudio.a.f:
    void handleMessage(android.os.Message) -> handleMessage
com.dailystudio.compat.CompatAsyncTask$Status -> com.dailystudio.a.g:
    com.dailystudio.compat.CompatAsyncTask$Status PENDING -> a
    com.dailystudio.compat.CompatAsyncTask$Status RUNNING -> b
    com.dailystudio.compat.CompatAsyncTask$Status FINISHED -> c
    com.dailystudio.compat.CompatAsyncTask$Status[] ENUM$VALUES -> d
    com.dailystudio.compat.CompatAsyncTask$Status[] values() -> values
    com.dailystudio.compat.CompatAsyncTask$Status valueOf(java.lang.String) -> valueOf
com.dailystudio.compat.CompatAsyncTask$WorkerRunnable -> com.dailystudio.a.h:
    java.lang.Object[] mParams -> b
com.dailystudio.dataobject.BlobColumn -> com.dailystudio.b.a:
    void setValue(android.content.ContentValues,java.lang.Object) -> a
    java.lang.Object getValue(android.content.ContentValues) -> a
    boolean matchColumnType(java.lang.Object) -> a
    void parseValueFrom(android.database.Cursor,android.content.ContentValues) -> a
    java.lang.String convertValueToString(java.lang.Object) -> b
    java.lang.String byteArrayToHexString(byte[]) -> a
com.dailystudio.dataobject.Column -> com.dailystudio.b.b:
    java.lang.String mTypeName -> a
    java.lang.String mColName -> b
    boolean mAllowNull -> c
    boolean mIsPrimary -> d
    int mVersion -> e
    com.dailystudio.dataobject.query.ExpressionToken sEmtpyExpToken -> f
    com.dailystudio.dataobject.query.OrderingToken sEmtpyOrderToken -> g
    java.lang.String getName() -> a
    java.lang.String getType() -> b
    int getVerion() -> c
    boolean isValid() -> d
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    boolean matchColumnType(java.lang.Object) -> a
    void setValue(android.content.ContentValues,java.lang.Object) -> a
    java.lang.Object getValue(android.content.ContentValues) -> a
    void parseValueFrom(android.database.Cursor,android.content.ContentValues) -> a
    java.lang.String convertValueToString(java.lang.Object) -> b
    com.dailystudio.dataobject.query.ExpressionToken eq(java.lang.Object) -> c
    com.dailystudio.dataobject.query.ExpressionToken neq(java.lang.Object) -> d
    com.dailystudio.dataobject.query.ExpressionToken gte(java.lang.Object) -> e
    com.dailystudio.dataobject.query.ExpressionToken lte(java.lang.Object) -> f
    com.dailystudio.dataobject.query.ExpressionToken inValues(java.lang.Object[]) -> a
    com.dailystudio.dataobject.query.OrderingToken orderByAscending() -> e
    com.dailystudio.dataobject.query.OrderingToken orderByDescending() -> f
    com.dailystudio.dataobject.query.OrderingToken orderBy(java.lang.String) -> a
    com.dailystudio.dataobject.query.ExpressionToken binaryOperator(java.lang.String,java.lang.Object) -> a
    com.dailystudio.dataobject.query.ExpressionToken binaryOperator(java.lang.String,java.lang.Object[]) -> a
com.dailystudio.dataobject.DatabaseObject -> com.dailystudio.b.c:
    android.content.ContentValues mValues -> a
    com.dailystudio.dataobject.Template mTemplate -> c
    android.content.Context mContext -> d
    int mVersion -> e
    void initMembers() -> a
    com.dailystudio.dataobject.Template getTemplate() -> b
    android.content.ContentValues getValues() -> c
    void setValue(com.dailystudio.dataobject.Column,java.lang.Object) -> a
    java.lang.Object getValue(com.dailystudio.dataobject.Column) -> a
    int getIntegerValue(com.dailystudio.dataobject.Column) -> b
    long getLongValue(com.dailystudio.dataobject.Column) -> c
    double getDoubleValue(com.dailystudio.dataobject.Column) -> d
    java.lang.String getTextValue(com.dailystudio.dataobject.Column) -> e
    byte[] getBlobValue(com.dailystudio.dataobject.Column) -> f
    boolean isEmpty() -> d
    void fillValuesFromCursor(android.database.Cursor) -> a
    int getVersion() -> e
    java.lang.String[] toSQLProjection() -> f
    java.lang.String toSQLTableCreationString() -> g
    java.lang.String classToTable(java.lang.Class) -> a
    java.lang.String classToDatabase(java.lang.Class) -> b
com.dailystudio.dataobject.DatabaseObjectCreationParams -> com.dailystudio.b.d:
    java.lang.Class objectClass -> a
    int version -> b
com.dailystudio.dataobject.DatabaseObjectFactory -> com.dailystudio.b.e:
    com.dailystudio.dataobject.DatabaseObjectFactory getInstance() -> b
    com.dailystudio.dataobject.DatabaseObject createDatabaseObject(java.lang.Class) -> a
    com.dailystudio.dataobject.DatabaseObject createDatabaseObject(java.lang.Class,int) -> a
    void initMembers() -> c
    com.dailystudio.dataobject.DatabaseObject newObject(com.dailystudio.dataobject.DatabaseObjectCreationParams) -> a
    java.lang.Object newObject(java.lang.Object) -> a
com.dailystudio.dataobject.DoubleColumn -> com.dailystudio.b.f:
    void setValue(android.content.ContentValues,java.lang.Object) -> a
    java.lang.Object getValue(android.content.ContentValues) -> a
    boolean matchColumnType(java.lang.Object) -> a
    void parseValueFrom(android.database.Cursor,android.content.ContentValues) -> a
    java.lang.String convertValueToString(java.lang.Object) -> b
com.dailystudio.dataobject.IntegerColumn -> com.dailystudio.b.g:
    void setValue(android.content.ContentValues,java.lang.Object) -> a
    java.lang.Object getValue(android.content.ContentValues) -> a
    boolean matchColumnType(java.lang.Object) -> a
    void parseValueFrom(android.database.Cursor,android.content.ContentValues) -> a
    java.lang.String convertValueToString(java.lang.Object) -> b
com.dailystudio.dataobject.LongColumn -> com.dailystudio.b.h:
    void setValue(android.content.ContentValues,java.lang.Object) -> a
    java.lang.Object getValue(android.content.ContentValues) -> a
    boolean matchColumnType(java.lang.Object) -> a
    void parseValueFrom(android.database.Cursor,android.content.ContentValues) -> a
    java.lang.String convertValueToString(java.lang.Object) -> b
com.dailystudio.dataobject.Template -> com.dailystudio.b.i:
    java.util.List mColumns -> a
    java.util.HashMap mColumnsMap -> b
    void initMembers() -> c
    void addColumns(com.dailystudio.dataobject.Column[]) -> a
    void addColumn(com.dailystudio.dataobject.Column) -> a
    java.util.List listColumns() -> a
    boolean containsColumn(com.dailystudio.dataobject.Column) -> b
    boolean isEmpty() -> b
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.dailystudio.dataobject.TextColumn -> com.dailystudio.b.j:
    void setValue(android.content.ContentValues,java.lang.Object) -> a
    java.lang.Object getValue(android.content.ContentValues) -> a
    boolean matchColumnType(java.lang.Object) -> a
    void parseValueFrom(android.database.Cursor,android.content.ContentValues) -> a
    java.lang.String convertValueToString(java.lang.Object) -> b
com.dailystudio.dataobject.TimeColumn -> com.dailystudio.b.k:
    void setValue(android.content.ContentValues,java.lang.Object) -> a
    java.lang.Object getValue(android.content.ContentValues) -> a
    boolean matchColumnType(java.lang.Object) -> a
    void parseValueFrom(android.database.Cursor,android.content.ContentValues) -> a
    java.lang.String convertValueToString(java.lang.Object) -> b
    com.dailystudio.dataobject.query.OrderingToken groupByWeek() -> g
    com.dailystudio.dataobject.query.OrderingToken groupByMonth() -> h
    com.dailystudio.dataobject.Column WEEK() -> i
    com.dailystudio.dataobject.Column WEEKDAY() -> j
    com.dailystudio.dataobject.Column MONTH() -> k
com.dailystudio.dataobject.database.AbsDatabaseConnectivity -> com.dailystudio.b.a.a:
    android.content.Context mContext -> a
    java.lang.Class mObjectClass -> b
    int mVersion -> c
    boolean matchClass(java.lang.Class) -> a
    long insert(com.dailystudio.dataobject.DatabaseObject) -> a
    int insert(com.dailystudio.dataobject.DatabaseObject[]) -> a
    int update(com.dailystudio.dataobject.query.Query,com.dailystudio.dataobject.DatabaseObject) -> a
    int delete(com.dailystudio.dataobject.query.Query) -> a
    android.database.Cursor queryCursor(com.dailystudio.dataobject.query.Query) -> b
    android.database.Cursor queryCursor(com.dailystudio.dataobject.query.Query,java.lang.Class) -> a
    java.util.List query(com.dailystudio.dataobject.query.Query) -> c
    java.util.List query(com.dailystudio.dataobject.query.Query,java.lang.Class) -> b
    void notifyObservers() -> a
    long onInsert(com.dailystudio.dataobject.DatabaseObject) -> b
    int onInsert(com.dailystudio.dataobject.DatabaseObject[]) -> b
    int onUpdate(com.dailystudio.dataobject.query.Query,com.dailystudio.dataobject.DatabaseObject) -> b
    int onDelete(com.dailystudio.dataobject.query.Query) -> d
    java.util.List onQuery(com.dailystudio.dataobject.query.Query,java.lang.Class) -> c
    android.database.Cursor onQueryCursor(com.dailystudio.dataobject.query.Query,java.lang.Class) -> d
    com.dailystudio.dataobject.DatabaseObject fromCursor(android.database.Cursor,java.lang.Class) -> a
    java.lang.String[] createProjection(java.lang.Class) -> b
    int getObjectVersion(java.lang.Class) -> c
    int getDatabaseVersion() -> b
com.dailystudio.dataobject.database.AsyncDatabaseHelper -> com.dailystudio.b.a.b:
    android.os.Looper sLooper -> b
    android.os.Looper sResultLooper -> c
    android.os.Handler mWorkerThreadHandler -> d
    android.os.Handler mResultThreadHandler -> e
    com.dailystudio.dataobject.database.DatabaseConnectivity mDatabaseConnectivity -> a
    android.os.Handler createHandler(android.os.Looper) -> a
    android.os.Handler createResultHandler(android.os.Looper) -> b
    void startQuery(int,java.lang.Object,com.dailystudio.dataobject.query.Query) -> a
    void startQuery(int,java.lang.Object,com.dailystudio.dataobject.query.Query,java.lang.Class) -> a
    void onQueryComplete(int,java.lang.Object,java.util.List) -> a
    void onQueryCursorComplete(int,java.lang.Object,android.database.Cursor) -> a
    void onInsertComplete(int,java.lang.Object,long) -> a
    void onBulkInsertComplete(int,java.lang.Object,int) -> a
    void onUpdateComplete(int,java.lang.Object,int) -> b
    void onDeleteComplete(int,java.lang.Object,int) -> c
com.dailystudio.dataobject.database.AsyncDatabaseHelper$ResultHandler -> com.dailystudio.b.a.c:
    com.dailystudio.dataobject.database.AsyncDatabaseHelper this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.dailystudio.dataobject.database.AsyncDatabaseHelper$WorkerArgs -> com.dailystudio.b.a.d:
    android.os.Handler handler -> a
    com.dailystudio.dataobject.query.Query query -> b
    java.lang.Class projectionClass -> c
    com.dailystudio.dataobject.DatabaseObject[] objects -> d
    java.lang.Object result -> e
    java.lang.Object cookie -> f
com.dailystudio.dataobject.database.AsyncDatabaseHelper$WorkerHandler -> com.dailystudio.b.a.e:
    com.dailystudio.dataobject.database.AsyncDatabaseHelper this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.dailystudio.dataobject.database.CommandCursor -> com.dailystudio.b.a.f:
    java.lang.String mCommand -> a
    android.content.ContentValues mValues -> b
    java.util.List mColumns -> c
    void addColumn(java.lang.String) -> a
    void addColumns(java.lang.String[]) -> a
    void putValue(java.lang.String,java.lang.Integer) -> a
    java.lang.String[] getColumnNames() -> getColumnNames
    int getCount() -> getCount
    double getDouble(int) -> getDouble
    float getFloat(int) -> getFloat
    int getInt(int) -> getInt
    long getLong(int) -> getLong
    short getShort(int) -> getShort
    java.lang.String getString(int) -> getString
    boolean isNull(int) -> isNull
    java.lang.String getColumnName(int) -> getColumnName
com.dailystudio.dataobject.database.DatabaseConnectivity -> com.dailystudio.b.a.g:
    java.lang.String[] MOCK_COLUMN_NAMES -> d
    android.content.ContentResolver mContentResovler -> e
    java.lang.String mAuthority -> f
    boolean checkProviderPreparation() -> e
    long onInsert(com.dailystudio.dataobject.DatabaseObject) -> b
    int onInsert(com.dailystudio.dataobject.DatabaseObject[]) -> b
    int onDelete(com.dailystudio.dataobject.query.Query) -> d
    int onUpdate(com.dailystudio.dataobject.query.Query,com.dailystudio.dataobject.DatabaseObject) -> b
    android.database.Cursor doQueryCursor(long,com.dailystudio.dataobject.query.Query,java.lang.Class) -> a
    android.database.Cursor onQueryCursor(com.dailystudio.dataobject.query.Query,java.lang.Class) -> d
    android.database.Cursor makeMockEmptyCursor(long) -> a
    java.util.List onQuery(com.dailystudio.dataobject.query.Query,java.lang.Class) -> c
    void closeOpenedDatabase(long) -> b
    android.net.Uri getDatabaseObserverUri() -> c
    java.lang.String[] access$0() -> d
com.dailystudio.dataobject.database.DatabaseConnectivity$MockEmptyCursor -> com.dailystudio.b.a.h:
    java.lang.String[] getColumnNames() -> getColumnNames
    int getCount() -> getCount
com.dailystudio.dataobject.database.DatabaseConnectivityProvider -> com.dailystudio.b.a.i:
    boolean onCreate() -> onCreate
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int bulkInsert(android.net.Uri,android.content.ContentValues[]) -> bulkInsert
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    android.database.Cursor queryCommands(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> a
    android.database.Cursor doCommandGetUpdateInfo(android.content.Context,java.lang.String,java.lang.String,int) -> a
    android.database.Cursor queryObjects(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> b
    void manageOpenedDatabase(long,android.database.sqlite.SQLiteDatabase) -> a
    boolean checkOrCreateTable(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String) -> a
com.dailystudio.dataobject.database.DatabaseObserver -> com.dailystudio.b.a.j:
    java.lang.String composeBroadcaseAction(java.lang.Class) -> a
com.dailystudio.dataobject.database.DatabaseOpenHandler -> com.dailystudio.b.a.k:
    int mCurrentVersion -> a
    int mOldVersion -> b
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void onDowngrade(android.database.sqlite.SQLiteDatabase,int,int) -> onDowngrade
    android.database.sqlite.SQLiteDatabase getWritableDatabase() -> getWritableDatabase
    int getNewVersion() -> a
    int getOldVersion() -> b
com.dailystudio.dataobject.database.GetUpdateInfoCmdCursor -> com.dailystudio.b.a.l:
    java.lang.String[] sColumns -> a
    java.lang.String[] getColumnNames() -> getColumnNames
    java.lang.String getString(int) -> getString
    void putValue(java.lang.String,java.lang.Integer) -> a
    void addColumns(java.lang.String[]) -> a
    boolean isNull(int) -> isNull
    short getShort(int) -> getShort
    int getCount() -> getCount
    java.lang.String getColumnName(int) -> getColumnName
    double getDouble(int) -> getDouble
    float getFloat(int) -> getFloat
    int getInt(int) -> getInt
    long getLong(int) -> getLong
    void addColumn(java.lang.String) -> a
com.dailystudio.dataobject.database.OpenedDatabase -> com.dailystudio.b.a.m:
    long mSerial -> a
    android.database.sqlite.SQLiteDatabase mDatabase -> b
    void close() -> a
    java.lang.Long getSingletonKey() -> b
    java.lang.Object getSingletonKey() -> c
com.dailystudio.dataobject.database.OpenedDatabaseCloseReceiver -> com.dailystudio.b.a.n:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.dailystudio.dataobject.database.OpenedDatabaseManager -> com.dailystudio.b.a.o:
    com.dailystudio.dataobject.database.OpenedDatabaseCloseReceiver mReceiver -> a
    com.dailystudio.dataobject.database.OpenedDatabaseManager getInstance() -> b
    void addObject(com.dailystudio.dataobject.database.OpenedDatabase) -> a
    com.dailystudio.dataobject.database.OpenedDatabase removeObject(java.lang.Long) -> a
    boolean registerReceiver() -> d
    void unregisterReceiver() -> i
    void addObject(com.dailystudio.manager.ISingletonObject) -> a
    com.dailystudio.manager.ISingletonObject removeObject(java.lang.Object) -> a
com.dailystudio.dataobject.database.ProviderCommandUriParser -> com.dailystudio.b.a.p:
    boolean hasValidBase() -> a
    java.lang.String getDatabase() -> b
    java.lang.String getTable() -> c
    int getVersion() -> d
    java.lang.String getCommand() -> e
com.dailystudio.dataobject.database.ProviderQueryUriParser -> com.dailystudio.b.a.q:
    boolean hasValidBase() -> a
    java.lang.String getDatabase() -> b
    java.lang.String getTable() -> c
    int getVersion() -> d
    long getSerial() -> e
    java.lang.String getCreateTableSQL() -> f
com.dailystudio.dataobject.database.ProviderResultUriParser -> com.dailystudio.b.a.r:
    boolean hasValidBase() -> a
    java.lang.String getDatabase() -> b
    java.lang.String getTable() -> c
    long getRowId() -> d
com.dailystudio.dataobject.database.ProviderUriBuilder -> com.dailystudio.b.a.s:
    android.net.Uri buildQueryUri(java.lang.String,java.lang.Class,int) -> a
    android.net.Uri buildQueryUri(java.lang.String,java.lang.Class,int,long) -> a
    android.net.Uri buildResultUri(java.lang.String,java.lang.String,int,java.lang.String) -> a
    android.net.Uri buildResultUri(java.lang.String,java.lang.String,int,java.lang.String,long) -> a
    android.net.Uri attachSerialParamter(android.net.Uri,java.lang.String) -> b
    android.net.Uri attachCreateTableParamter(android.net.Uri,java.lang.String) -> a
com.dailystudio.dataobject.database.ProviderUriParser -> com.dailystudio.b.a.t:
    android.net.Uri mUri -> a
    java.lang.String getSegmentFromUri(int) -> a
    java.lang.String getBase() -> g
    boolean hasValidBase() -> a
    java.lang.String getDatabase() -> b
    java.lang.String getTable() -> c
com.dailystudio.dataobject.database.SortOrderEncoder -> com.dailystudio.b.a.u:
    java.lang.String encode(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String[] decode(java.lang.String) -> a
com.dailystudio.dataobject.query.Expression -> com.dailystudio.b.b.a:
    java.lang.String ORDER_ASCENDING -> a
    java.lang.String ORDER_DESCENDING -> b
    java.lang.String OPERATOR_WITH -> c
    java.lang.String OPERATOR_LEFT_BRACE -> d
    java.lang.String OPERATOR_RIGHT_BRACE -> e
    java.lang.String OPERATOR_PLUS -> f
    java.lang.String OPERATOR_MINUS -> g
    java.lang.String OPERATOR_MULTIPLE -> h
    java.lang.String OPERATOR_DIVIDE -> i
    java.lang.String OPERATOR_MODULO -> j
    java.lang.String OPERATOR_AND -> k
    java.lang.String OPERATOR_OR -> l
    java.lang.String OPERATOR_EQUALS -> m
    java.lang.String OPERATOR_NOT_EQUALS -> n
    java.lang.String OPERATOR_GREAT_THAN -> o
    java.lang.String OPERATOR_LESS_THAN -> p
    java.lang.String OPERATOR_GREAT_THAN_AND_EQUALS -> q
    java.lang.String OPERATOR_LESS_THAN_AND_EQUALS -> r
    java.lang.String OPERATOR_IN -> s
    java.lang.String OPERATOR_NOT_IN -> t
    java.lang.String OPERATOR_ISNULL -> u
    java.lang.String OPERATOR_NOTNULL -> v
    java.lang.String OPERATOR_LIKE -> w
    java.lang.String OPERATOR_EQ -> x
    java.lang.String OPERATOR_NEQ -> y
    java.lang.String OPERATOR_GT -> z
    java.lang.String OPERATOR_LT -> A
    java.lang.String OPERATOR_GTE -> B
    java.lang.String OPERATOR_LTE -> C
com.dailystudio.dataobject.query.ExpressionToken -> com.dailystudio.b.b.b:
    com.dailystudio.dataobject.query.ExpressionToken and(com.dailystudio.dataobject.query.ExpressionToken) -> a
    com.dailystudio.dataobject.query.ExpressionToken or(com.dailystudio.dataobject.query.ExpressionToken) -> b
com.dailystudio.dataobject.query.OrderingToken -> com.dailystudio.b.b.c:
    com.dailystudio.dataobject.query.OrderingToken with(com.dailystudio.dataobject.query.OrderingToken) -> a
com.dailystudio.dataobject.query.Query -> com.dailystudio.b.b.d:
    java.lang.Class mObjectClass -> a
    com.dailystudio.dataobject.query.ExpressionToken mSelection -> b
    com.dailystudio.dataobject.query.ExpressionToken mHaving -> c
    com.dailystudio.dataobject.query.ExpressionToken mLimit -> d
    com.dailystudio.dataobject.query.OrderingToken mGroupBy -> e
    com.dailystudio.dataobject.query.OrderingToken mOrderBy -> f
    java.lang.Class getObjectClass() -> a
    void setSelection(com.dailystudio.dataobject.query.ExpressionToken) -> a
    com.dailystudio.dataobject.query.ExpressionToken getSelection() -> b
    void setGroupBy(com.dailystudio.dataobject.query.OrderingToken) -> a
    com.dailystudio.dataobject.query.OrderingToken getGroupBy() -> c
    com.dailystudio.dataobject.query.ExpressionToken getHaving() -> d
    void setOrderBy(com.dailystudio.dataobject.query.OrderingToken) -> b
    com.dailystudio.dataobject.query.OrderingToken getOrderBy() -> e
    void setLimit(com.dailystudio.dataobject.query.ExpressionToken) -> b
    com.dailystudio.dataobject.query.ExpressionToken getLimit() -> f
    java.lang.String toString() -> toString
com.dailystudio.dataobject.query.QueryToken -> com.dailystudio.b.b.e:
    java.lang.StringBuilder mTokenBuilder -> a
    com.dailystudio.dataobject.query.QueryToken binaryOperator(java.lang.String,com.dailystudio.dataobject.query.QueryToken) -> a
    com.dailystudio.dataobject.query.QueryToken binaryOperator(java.lang.String,com.dailystudio.dataobject.query.QueryToken,boolean,boolean,boolean) -> a
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
com.dailystudio.dataobject.utils.SQLiteDateTimeUtils -> com.dailystudio.b.c.a:
    java.lang.String toDateTimeString(java.lang.String,java.lang.String) -> a
    java.lang.String weekdayOf(java.lang.String) -> a
    java.lang.String weekOf(java.lang.String) -> b
    java.lang.String monthOf(java.lang.String) -> c
com.dailystudio.datetime.CalendarUtils -> com.dailystudio.c.a:
    java.util.Calendar sCalendar -> a
    long getStartOfDay(long) -> a
    long getEndOfDay(long) -> b
    long getStartOfWeek(long) -> c
    long getEndOfWeek(long) -> d
    long getStartOfMonth(long) -> e
    long getEndOfMonth(long) -> f
    int getWeekDay(long) -> g
    int getHour(long) -> h
    boolean isInRange(long,long,long) -> a
    java.lang.String durationToReadableString(long) -> i
    java.lang.String timeToReadableString(long,boolean,boolean) -> a
    java.lang.String timeToReadableString(long) -> j
    java.lang.String timeToReadableStringWithoutTime(long) -> k
com.dailystudio.datetime.TimeSpanUtils -> com.dailystudio.c.b:
    long calculateDays(long,long,int[]) -> a
    long[] calculateHourDistribution(long[],long,long) -> a
    long[] calculateHourDistribution(long[],long,long,int[]) -> a
com.dailystudio.development.Logger -> com.dailystudio.d.a:
    boolean sLogDebugEnabled -> a
    void output(java.lang.String,com.dailystudio.development.Logger$LogToken,java.lang.Object[]) -> a
    void setDebugEnabled(boolean) -> a
    void debug(java.lang.String,java.lang.Object[]) -> a
    void warnning(java.lang.String,java.lang.Object[]) -> b
    void error(java.lang.String,java.lang.Object[]) -> c
    java.lang.StackTraceElement getCallingElement(int) -> a
    java.lang.String getCallingMethodName(int) -> b
    java.lang.String getCallingSimpleClassName(int) -> c
    java.lang.String getCallingClassName(int) -> d
com.dailystudio.development.Logger$LogToken -> com.dailystudio.d.b:
    com.dailystudio.development.Logger$LogToken LOG_D -> a
    com.dailystudio.development.Logger$LogToken LOG_W -> b
    com.dailystudio.development.Logger$LogToken LOG_I -> c
    com.dailystudio.development.Logger$LogToken LOG_E -> d
    com.dailystudio.development.Logger$LogToken[] ENUM$VALUES -> e
    com.dailystudio.development.Logger$LogToken[] values() -> values
    com.dailystudio.development.Logger$LogToken valueOf(java.lang.String) -> valueOf
com.dailystudio.factory.AbsClassFactory -> com.dailystudio.e.a:
    java.lang.Object createObjectForClass(java.lang.Class) -> a
com.dailystudio.factory.ClassFactory -> com.dailystudio.e.b:
    java.lang.Object newObject(java.lang.Class) -> b
    java.lang.Object newObject(java.lang.Object) -> a
com.dailystudio.factory.ClassNameFactory -> com.dailystudio.e.c:
    java.lang.Object newObject(java.lang.String) -> a
    java.lang.String parseClassName(java.lang.String) -> b
    java.lang.Object newObject(java.lang.Object) -> a
com.dailystudio.factory.Factory -> com.dailystudio.e.d:
    java.util.Map sInstanceMap -> a
    void initMembers() -> c
    java.lang.Object getInstance(java.lang.Class) -> c
    java.lang.Object createObject(java.lang.Object) -> b
    java.lang.Object newObject(java.lang.Object) -> a
com.dailystudio.factory.SingletoneFactory -> com.dailystudio.e.e:
    java.lang.Object findObject(java.lang.Object) -> c
    void cacheObject(java.lang.Object) -> d
    java.lang.Object createObject(java.lang.Object) -> b
com.dailystudio.manager.GroupManager -> com.dailystudio.f.a:
    java.util.Map mGroupMaps -> a
    void initMembers() -> c_
    void addObject(com.dailystudio.manager.IGroupObject) -> a
    void removeObject(com.dailystudio.manager.IGroupObject) -> b
    com.dailystudio.manager.IGroupObject removeObject(java.lang.Object) -> b
    void clearObjects() -> c
    java.util.List getObjectsInGroup(java.lang.Object) -> c
    void onGroupAdded(java.lang.Object) -> d
    void onGroupRemoved(java.lang.Object) -> e
    void onGroupsCleared() -> d
    void addObject(com.dailystudio.manager.ISingletonObject) -> a
    com.dailystudio.manager.ISingletonObject removeObject(java.lang.Object) -> a
    void removeObject(com.dailystudio.manager.ISingletonObject) -> b
com.dailystudio.manager.IGroupObject -> com.dailystudio.f.b:
    java.lang.Object getGroup() -> a
com.dailystudio.manager.IManagerWatcher -> com.dailystudio.f.c:
    void onManagerAdded(com.dailystudio.manager.Manager) -> a
com.dailystudio.manager.IObjectWatcher -> com.dailystudio.f.d:
    void onObjectAdded(java.lang.Object) -> a
    void onObjectRemoved(java.lang.Object) -> b
    void onObjectsCleared(java.lang.Object[]) -> a
    boolean matchWatcher(java.lang.Object) -> c
com.dailystudio.manager.ISingletonObject -> com.dailystudio.f.e:
    java.lang.Object getSingletonKey() -> c
com.dailystudio.manager.Manager -> com.dailystudio.f.f:
    java.util.Map sInstanceMap -> a
    java.util.Map sInstanceNameMap -> d
    java.util.ArrayList sMgrWatchers -> e
    java.util.ArrayList mObjects -> b
    java.util.ArrayList mObjWatchers -> c
    void initMembers() -> c_
    java.lang.Object getInstance(java.lang.Class) -> a
    void clearManagers() -> e
    void addObject(java.lang.Object) -> f
    void removeObject(java.lang.Object) -> g
    void clearObjects() -> c
    java.util.ArrayList listObjects() -> f
    int getCount() -> g
    int compareTo(com.dailystudio.manager.Manager) -> a
    java.lang.String getName() -> h
    int compareTo(java.lang.Object) -> compareTo
com.dailystudio.manager.SingletonManager -> com.dailystudio.f.g:
    java.util.Map mObjectMaps -> d
    void initMembers() -> c_
    void addObject(com.dailystudio.manager.ISingletonObject) -> a
    void removeObject(com.dailystudio.manager.ISingletonObject) -> b
    com.dailystudio.manager.ISingletonObject removeObject(java.lang.Object) -> a
    void clearObjects() -> c
    com.dailystudio.manager.ISingletonObject getObject(java.lang.Object) -> h
    void addObject(java.lang.Object) -> f
    void removeObject(java.lang.Object) -> g
com.dailystudio.memory.Constants -> com.dailystudio.memory.a:
    android.content.Intent DAILY_LIFE_ACTION_MAIN -> a
com.dailystudio.memory.MainActivity -> com.dailystudio.memory.MainActivity:
    com.google.android.gms.common.images.ImageManager mImageManager -> E
    android.support.v4.widget.DrawerLayout mSlider -> F
    android.support.v4.app.LoaderManager$LoaderCallbacks mAchievementLoaderCallbacks -> G
    android.support.v4.app.LoaderManager$LoaderCallbacks mLeaderboardLoaderCallbacks -> H
    android.os.Handler mHandler -> I
    void onCreate(android.os.Bundle) -> onCreate
    void setupViews() -> l
    void setupGdx() -> z
    void onDestroy() -> onDestroy
    void onActionBarOverflowDisplayed() -> m
    void onSignInSucceeded() -> n
    boolean onCreateOverflowMenu(android.view.Menu) -> a
    boolean onOverflowItemSelected(android.view.MenuItem) -> a
    void onListItemSelected(java.lang.Object) -> a
    void launchSliderMenu(android.database.Cursor) -> a
    void checkAndPushUncommittedAchievementsAndLeaderboards() -> A
    void cancelPushUncommittedAchievementsAndLeaderboards() -> B
    com.google.android.gms.games.GamesClient access$0(com.dailystudio.memory.MainActivity) -> a
    boolean access$1(com.dailystudio.memory.MainActivity) -> b
    android.support.v4.widget.DrawerLayout access$2(com.dailystudio.memory.MainActivity) -> c
com.dailystudio.memory.MainActivity$1 -> com.dailystudio.memory.b:
    com.dailystudio.memory.MainActivity this$0 -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.util.List) -> a
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
com.dailystudio.memory.MainActivity$2 -> com.dailystudio.memory.c:
    com.dailystudio.memory.MainActivity this$0 -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.util.List) -> a
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
com.dailystudio.memory.MainActivity$3 -> com.dailystudio.memory.d:
    com.dailystudio.memory.MainActivity this$0 -> a
    void run() -> run
com.dailystudio.memory.MainApplication -> com.dailystudio.memory.MainApplication:
    void onCreate() -> onCreate
    void onTerminate() -> onTerminate
com.dailystudio.memory.MemoryDatabaseConnectivityProvider -> com.dailystudio.memory.MemoryDatabaseConnectivityProvider:
com.dailystudio.memory.MemoryService -> com.dailystudio.memory.MemoryService:
    android.content.Intent SERVICE_INTENT -> a
    java.util.Observer mAppObserver -> b
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void initService() -> a
    void reinitService() -> b
    void initObservables() -> c
    void onDestroy() -> onDestroy
    void startAchivementSerivce() -> d
    void stopAchivementSerivce() -> e
com.dailystudio.memory.MemoryService$1 -> com.dailystudio.memory.e:
    com.dailystudio.memory.MemoryService this$0 -> a
    void update(java.util.Observable,java.lang.Object) -> update
com.dailystudio.memory.R -> com.dailystudio.memory.R:
com.dailystudio.memory.R$anim -> com.dailystudio.memory.R$anim:
    int about_in -> about_in
    int about_layout_anim -> about_layout_anim
    int actbar_overflow_dropdown_in -> actbar_overflow_dropdown_in
    int actbar_overflow_dropdown_out -> actbar_overflow_dropdown_out
    int actbar_overflow_popup_overlay_in -> actbar_overflow_popup_overlay_in
    int actbar_overflow_popup_overlay_out -> actbar_overflow_popup_overlay_out
    int actbar_prompt_in_bottom -> actbar_prompt_in_bottom
    int actbar_prompt_out_bottom -> actbar_prompt_out_bottom
    int ask_board_in -> ask_board_in
    int ask_board_out -> ask_board_out
    int char_layout_anim -> char_layout_anim
    int chart_in -> chart_in
    int circle_item_in -> circle_item_in
    int circle_layout_anim -> circle_layout_anim
    int expand_list_item_in -> expand_list_item_in
    int expand_list_item_layout_anim -> expand_list_item_layout_anim
    int fade_in -> fade_in
    int fade_out -> fade_out
    int grid_item_in -> grid_item_in
    int grid_layout_anim -> grid_layout_anim
    int grow_fade_in -> grow_fade_in
    int grow_fade_in_center -> grow_fade_in_center
    int grow_fade_in_from_bottom -> grow_fade_in_from_bottom
    int gsm_login_anim_in -> gsm_login_anim_in
    int gsm_login_anim_out -> gsm_login_anim_out
    int guess_view -> guess_view
    int list_item_in -> list_item_in
    int list_layout_anim -> list_layout_anim
    int notify_view_in -> notify_view_in
    int notify_view_out -> notify_view_out
    int paper_clip_in -> paper_clip_in
    int paper_clip_out -> paper_clip_out
    int shrink_fade_out -> shrink_fade_out
    int shrink_fade_out_center -> shrink_fade_out_center
    int shrink_fade_out_from_bottom -> shrink_fade_out_from_bottom
    int slide_fade_in_bottom -> slide_fade_in_bottom
    int slide_fade_in_left -> slide_fade_in_left
    int slide_fade_in_right -> slide_fade_in_right
    int slide_fade_in_top -> slide_fade_in_top
    int slide_fade_out_bottom -> slide_fade_out_bottom
    int slide_fade_out_left -> slide_fade_out_left
    int slide_fade_out_right -> slide_fade_out_right
    int slide_fade_out_top -> slide_fade_out_top
    int stats_icon_in -> stats_icon_in
    int stats_icon_out -> stats_icon_out
    int stats_item_in -> stats_item_in
    int stats_layout_anim -> stats_layout_anim
com.dailystudio.memory.R$attr -> com.dailystudio.memory.R$attr:
    int adSize -> adSize
    int adUnitId -> adUnitId
    int allowSingleTap -> allowSingleTap
    int animateOnClick -> animateOnClick
    int bottomOffset -> bottomOffset
    int cameraBearing -> cameraBearing
    int cameraTargetLat -> cameraTargetLat
    int cameraTargetLng -> cameraTargetLng
    int cameraTilt -> cameraTilt
    int cameraZoom -> cameraZoom
    int content -> content
    int count -> count
    int handle -> handle
    int mapType -> mapType
    int minDigits -> minDigits
    int orientation -> orientation
    int textColor -> textColor
    int textSize -> textSize
    int textStyle -> textStyle
    int topOffset -> topOffset
    int uiCompass -> uiCompass
    int uiRotateGestures -> uiRotateGestures
    int uiScrollGestures -> uiScrollGestures
    int uiTiltGestures -> uiTiltGestures
    int uiZoomControls -> uiZoomControls
    int uiZoomGestures -> uiZoomGestures
    int useViewLifecycle -> useViewLifecycle
    int zOrderOnTop -> zOrderOnTop
com.dailystudio.memory.R$color -> com.dailystudio.memory.R$color:
    int action_bar_bg_color -> action_bar_bg_color
    int action_bar_popup_content_overlay -> action_bar_popup_content_overlay
    int action_bar_text_color -> action_bar_text_color
    int action_bar_text_disable_color -> action_bar_text_disable_color
    int android_blue -> android_blue
    int android_blue_light -> android_blue_light
    int black -> black
    int blue -> blue
    int boot_expand_separator_active_color -> boot_expand_separator_active_color
    int boot_expand_separator_color -> boot_expand_separator_color
    int chart_transparent -> chart_transparent
    int common_action_bar_splitter -> common_action_bar_splitter
    int common_signin_btn_dark_text_default -> common_signin_btn_dark_text_default
    int common_signin_btn_dark_text_disabled -> common_signin_btn_dark_text_disabled
    int common_signin_btn_dark_text_focused -> common_signin_btn_dark_text_focused
    int common_signin_btn_dark_text_pressed -> common_signin_btn_dark_text_pressed
    int common_signin_btn_default_background -> common_signin_btn_default_background
    int common_signin_btn_light_text_default -> common_signin_btn_light_text_default
    int common_signin_btn_light_text_disabled -> common_signin_btn_light_text_disabled
    int common_signin_btn_light_text_focused -> common_signin_btn_light_text_focused
    int common_signin_btn_light_text_pressed -> common_signin_btn_light_text_pressed
    int common_signin_btn_text_dark -> common_signin_btn_text_dark
    int common_signin_btn_text_light -> common_signin_btn_text_light
    int core_app_check_step_text_color -> core_app_check_step_text_color
    int dark_red -> dark_red
    int default_button_text_color -> default_button_text_color
    int fadeText -> fadeText
    int gold_yellow -> gold_yellow
    int gray -> gray
    int green -> green
    int light_black -> light_black
    int light_gray -> light_gray
    int light_white -> light_white
    int orange -> orange
    int red -> red
    int royal_blue -> royal_blue
    int see_green -> see_green
    int tomato_red -> tomato_red
    int translucent_background -> translucent_background
    int transparent -> transparent
    int transparent_background -> transparent_background
    int white -> white
com.dailystudio.memory.R$dimen -> com.dailystudio.memory.R$dimen:
    int about_app_name_font_size -> about_app_name_font_size
    int about_footer_padding -> about_footer_padding
    int about_logo_height -> about_logo_height
    int about_logo_padding -> about_logo_padding
    int about_logo_width -> about_logo_width
    int about_slogan_font_size -> about_slogan_font_size
    int about_studio_name_font_size -> about_studio_name_font_size
    int about_title_padding -> about_title_padding
    int about_ver_name_font_size -> about_ver_name_font_size
    int actbar_count_text_size -> actbar_count_text_size
    int actbar_custom_view_right_padding -> actbar_custom_view_right_padding
    int actbar_overflow_menu_icon_height -> actbar_overflow_menu_icon_height
    int actbar_overflow_menu_icon_width -> actbar_overflow_menu_icon_width
    int actbar_overflow_menu_item_padding -> actbar_overflow_menu_item_padding
    int actbar_overflow_menu_max_width -> actbar_overflow_menu_max_width
    int actbar_overflow_menu_text_size -> actbar_overflow_menu_text_size
    int action_bar_height -> action_bar_height
    int action_bar_padding -> action_bar_padding
    int action_bar_right_padding -> action_bar_right_padding
    int action_bar_text_size -> action_bar_text_size
    int alert_dialog_custom_view_padding_bottom -> alert_dialog_custom_view_padding_bottom
    int alert_dialog_custom_view_padding_left -> alert_dialog_custom_view_padding_left
    int alert_dialog_custom_view_padding_right -> alert_dialog_custom_view_padding_right
    int alert_dialog_custom_view_padding_top -> alert_dialog_custom_view_padding_top
    int app_widget_btn_padding -> app_widget_btn_padding
    int app_widget_chart_margin_bottom -> app_widget_chart_margin_bottom
    int app_widget_chart_margin_left -> app_widget_chart_margin_left
    int app_widget_chart_margin_right -> app_widget_chart_margin_right
    int app_widget_chart_margin_top -> app_widget_chart_margin_top
    int app_widget_frame_padding -> app_widget_frame_padding
    int app_widget_grid_height -> app_widget_grid_height
    int app_widget_grid_width -> app_widget_grid_width
    int app_widget_label_font_size -> app_widget_label_font_size
    int app_widget_label_padding -> app_widget_label_padding
    int app_widget_margin -> app_widget_margin
    int app_widget_title_padding -> app_widget_title_padding
    int ask_question_answers_padding -> ask_question_answers_padding
    int ask_question_content_padding -> ask_question_content_padding
    int bfw_hpadding -> bfw_hpadding
    int bfw_min_content_height -> bfw_min_content_height
    int bfw_title_height -> bfw_title_height
    int bfw_title_hpadding -> bfw_title_hpadding
    int boot_chart_margin_top -> boot_chart_margin_top
    int boot_expand_separator_size -> boot_expand_separator_size
    int boot_item_padding -> boot_item_padding
    int boot_label_width -> boot_label_width
    int close_button_size -> close_button_size
    int core_app_check_badge_margin -> core_app_check_badge_margin
    int core_app_check_padding -> core_app_check_padding
    int daygroup_item_height -> daygroup_item_height
    int default_app_item_padding -> default_app_item_padding
    int default_ask_board_width -> default_ask_board_width
    int default_button_padding -> default_button_padding
    int default_chart_axis_title_size -> default_chart_axis_title_size
    int default_chart_label_size -> default_chart_label_size
    int default_chart_legend_height -> default_chart_legend_height
    int default_chart_legend_size -> default_chart_legend_size
    int default_chart_margin_bottom -> default_chart_margin_bottom
    int default_chart_margin_left -> default_chart_margin_left
    int default_chart_margin_right -> default_chart_margin_right
    int default_chart_margin_top -> default_chart_margin_top
    int default_chart_title_size -> default_chart_title_size
    int default_check_padding -> default_check_padding
    int default_content_hpadding -> default_content_hpadding
    int default_content_vpadding -> default_content_vpadding
    int default_empty_text_font_size -> default_empty_text_font_size
    int default_font_size -> default_font_size
    int default_grid_item_height -> default_grid_item_height
    int default_label_padding -> default_label_padding
    int default_notify_height -> default_notify_height
    int default_pager_title_font_size -> default_pager_title_font_size
    int default_res_icon_size -> default_res_icon_size
    int gsm_login_bar_height -> gsm_login_bar_height
    int gsm_login_bar_hpadding -> gsm_login_bar_hpadding
    int gsm_login_bar_vpadding -> gsm_login_bar_vpadding
    int gsm_login_icon_size -> gsm_login_icon_size
    int gsm_login_player_icon_size -> gsm_login_player_icon_size
    int gsm_login_player_info_padding -> gsm_login_player_info_padding
    int gsm_login_player_name_text_size -> gsm_login_player_name_text_size
    int gsm_login_text_hpadding -> gsm_login_text_hpadding
    int gsm_login_text_size -> gsm_login_text_size
    int gsm_login_text_vpadding -> gsm_login_text_vpadding
    int gv_item_hpadding -> gv_item_hpadding
    int gv_item_vpadding -> gv_item_vpadding
    int lv_index_font_size -> lv_index_font_size
    int lv_index_padding -> lv_index_padding
    int lv_index_width -> lv_index_width
    int lv_item_2nd_font_size -> lv_item_2nd_font_size
    int lv_item_2nd_vpadding -> lv_item_2nd_vpadding
    int lv_item_font_size -> lv_item_font_size
    int lv_item_padding -> lv_item_padding
    int memory_ic_height -> memory_ic_height
    int memory_ic_witdh -> memory_ic_witdh
    int memory_index_font_size -> memory_index_font_size
    int memory_index_padding -> memory_index_padding
    int memory_index_width -> memory_index_width
    int month_item_height -> month_item_height
    int notification_content_padding -> notification_content_padding
    int notification_dialog_height -> notification_dialog_height
    int paper_clip_content_hpadding -> paper_clip_content_hpadding
    int paper_clip_content_vpadding -> paper_clip_content_vpadding
    int paper_clip_frame_padding -> paper_clip_frame_padding
    int paper_clip_title_font_size -> paper_clip_title_font_size
    int paper_clip_title_height -> paper_clip_title_height
    int paper_clip_title_hmargin -> paper_clip_title_hmargin
    int paper_clip_title_vmargin -> paper_clip_title_vmargin
    int screen_on_distrib_chart_margin_top -> screen_on_distrib_chart_margin_top
    int search_result_hpadding -> search_result_hpadding
    int search_result_icon_height -> search_result_icon_height
    int search_result_icon_width -> search_result_icon_width
    int search_result_item_height -> search_result_item_height
    int search_result_subicon_height -> search_result_subicon_height
    int search_result_subicon_width -> search_result_subicon_width
    int search_result_subtitle_font_size -> search_result_subtitle_font_size
    int search_result_subtitle_height -> search_result_subtitle_height
    int search_result_title_font_size -> search_result_title_font_size
    int slide_day_text_size -> slide_day_text_size
    int sliding_menu_width -> sliding_menu_width
    int stats_item_height -> stats_item_height
    int stats_item_title_text_size -> stats_item_title_text_size
    int stats_item_value_text_size -> stats_item_value_text_size
com.dailystudio.memory.R$drawable -> com.dailystudio.memory.R$drawable:
    int actbar_button -> actbar_button
    int actbar_button_pressed_light -> actbar_button_pressed_light
    int actbar_dropdown_background -> actbar_dropdown_background
    int actbar_prg_01 -> actbar_prg_01
    int actbar_prg_02 -> actbar_prg_02
    int actbar_prg_03 -> actbar_prg_03
    int actbar_prg_04 -> actbar_prg_04
    int actbar_prg_05 -> actbar_prg_05
    int actbar_prg_06 -> actbar_prg_06
    int actbar_prg_07 -> actbar_prg_07
    int actbar_prg_08 -> actbar_prg_08
    int actbar_vert_separator -> actbar_vert_separator
    int app_widget_background -> app_widget_background
    int app_widget_btn -> app_widget_btn
    int app_widget_btn_pressed -> app_widget_btn_pressed
    int ask_board -> ask_board
    int ask_board_normal -> ask_board_normal
    int ask_board_pressed -> ask_board_pressed
    int ask_dialog_bg -> ask_dialog_bg
    int check_background -> check_background
    int check_off_dark -> check_off_dark
    int check_off_light -> check_off_light
    int check_on -> check_on
    int common_signin_btn_icon_dark -> common_signin_btn_icon_dark
    int common_signin_btn_icon_disabled_dark -> common_signin_btn_icon_disabled_dark
    int common_signin_btn_icon_disabled_focus_dark -> common_signin_btn_icon_disabled_focus_dark
    int common_signin_btn_icon_disabled_focus_light -> common_signin_btn_icon_disabled_focus_light
    int common_signin_btn_icon_disabled_light -> common_signin_btn_icon_disabled_light
    int common_signin_btn_icon_focus_dark -> common_signin_btn_icon_focus_dark
    int common_signin_btn_icon_focus_light -> common_signin_btn_icon_focus_light
    int common_signin_btn_icon_light -> common_signin_btn_icon_light
    int common_signin_btn_icon_normal_dark -> common_signin_btn_icon_normal_dark
    int common_signin_btn_icon_normal_light -> common_signin_btn_icon_normal_light
    int common_signin_btn_icon_pressed_dark -> common_signin_btn_icon_pressed_dark
    int common_signin_btn_icon_pressed_light -> common_signin_btn_icon_pressed_light
    int common_signin_btn_text_dark -> common_signin_btn_text_dark
    int common_signin_btn_text_disabled_dark -> common_signin_btn_text_disabled_dark
    int common_signin_btn_text_disabled_focus_dark -> common_signin_btn_text_disabled_focus_dark
    int common_signin_btn_text_disabled_focus_light -> common_signin_btn_text_disabled_focus_light
    int common_signin_btn_text_disabled_light -> common_signin_btn_text_disabled_light
    int common_signin_btn_text_focus_dark -> common_signin_btn_text_focus_dark
    int common_signin_btn_text_focus_light -> common_signin_btn_text_focus_light
    int common_signin_btn_text_light -> common_signin_btn_text_light
    int common_signin_btn_text_normal_dark -> common_signin_btn_text_normal_dark
    int common_signin_btn_text_normal_light -> common_signin_btn_text_normal_light
    int common_signin_btn_text_pressed_dark -> common_signin_btn_text_pressed_dark
    int common_signin_btn_text_pressed_light -> common_signin_btn_text_pressed_light
    int content_bg_op60 -> content_bg_op60
    int content_bg_op80 -> content_bg_op80
    int content_bg_op90 -> content_bg_op90
    int default_button -> default_button
    int default_button_disabled_focused_light -> default_button_disabled_focused_light
    int default_button_disabled_light -> default_button_disabled_light
    int default_button_focused_light -> default_button_focused_light
    int default_button_normal_light -> default_button_normal_light
    int default_button_pressed_light -> default_button_pressed_light
    int default_content_bg -> default_content_bg
    int default_content_bg_pattern -> default_content_bg_pattern
    int default_dark_check -> default_dark_check
    int default_light_check -> default_light_check
    int default_player_icon -> default_player_icon
    int edit_text_light -> edit_text_light
    int games_achievements -> games_achievements
    int games_controller_white -> games_controller_white
    int games_leaderboards -> games_leaderboards
    int get_it_on_play_logo_large -> get_it_on_play_logo_large
    int get_it_on_play_logo_large_disabled -> get_it_on_play_logo_large_disabled
    int get_it_on_play_logo_large_normal -> get_it_on_play_logo_large_normal
    int get_it_on_play_logo_large_pressed -> get_it_on_play_logo_large_pressed
    int guess_board -> guess_board
    int guess_right -> guess_right
    int guess_wrong -> guess_wrong
    int ic_actbar_achievement -> ic_actbar_achievement
    int ic_action_overflow -> ic_action_overflow
    int ic_action_search -> ic_action_search
    int ic_boot -> ic_boot
    int ic_boot_active -> ic_boot_active
    int ic_boot_list -> ic_boot_list
    int ic_calendar_day -> ic_calendar_day
    int ic_calendar_month -> ic_calendar_month
    int ic_calendar_week -> ic_calendar_week
    int ic_close_button -> ic_close_button
    int ic_close_button_normal -> ic_close_button_normal
    int ic_close_button_pressed -> ic_close_button_pressed
    int ic_done -> ic_done
    int ic_done_highlight -> ic_done_highlight
    int ic_done_normal -> ic_done_normal
    int ic_launcher -> ic_launcher
    int ic_memory_bar_chart -> ic_memory_bar_chart
    int ic_memory_chart -> ic_memory_chart
    int ic_memory_list -> ic_memory_list
    int ic_memory_record -> ic_memory_record
    int ic_menu_about -> ic_menu_about
    int ic_menu_achievements -> ic_menu_achievements
    int ic_menu_add -> ic_menu_add
    int ic_menu_calendar -> ic_menu_calendar
    int ic_menu_history -> ic_menu_history
    int ic_menu_leaderboards -> ic_menu_leaderboards
    int ic_menu_list -> ic_menu_list
    int ic_menu_privacy_policy -> ic_menu_privacy_policy
    int ic_menu_screen_on_filter -> ic_menu_screen_on_filter
    int ic_menu_screen_on_list -> ic_menu_screen_on_list
    int ic_menu_screen_on_today -> ic_menu_screen_on_today
    int ic_menu_screen_on_weekdays -> ic_menu_screen_on_weekdays
    int ic_menu_screen_on_weekends -> ic_menu_screen_on_weekends
    int ic_menu_search -> ic_menu_search
    int ic_menu_share -> ic_menu_share
    int ic_menu_statistics -> ic_menu_statistics
    int ic_menu_today -> ic_menu_today
    int ic_nofity -> ic_nofity
    int ic_plusone_medium_off_client -> ic_plusone_medium_off_client
    int ic_plusone_small_off_client -> ic_plusone_small_off_client
    int ic_plusone_standard_off_client -> ic_plusone_standard_off_client
    int ic_plusone_tall_off_client -> ic_plusone_tall_off_client
    int ic_screen_on -> ic_screen_on
    int ic_search_memory -> ic_search_memory
    int ic_shortcut -> ic_shortcut
    int ic_stats -> ic_stats
    int ic_stats_01 -> ic_stats_01
    int ic_stats_02 -> ic_stats_02
    int ic_stats_03 -> ic_stats_03
    int ic_stats_04 -> ic_stats_04
    int icon -> icon
    int list_divider -> list_divider
    int list_focused -> list_focused
    int list_longpressed -> list_longpressed
    int list_pressed_dark -> list_pressed_dark
    int list_pressed_light -> list_pressed_light
    int list_selector_background_transition_dark -> list_selector_background_transition_dark
    int list_selector_background_transition_light -> list_selector_background_transition_light
    int list_selector_dark -> list_selector_dark
    int list_selector_disabled_dark -> list_selector_disabled_dark
    int list_selector_disabled_light -> list_selector_disabled_light
    int list_selector_light -> list_selector_light
    int logo -> logo
    int menu_dropdown_panel_holo_light -> menu_dropdown_panel_holo_light
    int notification_dialog_bg -> notification_dialog_bg
    int notify_bird_left -> notify_bird_left
    int notify_bird_right -> notify_bird_right
    int notify_pole_and_line -> notify_pole_and_line
    int paper_clip_close_normal -> paper_clip_close_normal
    int paper_clip_close_pressed -> paper_clip_close_pressed
    int paper_clip_window -> paper_clip_window
    int paper_clip_window_close -> paper_clip_window_close
    int player_icon_frame -> player_icon_frame
    int rate_star_big_half_dark -> rate_star_big_half_dark
    int rate_star_big_half_light -> rate_star_big_half_light
    int rate_star_big_off_dark -> rate_star_big_off_dark
    int rate_star_big_off_light -> rate_star_big_off_light
    int rate_star_big_on_dark -> rate_star_big_on_dark
    int rate_star_big_on_light -> rate_star_big_on_light
    int rate_star_small_half_dark -> rate_star_small_half_dark
    int rate_star_small_half_light -> rate_star_small_half_light
    int rate_star_small_off_dark -> rate_star_small_off_dark
    int rate_star_small_off_light -> rate_star_small_off_light
    int rate_star_small_on_dark -> rate_star_small_on_dark
    int rate_star_small_on_light -> rate_star_small_on_light
    int ratingbar_dark -> ratingbar_dark
    int ratingbar_light -> ratingbar_light
    int ratingbar_small_dark -> ratingbar_small_dark
    int ratingbar_small_light -> ratingbar_small_light
    int scrollbar_handle -> scrollbar_handle
    int textfield_activated_light -> textfield_activated_light
    int textfield_default_light -> textfield_default_light
    int textfield_disabled_focused_light -> textfield_disabled_focused_light
    int textfield_disabled_light -> textfield_disabled_light
    int textfield_focused_light -> textfield_focused_light
    int vert_divider -> vert_divider
com.dailystudio.memory.R$id -> com.dailystudio.memory.R$id:
    int about_footer -> about_footer
    int about_logo -> about_logo
    int about_promote_apps -> about_promote_apps
    int about_title -> about_title
    int about_title_separator -> about_title_separator
    int act_bar_stats_icon -> act_bar_stats_icon
    int actbar_activity_actionbar -> actbar_activity_actionbar
    int actbar_activity_content -> actbar_activity_content
    int actbar_activity_overflow_menu -> actbar_activity_overflow_menu
    int actbar_custome_view -> actbar_custome_view
    int actbar_overflow -> actbar_overflow
    int actbar_overflow_menu_item -> actbar_overflow_menu_item
    int actbar_overflow_menu_list -> actbar_overflow_menu_list
    int actbar_overflow_menu_root -> actbar_overflow_menu_root
    int actbar_overflow_popup_overlay -> actbar_overflow_popup_overlay
    int actbar_progress -> actbar_progress
    int actbar_prompt -> actbar_prompt
    int actbar_root -> actbar_root
    int actbar_title -> actbar_title
    int admob -> admob
    int archievements_button -> archievements_button
    int ask_board -> ask_board
    int ask_view -> ask_view
    int bold -> bold
    int boot_actbar_custom_view -> boot_actbar_custom_view
    int boot_base_layout -> boot_base_layout
    int boot_expand_layout -> boot_expand_layout
    int boot_expand_separator -> boot_expand_separator
    int boot_info -> boot_info
    int boot_label_lifetime -> boot_label_lifetime
    int boot_label_shutdown -> boot_label_shutdown
    int boot_label_uptime -> boot_label_uptime
    int boot_lifetime -> boot_lifetime
    int boot_list_fragment -> boot_list_fragment
    int boot_records_fragment -> boot_records_fragment
    int boot_seq -> boot_seq
    int boot_shutdown -> boot_shutdown
    int boot_time -> boot_time
    int boot_uptime -> boot_uptime
    int boots_count -> boots_count
    int chartStub -> chartStub
    int core_app_check_explain -> core_app_check_explain
    int core_app_check_google_play_badge -> core_app_check_google_play_badge
    int core_app_check_know_button -> core_app_check_know_button
    int core_app_check_memory_installed -> core_app_check_memory_installed
    int core_app_check_not_show_again_check -> core_app_check_not_show_again_check
    int core_app_check_plugin -> core_app_check_plugin
    int core_app_check_plugin_icon -> core_app_check_plugin_icon
    int core_app_check_plugin_name -> core_app_check_plugin_name
    int core_app_check_step_one -> core_app_check_step_one
    int core_app_check_step_two -> core_app_check_step_two
    int core_app_check_steps -> core_app_check_steps
    int default_content_bg -> default_content_bg
    int drawer_layout -> drawer_layout
    int fragment_admob -> fragment_admob
    int fragment_ask -> fragment_ask
    int fragment_gsm_login -> fragment_gsm_login
    int fragment_list -> fragment_list
    int fragment_mp_shortcuts -> fragment_mp_shortcuts
    int fragment_notification -> fragment_notification
    int fragment_notify -> fragment_notify
    int fragment_question -> fragment_question
    int fragment_search_results -> fragment_search_results
    int fragment_slider_life_time -> fragment_slider_life_time
    int fragment_view_root -> fragment_view_root
    int gdx_root -> gdx_root
    int horizontal -> horizontal
    int hybrid -> hybrid
    int italic -> italic
    int main_pager -> main_pager
    int memory_icon -> memory_icon
    int memory_index -> memory_index
    int menu_about -> menu_about
    int menu_achievements -> menu_achievements
    int menu_item_icon -> menu_item_icon
    int menu_item_text -> menu_item_text
    int menu_leaderboards -> menu_leaderboards
    int menu_list_months -> menu_list_months
    int menu_privacy_policy -> menu_privacy_policy
    int menu_screen_on_list -> menu_screen_on_list
    int menu_screen_on_today -> menu_screen_on_today
    int menu_screen_on_weekdays -> menu_screen_on_weekdays
    int menu_screen_on_weekends -> menu_screen_on_weekends
    int menu_search -> menu_search
    int menu_statistics -> menu_statistics
    int month -> month
    int month_name -> month_name
    int months_fragment -> months_fragment
    int mood_actbar_custom_view -> mood_actbar_custom_view
    int none -> none
    int normal -> normal
    int notification_close -> notification_close
    int notification_content -> notification_content
    int notification_title -> notification_title
    int notification_title_separator -> notification_title_separator
    int notify_slot_1 -> notify_slot_1
    int notify_slot_2 -> notify_slot_2
    int notify_slot_3 -> notify_slot_3
    int notify_slot_4 -> notify_slot_4
    int notify_slots_root -> notify_slots_root
    int notify_view -> notify_view
    int paper_clip_close_button -> paper_clip_close_button
    int paper_clip_content -> paper_clip_content
    int paper_clip_icon -> paper_clip_icon
    int paper_clip_title -> paper_clip_title
    int paper_clip_title_separator -> paper_clip_title_separator
    int player_icon -> player_icon
    int player_info -> player_info
    int player_name -> player_name
    int privacy_webpage -> privacy_webpage
    int promote_webpage -> promote_webpage
    int question_answer_right -> question_answer_right
    int question_answer_wrong -> question_answer_wrong
    int question_answers -> question_answers
    int question_content -> question_content
    int question_title -> question_title
    int question_title_separator -> question_title_separator
    int record_fastest_uptime -> record_fastest_uptime
    int record_fastest_uptime_delta -> record_fastest_uptime_delta
    int record_longest_liftime -> record_longest_liftime
    int record_longest_liftime_delta -> record_longest_liftime_delta
    int record_shortest_liftime -> record_shortest_liftime
    int record_shortest_liftime_delta -> record_shortest_liftime_delta
    int record_slowest_uptime -> record_slowest_uptime
    int record_slowest_uptime_delta -> record_slowest_uptime_delta
    int res_icon -> res_icon
    int res_label -> res_label
    int res_object_icon -> res_object_icon
    int res_object_label -> res_object_label
    int satellite -> satellite
    int screen_on_boot_seq -> screen_on_boot_seq
    int screen_on_distrib_chart_fragment -> screen_on_distrib_chart_fragment
    int screen_on_duration -> screen_on_duration
    int screen_on_info -> screen_on_info
    int screen_on_label_duration -> screen_on_label_duration
    int screen_on_label_seq -> screen_on_label_seq
    int screen_on_list_fragment -> screen_on_list_fragment
    int screen_on_time -> screen_on_time
    int search_icon_1 -> search_icon_1
    int search_icon_2 -> search_icon_2
    int search_text_1 -> search_text_1
    int search_text_2 -> search_text_2
    int showcase_fragment -> showcase_fragment
    int showcase_pager -> showcase_pager
    int showcase_webview -> showcase_webview
    int sign_in_bar -> sign_in_bar
    int sign_in_button -> sign_in_button
    int sign_out_bar -> sign_out_bar
    int sign_out_button -> sign_out_button
    int slidermenu -> slidermenu
    int stats_about -> stats_about
    int stats_lifetime_day -> stats_lifetime_day
    int stats_lifetime_day_label -> stats_lifetime_day_label
    int stats_lifetime_fragment -> stats_lifetime_fragment
    int stats_lifetime_hour -> stats_lifetime_hour
    int stats_lifetime_hour_label -> stats_lifetime_hour_label
    int stats_lifetime_min -> stats_lifetime_min
    int stats_lifetime_min_label -> stats_lifetime_min_label
    int stats_lifetime_sec -> stats_lifetime_sec
    int stats_lifetime_sec_label -> stats_lifetime_sec_label
    int stats_lifetime_title -> stats_lifetime_title
    int stats_lifetime_value -> stats_lifetime_value
    int stats_pieces_fragment -> stats_pieces_fragment
    int stats_pieces_title -> stats_pieces_title
    int stats_pieces_value -> stats_pieces_value
    int terrain -> terrain
    int uptime_trends_actbar_custom_view -> uptime_trends_actbar_custom_view
    int uptime_trends_chart_fragment -> uptime_trends_chart_fragment
    int uptime_trends_curr_month -> uptime_trends_curr_month
    int uptime_trends_month_chart_fragment -> uptime_trends_month_chart_fragment
    int vertical -> vertical
    int week_num -> week_num
    int week_range -> week_range
    int weekay_time -> weekay_time
    int weekday_dayname -> weekday_dayname
com.dailystudio.memory.R$integer -> com.dailystudio.memory.R$integer:
    int config_aboutAnimTime -> config_aboutAnimTime
    int config_chartAnimTime -> config_chartAnimTime
    int config_defaultAnimTime -> config_defaultAnimTime
    int config_notifyAnimTime -> config_notifyAnimTime
    int config_overflowAnimTime -> config_overflowAnimTime
    int config_overflowOverlayAnimTime -> config_overflowOverlayAnimTime
    int config_slowAnimTime -> config_slowAnimTime
    int config_statsLongAnimTime -> config_statsLongAnimTime
    int config_statsShortAnimTime -> config_statsShortAnimTime
    int google_play_services_version -> google_play_services_version
com.dailystudio.memory.R$layout -> com.dailystudio.memory.R$layout:
    int actbar_activity -> actbar_activity
    int actbar_base -> actbar_base
    int actbar_login -> actbar_login
    int actbar_overflow_menu -> actbar_overflow_menu
    int actbar_overflow_menu_item -> actbar_overflow_menu_item
    int activity_about -> activity_about
    int activity_activity_list -> activity_activity_list
    int activity_boot_list -> activity_boot_list
    int activity_boot_recrods -> activity_boot_recrods
    int activity_core_app_check -> activity_core_app_check
    int activity_create_category_shortcut -> activity_create_category_shortcut
    int activity_list_item -> activity_list_item
    int activity_main_pager -> activity_main_pager
    int activity_memory_search -> activity_memory_search
    int activity_months_list -> activity_months_list
    int activity_notification -> activity_notification
    int activity_privacy_policy -> activity_privacy_policy
    int activity_question -> activity_question
    int activity_screen_on_distrub_chart -> activity_screen_on_distrub_chart
    int activity_screen_on_list -> activity_screen_on_list
    int activity_showcase -> activity_showcase
    int activity_statistics -> activity_statistics
    int activity_uptime_trends_chart -> activity_uptime_trends_chart
    int activity_uptime_trends_month_chart -> activity_uptime_trends_month_chart
    int ask_host_view -> ask_host_view
    int boot_item -> boot_item
    int boot_item_expand -> boot_item_expand
    int boot_list_actionbar -> boot_list_actionbar
    int category_list_item -> category_list_item
    int fragment_about -> fragment_about
    int fragment_activity_list -> fragment_activity_list
    int fragment_admob -> fragment_admob
    int fragment_boot_records -> fragment_boot_records
    int fragment_category_list -> fragment_category_list
    int fragment_chart -> fragment_chart
    int fragment_gms_login_bar -> fragment_gms_login_bar
    int fragment_grid -> fragment_grid
    int fragment_grid_noanim -> fragment_grid_noanim
    int fragment_list -> fragment_list
    int fragment_list_noanim -> fragment_list_noanim
    int fragment_memory_ask -> fragment_memory_ask
    int fragment_memory_notification -> fragment_memory_notification
    int fragment_memory_notify -> fragment_memory_notify
    int fragment_memory_question -> fragment_memory_question
    int fragment_mess_space -> fragment_mess_space
    int fragment_mp_shortcuts -> fragment_mp_shortcuts
    int fragment_privacy_policy -> fragment_privacy_policy
    int fragment_promote_apps -> fragment_promote_apps
    int fragment_showcase -> fragment_showcase
    int fragment_showcase_pager -> fragment_showcase_pager
    int fragment_slider_lifetime -> fragment_slider_lifetime
    int fragment_stats_lifetime -> fragment_stats_lifetime
    int fragment_stats_pieces -> fragment_stats_pieces
    int layout_default_resobj -> layout_default_resobj
    int layout_duration_count_view -> layout_duration_count_view
    int layout_month -> layout_month
    int layout_mp_shortcut -> layout_mp_shortcut
    int layout_search_result -> layout_search_result
    int main -> main
    int month_item -> month_item
    int notify_host_view -> notify_host_view
    int paper_clip_window -> paper_clip_window
    int screen_on_item -> screen_on_item
    int statistics_actbar -> statistics_actbar
    int uptime_trends_actionbar -> uptime_trends_actionbar
    int week_item -> week_item
    int weekday_item -> weekday_item
com.dailystudio.memory.R$menu -> com.dailystudio.memory.R$menu:
    int menu_main -> menu_main
    int menu_overflow_base_screen_on_distrib_chart -> menu_overflow_base_screen_on_distrib_chart
    int menu_overflow_screen_on_distrib_chart -> menu_overflow_screen_on_distrib_chart
    int menu_overflow_uptime_trend_month_chart -> menu_overflow_uptime_trend_month_chart
com.dailystudio.memory.R$raw -> com.dailystudio.memory.R$raw:
    int default_showcase_404_page -> default_showcase_404_page
    int default_showcase_404_page_style -> default_showcase_404_page_style
    int plugin_privacy -> plugin_privacy
    int privay_policy -> privay_policy
    int promote_apps -> promote_apps
    int promote_apps_scripts -> promote_apps_scripts
    int promote_apps_style -> promote_apps_style
com.dailystudio.memory.R$string -> com.dailystudio.memory.R$string:
    int achievement_first_piece -> achievement_first_piece
    int achievement_poor_memory -> achievement_poor_memory
    int achievement_search_in_memory -> achievement_search_in_memory
    int activity_about -> activity_about
    int activity_activity_list -> activity_activity_list
    int activity_ask_question -> activity_ask_question
    int activity_boot_list -> activity_boot_list
    int activity_boot_records -> activity_boot_records
    int activity_memory_search -> activity_memory_search
    int activity_memory_shortcut_category -> activity_memory_shortcut_category
    int activity_months_list -> activity_months_list
    int activity_notification -> activity_notification
    int activity_privacy_policy -> activity_privacy_policy
    int activity_screen_on_distrib_chart -> activity_screen_on_distrib_chart
    int activity_screen_on_distrib_today -> activity_screen_on_distrib_today
    int activity_screen_on_distrib_weekdays -> activity_screen_on_distrib_weekdays
    int activity_screen_on_distrib_weekends -> activity_screen_on_distrib_weekends
    int activity_screen_on_list -> activity_screen_on_list
    int activity_showcase -> activity_showcase
    int activity_statistics -> activity_statistics
    int activity_uptime_trends_chart -> activity_uptime_trends_chart
    int activity_uptime_trends_month_chart -> activity_uptime_trends_month_chart
    int alert_dialog_button_cancel -> alert_dialog_button_cancel
    int alert_dialog_button_confirm -> alert_dialog_button_confirm
    int app_name -> app_name
    int ask_question_welcome -> ask_question_welcome
    int auth_client_needs_enabling_title -> auth_client_needs_enabling_title
    int auth_client_needs_installation_title -> auth_client_needs_installation_title
    int auth_client_needs_update_title -> auth_client_needs_update_title
    int auth_client_play_services_err_notification_msg -> auth_client_play_services_err_notification_msg
    int auth_client_requested_by_msg -> auth_client_requested_by_msg
    int auth_client_using_bad_version_title -> auth_client_using_bad_version_title
    int build_device -> build_device
    int build_manufacture -> build_manufacture
    int build_platform -> build_platform
    int category_boot_label -> category_boot_label
    int chart_label_hour -> chart_label_hour
    int chart_label_minutes -> chart_label_minutes
    int chart_label_seconds -> chart_label_seconds
    int chart_lable_date -> chart_lable_date
    int common_google_play_services_enable_button -> common_google_play_services_enable_button
    int common_google_play_services_enable_text -> common_google_play_services_enable_text
    int common_google_play_services_enable_title -> common_google_play_services_enable_title
    int common_google_play_services_install_button -> common_google_play_services_install_button
    int common_google_play_services_install_text_phone -> common_google_play_services_install_text_phone
    int common_google_play_services_install_text_tablet -> common_google_play_services_install_text_tablet
    int common_google_play_services_install_title -> common_google_play_services_install_title
    int common_google_play_services_invalid_account_text -> common_google_play_services_invalid_account_text
    int common_google_play_services_invalid_account_title -> common_google_play_services_invalid_account_title
    int common_google_play_services_network_error_text -> common_google_play_services_network_error_text
    int common_google_play_services_network_error_title -> common_google_play_services_network_error_title
    int common_google_play_services_unknown_issue -> common_google_play_services_unknown_issue
    int common_google_play_services_unsupported_date_text -> common_google_play_services_unsupported_date_text
    int common_google_play_services_unsupported_text -> common_google_play_services_unsupported_text
    int common_google_play_services_unsupported_title -> common_google_play_services_unsupported_title
    int common_google_play_services_update_button -> common_google_play_services_update_button
    int common_google_play_services_update_text -> common_google_play_services_update_text
    int common_google_play_services_update_title -> common_google_play_services_update_title
    int common_signin_button_text -> common_signin_button_text
    int common_signin_button_text_long -> common_signin_button_text_long
    int config_admob_publish_id -> config_admob_publish_id
    int core_app_check_button_know -> core_app_check_button_know
    int core_app_check_confirm_dialog_message -> core_app_check_confirm_dialog_message
    int core_app_check_confirm_dialog_title -> core_app_check_confirm_dialog_title
    int core_app_check_explaination -> core_app_check_explaination
    int core_app_check_installed -> core_app_check_installed
    int core_app_check_not_installed -> core_app_check_not_installed
    int core_app_check_not_show_again -> core_app_check_not_show_again
    int core_app_check_step_one -> core_app_check_step_one
    int core_app_check_step_two -> core_app_check_step_two
    int default_app_label -> default_app_label
    int default_ask_board_text -> default_ask_board_text
    int default_ask_question_title -> default_ask_question_title
    int default_bfw_title -> default_bfw_title
    int default_category_label -> default_category_label
    int default_iv_description -> default_iv_description
    int default_nodata_prompt -> default_nodata_prompt
    int default_notification_title -> default_notification_title
    int default_paper_clip_window_title -> default_paper_clip_window_title
    int default_searchable_matches_templ -> default_searchable_matches_templ
    int error_unknow -> error_unknow
    int flag_estimated -> flag_estimated
    int gamehelper_app_misconfigured -> gamehelper_app_misconfigured
    int gamehelper_license_failed -> gamehelper_license_failed
    int gamehelper_sign_in_failed -> gamehelper_sign_in_failed
    int gamehelper_unknown_error -> gamehelper_unknown_error
    int gms_achievements -> gms_achievements
    int gms_err_achievements_not_available -> gms_err_achievements_not_available
    int gms_err_leaderboards_not_available -> gms_err_leaderboards_not_available
    int gms_leaderboards -> gms_leaderboards
    int gms_sign_in_prompt -> gms_sign_in_prompt
    int gms_sign_out -> gms_sign_out
    int gms_signed_in -> gms_signed_in
    int gms_signing_in -> gms_signing_in
    int gms_signing_out -> gms_signing_out
    int label_activity_category -> label_activity_category
    int label_boot_lifetime -> label_boot_lifetime
    int label_boot_shutdown -> label_boot_shutdown
    int label_boot_uptime -> label_boot_uptime
    int label_fastest -> label_fastest
    int label_longest -> label_longest
    int label_screen_on_boot_seq -> label_screen_on_boot_seq
    int label_screen_on_duration -> label_screen_on_duration
    int label_screen_on_time -> label_screen_on_time
    int label_shortest -> label_shortest
    int label_slowest -> label_slowest
    int leaderboard_fastest_bootup -> leaderboard_fastest_bootup
    int leaderboard_memory_collector -> leaderboard_memory_collector
    int memory_game_app_id -> memory_game_app_id
    int memory_search_category_all -> memory_search_category_all
    int memory_search_hint -> memory_search_hint
    int memory_search_suggest_selection -> memory_search_suggest_selection
    int menu_about -> menu_about
    int menu_list_months -> menu_list_months
    int menu_privacy_policy -> menu_privacy_policy
    int menu_screen_on_list -> menu_screen_on_list
    int menu_screen_on_today -> menu_screen_on_today
    int menu_screen_on_weekdays -> menu_screen_on_weekdays
    int menu_screen_on_weekends -> menu_screen_on_weekends
    int menu_search -> menu_search
    int menu_statistics -> menu_statistics
    int month_pattern -> month_pattern
    int notification_content -> notification_content
    int notify_contnet_new_fastest_bootup -> notify_contnet_new_fastest_bootup
    int notify_contnet_new_longest_liftime -> notify_contnet_new_longest_liftime
    int notify_contnet_new_shortest_liftime -> notify_contnet_new_shortest_liftime
    int notify_contnet_new_slowest_bootup -> notify_contnet_new_slowest_bootup
    int notify_title_new_bootup_records -> notify_title_new_bootup_records
    int notify_title_new_liftime_records -> notify_title_new_liftime_records
    int permdesc_read_memory_database -> permdesc_read_memory_database
    int permdesc_update_memory_achievements_and_leaderboards -> permdesc_update_memory_achievements_and_leaderboards
    int permdesc_write_memory_database -> permdesc_write_memory_database
    int permlab_read_memory_database -> permlab_read_memory_database
    int permlab_update_memory_achievements_and_leaderboards -> permlab_update_memory_achievements_and_leaderboards
    int permlab_write_memory_database -> permlab_write_memory_database
    int plugin_label_boot -> plugin_label_boot
    int promote_app_ask_templ -> promote_app_ask_templ
    int promote_app_name_application -> promote_app_name_application
    int promote_app_name_boot -> promote_app_name_boot
    int promote_app_name_mood -> promote_app_name_mood
    int promote_app_name_network -> promote_app_name_network
    int promote_app_name_where -> promote_app_name_where
    int prompt_search -> prompt_search
    int prompt_search_detail -> prompt_search_detail
    int screen_chart_load_prompt -> screen_chart_load_prompt
    int series_title_screen_on_duration -> series_title_screen_on_duration
    int series_title_uptime -> series_title_uptime
    int series_title_uptime_avg -> series_title_uptime_avg
    int sign -> sign
    int slider_life_time_day -> slider_life_time_day
    int slogan -> slogan
    int stats_lifetime -> stats_lifetime
    int stats_pieces -> stats_pieces
    int studio_name -> studio_name
    int task_label_boot_alive -> task_label_boot_alive
    int task_label_screen_on_off -> task_label_screen_on_off
    int time_print_date_format -> time_print_date_format
    int time_print_label_day -> time_print_label_day
    int time_print_label_days -> time_print_label_days
    int time_print_label_hour -> time_print_label_hour
    int time_print_label_min -> time_print_label_min
    int time_print_label_sec -> time_print_label_sec
    int time_print_time_format -> time_print_time_format
    int verCode -> verCode
    int verName -> verName
com.dailystudio.memory.R$style -> com.dailystudio.memory.R$style:
    int AboutAppName -> AboutAppName
    int AboutSlogan -> AboutSlogan
    int AboutStudioName -> AboutStudioName
    int AboutText -> AboutText
    int AboutVerName -> AboutVerName
    int ActionBarCountText -> ActionBarCountText
    int ActionBarOverflowMenuItemText -> ActionBarOverflowMenuItemText
    int ActionBarPromptText -> ActionBarPromptText
    int ActionBarText -> ActionBarText
    int ActionBarTitleText -> ActionBarTitleText
    int ActiveLabel -> ActiveLabel
    int Animation -> Animation
    int Animation_DropDownCenter -> Animation_DropDownCenter
    int Animation_DropDownDown -> Animation_DropDownDown
    int Animation_DropDownUp -> Animation_DropDownUp
    int AppBaseTheme -> AppBaseTheme
    int AppTheme -> AppTheme
    int AskBoardText -> AskBoardText
    int AskQuestionContent -> AskQuestionContent
    int BootActiveLabelText -> BootActiveLabelText
    int BootRecordDeltaText -> BootRecordDeltaText
    int BootRecordText -> BootRecordText
    int BootRecordTitle -> BootRecordTitle
    int BottomFloatingWindowButton -> BottomFloatingWindowButton
    int BottomFloatingWindowTitle -> BottomFloatingWindowTitle
    int CoreAppCheckExplainText -> CoreAppCheckExplainText
    int CoreAppCheckResultText -> CoreAppCheckResultText
    int CoreAppCheckStepListText -> CoreAppCheckStepListText
    int CoreAppCheckStepText -> CoreAppCheckStepText
    int DefaultAdapterView -> DefaultAdapterView
    int DefaultAppWidgetButton -> DefaultAppWidgetButton
    int DefaultAppWidgetLabel -> DefaultAppWidgetLabel
    int DefaultAppWidgetTitle -> DefaultAppWidgetTitle
    int DefaultButton -> DefaultButton
    int DefaultCheck -> DefaultCheck
    int DefaultCheck_Dark -> DefaultCheck_Dark
    int DefaultCheck_Light -> DefaultCheck_Light
    int DefaultDarkIndicatorRatingBar -> DefaultDarkIndicatorRatingBar
    int DefaultDarkPagerTitleStrip -> DefaultDarkPagerTitleStrip
    int DefaultDarkSmallRatingBar -> DefaultDarkSmallRatingBar
    int DefaultEditText -> DefaultEditText
    int DefaultEmptyText -> DefaultEmptyText
    int DefaultGridItemText -> DefaultGridItemText
    int DefaultGridView -> DefaultGridView
    int DefaultGridView_NoAnim -> DefaultGridView_NoAnim
    int DefaultIndicatorRatingBar -> DefaultIndicatorRatingBar
    int DefaultLabel -> DefaultLabel
    int DefaultListItemText -> DefaultListItemText
    int DefaultListItemText1stLine -> DefaultListItemText1stLine
    int DefaultListItemText2ndLine -> DefaultListItemText2ndLine
    int DefaultListView -> DefaultListView
    int DefaultListView_NoAnim -> DefaultListView_NoAnim
    int DefaultPagerTitleStrip -> DefaultPagerTitleStrip
    int DefaultSmallRatingBar -> DefaultSmallRatingBar
    int DefaultText -> DefaultText
    int DurationCountViewText -> DurationCountViewText
    int GMSLoginPanelButton -> GMSLoginPanelButton
    int GMSLoginPanelText -> GMSLoginPanelText
    int GMSLoginPlayerName -> GMSLoginPlayerName
    int MemoryIndexText -> MemoryIndexText
    int NotifyContent -> NotifyContent
    int NotifyText -> NotifyText
    int PaperClipTitle -> PaperClipTitle
    int ScreenOnInfoText -> ScreenOnInfoText
    int SearchResultText -> SearchResultText
    int SearchResultText_Subtitle -> SearchResultText_Subtitle
    int SearchResultText_Title -> SearchResultText_Title
    int SliderDay -> SliderDay
    int StatsItemTitle -> StatsItemTitle
    int StatsLifetimeValue -> StatsLifetimeValue
    int StatsPiecesValue -> StatsPiecesValue
    int Theme -> Theme
    int Theme_DefaultActivity -> Theme_DefaultActivity
    int Theme_DefaultActivity_Light -> Theme_DefaultActivity_Light
    int Theme_Translucent -> Theme_Translucent
    int Theme_Transparent -> Theme_Transparent
com.dailystudio.memory.R$styleable -> com.dailystudio.memory.R$styleable:
    int[] AdsAttrs -> AdsAttrs
    int AdsAttrs_adSize -> AdsAttrs_adSize
    int AdsAttrs_adUnitId -> AdsAttrs_adUnitId
    int[] CountView -> CountView
    int CountView_count -> CountView_count
    int CountView_minDigits -> CountView_minDigits
    int[] DurationCountView -> DurationCountView
    int DurationCountView_textColor -> DurationCountView_textColor
    int DurationCountView_textSize -> DurationCountView_textSize
    int DurationCountView_textStyle -> DurationCountView_textStyle
    int[] MapAttrs -> MapAttrs
    int MapAttrs_cameraBearing -> MapAttrs_cameraBearing
    int MapAttrs_cameraTargetLat -> MapAttrs_cameraTargetLat
    int MapAttrs_cameraTargetLng -> MapAttrs_cameraTargetLng
    int MapAttrs_cameraTilt -> MapAttrs_cameraTilt
    int MapAttrs_cameraZoom -> MapAttrs_cameraZoom
    int MapAttrs_mapType -> MapAttrs_mapType
    int MapAttrs_uiCompass -> MapAttrs_uiCompass
    int MapAttrs_uiRotateGestures -> MapAttrs_uiRotateGestures
    int MapAttrs_uiScrollGestures -> MapAttrs_uiScrollGestures
    int MapAttrs_uiTiltGestures -> MapAttrs_uiTiltGestures
    int MapAttrs_uiZoomControls -> MapAttrs_uiZoomControls
    int MapAttrs_uiZoomGestures -> MapAttrs_uiZoomGestures
    int MapAttrs_useViewLifecycle -> MapAttrs_useViewLifecycle
    int MapAttrs_zOrderOnTop -> MapAttrs_zOrderOnTop
    int[] SlidingDrawer -> SlidingDrawer
    int SlidingDrawer_allowSingleTap -> SlidingDrawer_allowSingleTap
    int SlidingDrawer_animateOnClick -> SlidingDrawer_animateOnClick
    int SlidingDrawer_bottomOffset -> SlidingDrawer_bottomOffset
    int SlidingDrawer_content -> SlidingDrawer_content
    int SlidingDrawer_handle -> SlidingDrawer_handle
    int SlidingDrawer_orientation -> SlidingDrawer_orientation
    int SlidingDrawer_topOffset -> SlidingDrawer_topOffset
com.dailystudio.memory.R$xml -> com.dailystudio.memory.R$xml:
    int activity_category_boot -> activity_category_boot
    int boot_privacy_policy -> boot_privacy_policy
    int plugin_boot -> plugin_boot
    int searchable -> searchable
com.dailystudio.memory.activity.AboutActivity -> com.dailystudio.memory.activity.AboutActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void setupViews() -> g
com.dailystudio.memory.activity.AbsMemoryGameListActivity -> com.dailystudio.memory.activity.a:
    void onNewIntent(android.content.Intent) -> onNewIntent
    int getListFragmentId() -> o
    com.dailystudio.memory.fragment.AbsMemoryListFragment getListFragment() -> p
com.dailystudio.memory.activity.AbsMemoryListActivity -> com.dailystudio.memory.activity.b:
    void onNewIntent(android.content.Intent) -> onNewIntent
    int getListFragmentId() -> g
    com.dailystudio.memory.fragment.AbsMemoryListFragment getListFragment() -> h
com.dailystudio.memory.activity.ActionBar -> com.dailystudio.memory.activity.ActionBar:
    int[] sPrgoressResIds -> a
    android.widget.TextView mTitleView -> b
    android.view.ViewGroup mCustomView -> c
    android.view.View mOverflowButton -> d
    android.widget.ImageView mProgressInd -> e
    int mProgress -> f
    android.view.animation.Animation mOverflowDropdownAnimIn -> g
    android.view.animation.Animation mOverflowDropdownAnimOut -> h
    com.dailystudio.memory.activity.ActionBar$ActionBarOverflowCallbacks mOverflowCallbacks -> i
    java.lang.Runnable mUpdateProgressRunnable -> j
    android.os.Handler mHandler -> k
    void initMembers() -> f
    void setTitle(java.lang.CharSequence) -> setTitle
    void setCustomView(int) -> setCustomView
    void setCustomView(android.view.View) -> setCustomView
    void setCustomView(android.view.View,com.dailystudio.memory.activity.ActionBar$LayoutParams) -> a
    void setOverflowEnabled(boolean) -> setOverflowEnabled
    boolean isOverflowEnabled() -> a
    boolean isOverflowShown() -> b
    void setOverflowCallbacks(com.dailystudio.memory.activity.ActionBar$ActionBarOverflowCallbacks) -> setOverflowCallbacks
    void toggleOverflowDropdown() -> g
    void displayOverflow() -> c
    void displayOverflow(boolean) -> a
    void hideOverflow() -> d
    void hideOverflow(boolean) -> b
    android.view.View getOverflowDropdown() -> getOverflowDropdown
    void setProgress(int) -> setProgress
    void clearProgress() -> e
    void showProgress() -> h
    void hideProgress() -> i
    void doUpdateProgress(int) -> a
    int access$0(com.dailystudio.memory.activity.ActionBar) -> a
    void access$1(com.dailystudio.memory.activity.ActionBar) -> b
    android.view.View access$2(com.dailystudio.memory.activity.ActionBar) -> c
    com.dailystudio.memory.activity.ActionBar$ActionBarOverflowCallbacks access$3(com.dailystudio.memory.activity.ActionBar) -> d
com.dailystudio.memory.activity.ActionBar$1 -> com.dailystudio.memory.activity.c:
    com.dailystudio.memory.activity.ActionBar this$0 -> a
    void run() -> run
com.dailystudio.memory.activity.ActionBar$2 -> com.dailystudio.memory.activity.d:
    com.dailystudio.memory.activity.ActionBar this$0 -> a
    void onClick(android.view.View) -> onClick
com.dailystudio.memory.activity.ActionBar$3 -> com.dailystudio.memory.activity.e:
    com.dailystudio.memory.activity.ActionBar this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.dailystudio.memory.activity.ActionBar$4 -> com.dailystudio.memory.activity.f:
    com.dailystudio.memory.activity.ActionBar this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.dailystudio.memory.activity.ActionBar$ActionBarOverflowCallbacks -> com.dailystudio.memory.activity.g:
    void preOverflowDropdownShow(android.view.View) -> a
    void postOverflowDropdownShow(android.view.View) -> b
    void preOverflowDropdownHide(android.view.View) -> c
    void postOverflowDropdownHide(android.view.View) -> d
com.dailystudio.memory.activity.ActionBar$LayoutParams -> com.dailystudio.memory.activity.h:
com.dailystudio.memory.activity.ActionBarActivity -> com.dailystudio.memory.activity.i:
    com.dailystudio.memory.activity.ActionBar mActionBar -> n
    com.dailystudio.memory.activity.ActionBarActivityContent mContentView -> o
    android.view.Menu mOverflowMenu -> p
    com.dailystudio.memory.menu.ActionBarOverflowMenuView mOverflowMenuView -> q
    android.graphics.Rect mOverflowMenuHitRect -> r
    android.graphics.Rect mOverflowButtonHitRect -> s
    android.view.View mOverflowPopupOverlay -> t
    android.view.animation.Animation mOverflowPopupOverlayInAnim -> u
    android.view.animation.Animation mOverflowPopupOverlayOutAnim -> v
    android.widget.TextView mPromptView -> w
    com.dailystudio.memory.activity.ActionBar$ActionBarOverflowCallbacks mOverflowCallbacks -> x
    int mIndeterminateProgress -> y
    boolean mIndeterminateProgressRunning -> z
    java.lang.Runnable mIndeterminateProgressRunnable -> A
    java.lang.CharSequence mPromptContent -> B
    java.lang.Runnable mPromptShowRunnable -> C
    java.lang.Runnable mPromptHideRunnable -> D
    android.os.Handler mHandler -> E
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onNewIntent(android.content.Intent) -> onNewIntent
    void bindIntentOnFragments(android.content.Intent) -> a
    void bindIntent(android.content.Intent) -> b
    void buildUpActionBar() -> g
    void restoreActionBar(android.os.Bundle) -> a
    com.dailystudio.memory.activity.ActionBar getCompatibleActionBar() -> q
    void showFragment(int,int) -> a
    void showFragment(android.support.v4.app.Fragment,int) -> a
    void hideFragment(int,int) -> b
    void hideFragment(android.support.v4.app.Fragment,int) -> b
    void hideFragmentOnCreate(android.support.v4.app.Fragment) -> b
    boolean isFragmentVisible(int) -> a
    boolean isFragmentVisible(android.support.v4.app.Fragment) -> c
    android.support.v4.app.Fragment findFragment(int) -> b
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onBackPressed() -> onBackPressed
    void onPause() -> onPause
    void onResume() -> onResume
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    void setActionBarProgress(int) -> c
    void clearActionBarProgress() -> r
    void onActionBarOverflowMenuItemSelected(android.view.MenuItem) -> b
    boolean onOverflowItemSelected(android.view.MenuItem) -> a
    void setOverflowEnabled(boolean) -> b
    boolean onCreateOverflowMenu(android.view.Menu) -> a
    void onActionBarOverflowHidden() -> s
    void onActionBarOverflowDisplayed() -> m
    void showPrompt(java.lang.CharSequence) -> a
    void showPrompt(java.lang.CharSequence,long) -> a
    void hidePrompt() -> t
    void realShowPrompt() -> h
    void realHidePrompt() -> i
    android.view.View access$0(com.dailystudio.memory.activity.ActionBarActivity) -> a
    android.view.animation.Animation access$1(com.dailystudio.memory.activity.ActionBarActivity) -> b
    com.dailystudio.memory.activity.ActionBarActivityContent access$2(com.dailystudio.memory.activity.ActionBarActivity) -> c
    android.view.animation.Animation access$3(com.dailystudio.memory.activity.ActionBarActivity) -> d
    int access$4(com.dailystudio.memory.activity.ActionBarActivity) -> e
    void access$5(com.dailystudio.memory.activity.ActionBarActivity,int) -> a
    android.os.Handler access$6(com.dailystudio.memory.activity.ActionBarActivity) -> f
    void access$7(com.dailystudio.memory.activity.ActionBarActivity) -> g
    void access$8(com.dailystudio.memory.activity.ActionBarActivity) -> h
    com.dailystudio.memory.activity.ActionBar access$9(com.dailystudio.memory.activity.ActionBarActivity) -> i
com.dailystudio.memory.activity.ActionBarActivity$1 -> com.dailystudio.memory.activity.j:
    com.dailystudio.memory.activity.ActionBarActivity this$0 -> a
    void preOverflowDropdownShow(android.view.View) -> a
    void postOverflowDropdownShow(android.view.View) -> b
    void preOverflowDropdownHide(android.view.View) -> c
    void postOverflowDropdownHide(android.view.View) -> d
com.dailystudio.memory.activity.ActionBarActivity$2 -> com.dailystudio.memory.activity.k:
    com.dailystudio.memory.activity.ActionBarActivity this$0 -> a
    void run() -> run
com.dailystudio.memory.activity.ActionBarActivity$3 -> com.dailystudio.memory.activity.l:
    com.dailystudio.memory.activity.ActionBarActivity this$0 -> a
    void run() -> run
com.dailystudio.memory.activity.ActionBarActivity$4 -> com.dailystudio.memory.activity.m:
    com.dailystudio.memory.activity.ActionBarActivity this$0 -> a
    void run() -> run
com.dailystudio.memory.activity.ActionBarActivity$MenuItemSelectedRunnable -> com.dailystudio.memory.activity.n:
    android.view.MenuItem mItem -> b
    com.dailystudio.memory.activity.ActionBarActivity this$0 -> a
    void run() -> run
com.dailystudio.memory.activity.ActionBarActivityContent -> com.dailystudio.memory.activity.ActionBarActivityContent:
    boolean mContentLocked -> a
    android.graphics.Paint mPaint -> b
    android.graphics.Bitmap mDrawingCache -> c
    java.lang.Runnable mUnlockContentRunnable -> d
    void initMembers() -> c
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void lockContent() -> a
    void unlockContent() -> b
    android.graphics.Bitmap access$0(com.dailystudio.memory.activity.ActionBarActivityContent) -> a
    void access$1(com.dailystudio.memory.activity.ActionBarActivityContent,boolean) -> a
com.dailystudio.memory.activity.ActionBarActivityContent$1 -> com.dailystudio.memory.activity.o:
    com.dailystudio.memory.activity.ActionBarActivityContent this$0 -> a
    void run() -> run
com.dailystudio.memory.activity.CreateCategoryShortcutActivity -> com.dailystudio.memory.activity.CreateCategoryShortcutActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void setupViews() -> i
    void onListItemSelected(java.lang.Object) -> a
com.dailystudio.memory.activity.MemoryActivityListActivity -> com.dailystudio.memory.activity.MemoryActivityListActivity:
    java.lang.String mPackage -> n
    java.lang.String mCategory -> o
    void onCreate(android.os.Bundle) -> onCreate
    void setupViews() -> i
    void bindIntent(android.content.Intent) -> b
    void onListItemSelected(java.lang.Object) -> a
    void updateTitleAndIcon() -> j
    void setDefaultLabelAndIcon() -> k
    void setActionBarTitle(java.lang.String) -> b
    void access$0(com.dailystudio.memory.activity.MemoryActivityListActivity) -> a
    void access$1(com.dailystudio.memory.activity.MemoryActivityListActivity,java.lang.String) -> a
com.dailystudio.memory.activity.MemoryActivityListActivity$1 -> com.dailystudio.memory.activity.p:
    com.dailystudio.memory.activity.MemoryActivityListActivity this$0 -> b
    void onQueryComplete(int,java.lang.Object,java.util.List) -> a
com.dailystudio.memory.activity.MemoryPeroidBasedActivity -> com.dailystudio.memory.activity.q:
    long mPeroidStart -> n
    long mPeroidEnd -> o
    void bindIntentOnFragments(android.content.Intent) -> a
    void bindIntent(android.content.Intent) -> b
    long getPeroidStart() -> g
    long getPeroidEnd() -> h
    int[] listPeroidBaseFragmentIds() -> i
com.dailystudio.memory.activity.MemorySearchActivity -> com.dailystudio.memory.activity.MemorySearchActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onNewIntent(android.content.Intent) -> onNewIntent
    void handleIntent(android.content.Intent) -> c
    void doView(android.content.Intent) -> d
    void doSearchQuery(android.content.Intent) -> e
    com.dailystudio.memory.fragment.SearchResultsListFragment getResultsFragment() -> g
com.dailystudio.memory.activity.PrivacyPolicyActivity -> com.dailystudio.memory.activity.PrivacyPolicyActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void setupViews() -> g
com.dailystudio.memory.activity.StatisticsActivity -> com.dailystudio.memory.activity.StatisticsActivity:
    com.dailystudio.memory.ui.AnimatedImageView mStatsIcon -> n
    android.view.animation.Animation mStatsIconInAnim -> o
    android.view.animation.Animation mStatsIconOutAnim -> p
    java.util.Set mRunningStats -> q
    com.dailystudio.memory.fragment.AbsStatisticsFragment$StatisticCallbacks mStatisticsCallbacks -> r
    void onCreate(android.os.Bundle) -> onCreate
    void setupActionBar() -> g
    void setupViews() -> h
    java.util.Set access$0(com.dailystudio.memory.activity.StatisticsActivity) -> a
    com.dailystudio.memory.ui.AnimatedImageView access$1(com.dailystudio.memory.activity.StatisticsActivity) -> b
    android.view.animation.Animation access$2(com.dailystudio.memory.activity.StatisticsActivity) -> c
    android.view.animation.Animation access$3(com.dailystudio.memory.activity.StatisticsActivity) -> d
com.dailystudio.memory.activity.StatisticsActivity$1 -> com.dailystudio.memory.activity.r:
    com.dailystudio.memory.activity.StatisticsActivity this$0 -> a
    void onStatisticBegin(java.lang.String) -> a
    void onStatisticEnd(java.lang.String) -> b
    void startPromptStatistics() -> a
    void stopPromptStatistics() -> b
com.dailystudio.memory.activity.StatisticsActivity$2 -> com.dailystudio.memory.activity.s:
    com.dailystudio.memory.activity.StatisticsActivity this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.dailystudio.memory.app.MemoryApplication -> com.dailystudio.memory.a.a:
    void onCreate() -> onCreate
    void onTerminate() -> onTerminate
com.dailystudio.memory.app.MemoryPieceQueryReceiver -> com.dailystudio.memory.a.b:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    long onQueryMemoryPiceceCount(android.content.Context) -> a
com.dailystudio.memory.ask.MemoryAsk -> com.dailystudio.memory.ask.a:
    void askQuestion(android.content.Context,int,java.lang.String,int,android.content.Intent) -> a
    void askQuestion(android.content.Context,int,int,int,android.content.Intent) -> a
    void askQuestion(android.content.Context,int,java.lang.String,int,int,android.content.Intent) -> a
    void answerQuestion(android.content.Context,int,java.lang.String) -> a
com.dailystudio.memory.ask.MemoryAskCommandReceiver -> com.dailystudio.memory.ask.MemoryAskCommandReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.dailystudio.memory.ask.MemoryAskCursorAdapter -> com.dailystudio.memory.ask.b:
    long getItemId(int) -> getItemId
com.dailystudio.memory.ask.MemoryAskFragment -> com.dailystudio.memory.ask.MemoryAskFragment:
    com.dailystudio.memory.ask.MemoryAskHostView mAskHostView -> P
    android.support.v4.widget.CursorAdapter mAdapter -> Q
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void setupViews(android.view.View) -> a
    void onResume() -> l
    void onPause() -> m
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> a
    void swapCursor(android.database.Cursor) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
    int getLoaderId() -> M
    android.os.Bundle createLoaderArguments() -> N
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
com.dailystudio.memory.ask.MemoryAskHostView -> com.dailystudio.memory.ask.MemoryAskHostView:
    android.content.Context mContext -> a
    android.widget.TextView mAskBoard -> b
    android.view.animation.Animation mAskBoardInAnim -> c
    android.view.animation.Animation mAskBoardOutAnim -> d
    com.dailystudio.memory.ask.MemoryAskHostView$AskDataSetObserver mDataSetObserver -> e
    android.widget.Adapter mAdapter -> f
    long mCurrQuestionId -> g
    int mCurrQuestionPos -> h
    int mNextQuestionPos -> i
    android.view.GestureDetector mGestureDetector -> j
    java.lang.Runnable mScheduleAskRunnable -> k
    java.lang.Runnable mMoveNextRunnable -> l
    android.view.GestureDetector$OnGestureListener mGestureListener -> m
    void initMembers() -> d
    boolean checkAndRestoredPositionsById() -> e
    void scheduleQuestions(android.widget.Adapter) -> a
    void scheduleNextQuestion() -> f
    void scheduleNextQuestion(long) -> a
    void cancelPendingQuestion() -> a
    void cancelPendingQuestion(boolean) -> a
    void pasueAskQuestions() -> b
    void resumeAskQuestions() -> c
    void showAskBoard(java.lang.String) -> a
    void hideAskBoard(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    android.widget.Adapter access$0(com.dailystudio.memory.ask.MemoryAskHostView) -> a
    int access$1(com.dailystudio.memory.ask.MemoryAskHostView) -> b
    void access$2(com.dailystudio.memory.ask.MemoryAskHostView,int) -> a
    void access$3(com.dailystudio.memory.ask.MemoryAskHostView,long) -> a
    int access$4(com.dailystudio.memory.ask.MemoryAskHostView) -> c
    void access$5(com.dailystudio.memory.ask.MemoryAskHostView,int) -> b
    java.lang.Runnable access$6(com.dailystudio.memory.ask.MemoryAskHostView) -> d
    void access$7(com.dailystudio.memory.ask.MemoryAskHostView) -> e
    void access$8(com.dailystudio.memory.ask.MemoryAskHostView,long) -> b
    boolean access$9(com.dailystudio.memory.ask.MemoryAskHostView) -> f
    android.widget.TextView access$10(com.dailystudio.memory.ask.MemoryAskHostView) -> g
com.dailystudio.memory.ask.MemoryAskHostView$1 -> com.dailystudio.memory.ask.c:
    com.dailystudio.memory.ask.MemoryAskHostView this$0 -> a
    void run() -> run
com.dailystudio.memory.ask.MemoryAskHostView$2 -> com.dailystudio.memory.ask.d:
    com.dailystudio.memory.ask.MemoryAskHostView this$0 -> a
    void run() -> run
com.dailystudio.memory.ask.MemoryAskHostView$3 -> com.dailystudio.memory.ask.e:
    com.dailystudio.memory.ask.MemoryAskHostView this$0 -> a
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.dailystudio.memory.ask.MemoryAskHostView$4 -> com.dailystudio.memory.ask.f:
    com.dailystudio.memory.ask.MemoryAskHostView this$0 -> a
    void onClick(android.view.View) -> onClick
com.dailystudio.memory.ask.MemoryAskHostView$5 -> com.dailystudio.memory.ask.g:
    com.dailystudio.memory.ask.MemoryAskHostView this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.dailystudio.memory.ask.MemoryAskHostView$AskDataSetObserver -> com.dailystudio.memory.ask.h:
    com.dailystudio.memory.ask.MemoryAskHostView this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.dailystudio.memory.ask.MemoryAskQuestionActivity -> com.dailystudio.memory.ask.MemoryAskQuestionActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onNewIntent(android.content.Intent) -> onNewIntent
    com.dailystudio.app.fragment.AbsLoaderFragment getBaseFragment() -> g
com.dailystudio.memory.ask.MemoryQuestion -> com.dailystudio.memory.ask.MemoryQuestion:
    com.dailystudio.dataobject.Column COLUMN_QUESTION_ID -> a
    com.dailystudio.dataobject.Column COLUMN_SRC_PACKAGE -> b
    com.dailystudio.dataobject.Column COLUMN_CONTENT_RESOURCE_NAME -> f
    com.dailystudio.dataobject.Column COLUMN_CONTENT_TEXT -> g
    com.dailystudio.dataobject.Column COLUMN_LAUNCH_INTENT -> h
    com.dailystudio.dataobject.Column COLUMN_PRIORITY -> i
    com.dailystudio.dataobject.Column COLUMN_STATE -> j
    com.dailystudio.dataobject.Column COLUMN_ANSWER -> k
    com.dailystudio.dataobject.Column[] sColumns -> n
    void setQuestionId(int) -> a
    int getQuestionId() -> a
    void setSourcePackage(java.lang.String) -> a
    java.lang.String getSourcePackage() -> h
    void setContentResourceName(java.lang.String) -> b
    java.lang.String getContentResourceName() -> i
    int getContentResourceId() -> j
    void setContentText(java.lang.String) -> c
    java.lang.String getContentText() -> k
    java.lang.String dumpQuestionText() -> l
    void setLaunchIntent(java.lang.String) -> d
    java.lang.String getLaunchIntent() -> m
    void setPriority(int) -> b
    int getPriority() -> n
    void setState(int) -> c
    int getState() -> o
    void setAnswer(java.lang.String) -> e
    java.lang.String getAnswer() -> p
    java.lang.String toString() -> toString
com.dailystudio.memory.ask.MemoryQuestionDatabaseModal -> com.dailystudio.memory.ask.i:
    void addQuestion(android.content.Context,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int) -> a
    void updateQuestion(android.content.Context,com.dailystudio.memory.ask.MemoryQuestion,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int) -> a
    void updateQuestionAnswer(android.content.Context,com.dailystudio.memory.ask.MemoryQuestion,java.lang.String) -> a
    com.dailystudio.memory.ask.MemoryQuestion findQuestion(android.content.Context,int,java.lang.String) -> a
com.dailystudio.memory.ask.MemoryQuestionFragment -> com.dailystudio.memory.ask.MemoryQuestionFragment:
    int mQid -> P
    java.lang.String mSourcePackage -> Q
    android.widget.TextView mQuestionContent -> R
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void setupViews(android.view.View) -> a
    void bindIntent(android.content.Intent) -> b
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
    int getLoaderId() -> M
    android.os.Bundle createLoaderArguments() -> N
    void updateContent(com.dailystudio.memory.ask.MemoryQuestion) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
com.dailystudio.memory.ask.MemoryQuestionLoader -> com.dailystudio.memory.ask.j:
    int mQid -> v
    java.lang.String mSourcePackage -> w
    java.lang.Class getObjectClass() -> y
    com.dailystudio.dataobject.query.Query getQuery(java.lang.Class) -> b
com.dailystudio.memory.ask.MemoryQuestionsLoader -> com.dailystudio.memory.ask.k:
    java.lang.Class getObjectClass() -> y
    com.dailystudio.dataobject.query.Query getQuery(java.lang.Class) -> b
com.dailystudio.memory.boot.BootALiveTask -> com.dailystudio.memory.boot.BootALiveTask:
    void onCreate(android.content.Context,long) -> a
    void onExecute(android.content.Context,long) -> b
    void keepAlive(android.content.Context,long) -> h
    void onPause(android.content.Context,long) -> c
    void onResume(android.content.Context,long) -> d
com.dailystudio.memory.boot.BootTasksKeepAliveSerive -> com.dailystudio.memory.boot.BootTasksKeepAliveSerive:
com.dailystudio.memory.boot.MemoryBoot -> com.dailystudio.memory.boot.MemoryBoot:
    com.dailystudio.dataobject.Column COLUMN_BOOT_SEQUENCE -> a
    com.dailystudio.dataobject.Column COLUMN_BOOT_UP_TIME -> b
    com.dailystudio.dataobject.Column COLUMN_BOOT_SHUTDOWN_TIME -> f
    com.dailystudio.dataobject.Column COLUMN_BOOT_ESTIMATED -> g
    com.dailystudio.dataobject.Column[] sCloumns -> h
    long getBootSequence() -> a
    void setBootSequence(long) -> a
    long getBootUpTime() -> h
    void setBootUpTime(long) -> b
    long getShutDownTime() -> i
    void setShutDownTime(long) -> c
    void setEsitmated(boolean) -> a
    java.lang.String toString() -> toString
com.dailystudio.memory.boot.MemoryBootDatabaseModal -> com.dailystudio.memory.boot.a:
    long getCurrentBootSeqeunce(android.content.Context) -> a
    com.dailystudio.memory.boot.MemoryBoot getLastBoot(android.content.Context) -> b
    com.dailystudio.memory.boot.MemoryBoot getBoot(android.content.Context,long) -> a
    long estimateBootTime(long) -> a
    boolean isCurrentBoot(android.content.Context,com.dailystudio.memory.boot.MemoryBoot) -> a
    boolean tagNewBoot(android.content.Context,long) -> b
    boolean tagNewBoot(android.content.Context,long,long) -> a
    void tagALiveForBoot(android.content.Context,com.dailystudio.memory.boot.MemoryBoot) -> b
com.dailystudio.memory.boot.MemoryBootPieceQueryReceiver -> com.dailystudio.memory.boot.MemoryBootPieceQueryReceiver:
    long onQueryMemoryPiceceCount(android.content.Context) -> a
com.dailystudio.memory.boot.MemoryBootSearchableContentProvider -> com.dailystudio.memory.boot.MemoryBootSearchableContentProvider:
    java.util.List doQuerySuggestions(com.dailystudio.memory.searchable.MemorySearchableQuery) -> a
    android.database.Cursor doQueryData(com.dailystudio.memory.searchable.MemorySearchableQuery) -> b
    com.dailystudio.memory.searchable.MemorySearchableContent memoryToSearchableContent(android.database.Cursor) -> a
    java.lang.String getSearchableAuthority() -> a
com.dailystudio.memory.boot.MemoryScreenOn -> com.dailystudio.memory.boot.MemoryScreenOn:
    com.dailystudio.dataobject.Column COLUMN_BOOT_SEQUENCE -> a
    com.dailystudio.dataobject.Column COLUMN_DURATION -> b
    com.dailystudio.dataobject.Column[] sCloumns -> f
    long getBootSequence() -> a
    void setBootSequence(long) -> a
    long getDuration() -> h
    void setDuration(long) -> b
    java.lang.String toString() -> toString
com.dailystudio.memory.boot.MemoryScreenOnDatabaseModal -> com.dailystudio.memory.boot.b:
    com.dailystudio.memory.boot.MemoryScreenOn getLastScreenOn(android.content.Context) -> a
    void markScreenOn(android.content.Context) -> b
    void markScreenOff(android.content.Context) -> c
    void markScreenOff(android.content.Context,com.dailystudio.memory.boot.MemoryScreenOn) -> a
    void checkScreenOnOrOff(android.content.Context) -> d
    boolean isScreenOn(android.content.Context) -> e
com.dailystudio.memory.boot.MemoryUptimeAverage -> com.dailystudio.memory.boot.MemoryUptimeAverage:
    com.dailystudio.dataobject.Column COLUMN_WEEK_TIME -> a
    com.dailystudio.dataobject.Column COLUMN_MOOD_AVG -> b
    com.dailystudio.dataobject.Column[] sCloumns -> f
    long getWeekTime() -> a
    double getUptimeAverage() -> h
    java.lang.String toString() -> toString
com.dailystudio.memory.boot.OnBootCompleteReceiver -> com.dailystudio.memory.boot.OnBootCompleteReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.dailystudio.memory.boot.OnShutdownReceiver -> com.dailystudio.memory.boot.OnShutdownReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.dailystudio.memory.boot.PluginBoot -> com.dailystudio.memory.boot.PluginBoot:
    boolean onRegister(android.content.Context,long) -> a
    android.content.Intent getKeepAliveTaskServiceIntent(android.content.Context) -> a
    void checkScreenOn(android.content.Context) -> c
    void checkAndUpdateRecords(android.content.Context) -> d
    void checkAndUpdateLeaderboard(android.content.Context) -> e
com.dailystudio.memory.boot.R -> com.dailystudio.memory.boot.R:
com.dailystudio.memory.boot.R$anim -> com.dailystudio.memory.boot.R$anim:
    int actbar_overflow_dropdown_in -> actbar_overflow_dropdown_in
    int actbar_overflow_dropdown_out -> actbar_overflow_dropdown_out
    int actbar_overflow_popup_overlay_in -> actbar_overflow_popup_overlay_in
    int actbar_overflow_popup_overlay_out -> actbar_overflow_popup_overlay_out
    int actbar_prompt_in_bottom -> actbar_prompt_in_bottom
    int actbar_prompt_out_bottom -> actbar_prompt_out_bottom
    int ask_board_in -> ask_board_in
    int ask_board_out -> ask_board_out
    int char_layout_anim -> char_layout_anim
    int chart_in -> chart_in
    int circle_item_in -> circle_item_in
    int circle_layout_anim -> circle_layout_anim
    int expand_list_item_in -> expand_list_item_in
    int expand_list_item_layout_anim -> expand_list_item_layout_anim
    int fade_in -> fade_in
    int fade_out -> fade_out
    int grid_item_in -> grid_item_in
    int grid_layout_anim -> grid_layout_anim
    int grow_fade_in -> grow_fade_in
    int grow_fade_in_center -> grow_fade_in_center
    int grow_fade_in_from_bottom -> grow_fade_in_from_bottom
    int list_item_in -> list_item_in
    int list_layout_anim -> list_layout_anim
    int notify_view_in -> notify_view_in
    int notify_view_out -> notify_view_out
    int paper_clip_in -> paper_clip_in
    int paper_clip_out -> paper_clip_out
    int shrink_fade_out -> shrink_fade_out
    int shrink_fade_out_center -> shrink_fade_out_center
    int shrink_fade_out_from_bottom -> shrink_fade_out_from_bottom
    int slide_fade_in_bottom -> slide_fade_in_bottom
    int slide_fade_in_left -> slide_fade_in_left
    int slide_fade_in_right -> slide_fade_in_right
    int slide_fade_in_top -> slide_fade_in_top
    int slide_fade_out_bottom -> slide_fade_out_bottom
    int slide_fade_out_left -> slide_fade_out_left
    int slide_fade_out_right -> slide_fade_out_right
    int slide_fade_out_top -> slide_fade_out_top
com.dailystudio.memory.boot.R$attr -> com.dailystudio.memory.boot.R$attr:
    int allowSingleTap -> allowSingleTap
    int animateOnClick -> animateOnClick
    int bottomOffset -> bottomOffset
    int content -> content
    int count -> count
    int handle -> handle
    int minDigits -> minDigits
    int orientation -> orientation
    int textColor -> textColor
    int textSize -> textSize
    int textStyle -> textStyle
    int topOffset -> topOffset
com.dailystudio.memory.boot.R$color -> com.dailystudio.memory.boot.R$color:
    int action_bar_bg_color -> action_bar_bg_color
    int action_bar_popup_content_overlay -> action_bar_popup_content_overlay
    int action_bar_text_color -> action_bar_text_color
    int action_bar_text_disable_color -> action_bar_text_disable_color
    int android_blue -> android_blue
    int android_blue_light -> android_blue_light
    int black -> black
    int blue -> blue
    int boot_expand_separator_active_color -> boot_expand_separator_active_color
    int boot_expand_separator_color -> boot_expand_separator_color
    int chart_transparent -> chart_transparent
    int core_app_check_step_text_color -> core_app_check_step_text_color
    int dark_red -> dark_red
    int default_button_text_color -> default_button_text_color
    int fadeText -> fadeText
    int gold_yellow -> gold_yellow
    int gray -> gray
    int green -> green
    int light_black -> light_black
    int light_gray -> light_gray
    int light_white -> light_white
    int orange -> orange
    int red -> red
    int royal_blue -> royal_blue
    int see_green -> see_green
    int tomato_red -> tomato_red
    int translucent_background -> translucent_background
    int transparent -> transparent
    int transparent_background -> transparent_background
    int white -> white
com.dailystudio.memory.boot.R$dimen -> com.dailystudio.memory.boot.R$dimen:
    int actbar_count_text_size -> actbar_count_text_size
    int actbar_custom_view_right_padding -> actbar_custom_view_right_padding
    int actbar_overflow_menu_icon_height -> actbar_overflow_menu_icon_height
    int actbar_overflow_menu_icon_width -> actbar_overflow_menu_icon_width
    int actbar_overflow_menu_item_padding -> actbar_overflow_menu_item_padding
    int actbar_overflow_menu_max_width -> actbar_overflow_menu_max_width
    int actbar_overflow_menu_text_size -> actbar_overflow_menu_text_size
    int action_bar_height -> action_bar_height
    int action_bar_padding -> action_bar_padding
    int action_bar_right_padding -> action_bar_right_padding
    int action_bar_text_size -> action_bar_text_size
    int alert_dialog_custom_view_padding_bottom -> alert_dialog_custom_view_padding_bottom
    int alert_dialog_custom_view_padding_left -> alert_dialog_custom_view_padding_left
    int alert_dialog_custom_view_padding_right -> alert_dialog_custom_view_padding_right
    int alert_dialog_custom_view_padding_top -> alert_dialog_custom_view_padding_top
    int app_widget_btn_padding -> app_widget_btn_padding
    int app_widget_chart_margin_bottom -> app_widget_chart_margin_bottom
    int app_widget_chart_margin_left -> app_widget_chart_margin_left
    int app_widget_chart_margin_right -> app_widget_chart_margin_right
    int app_widget_chart_margin_top -> app_widget_chart_margin_top
    int app_widget_frame_padding -> app_widget_frame_padding
    int app_widget_grid_height -> app_widget_grid_height
    int app_widget_grid_width -> app_widget_grid_width
    int app_widget_label_font_size -> app_widget_label_font_size
    int app_widget_label_padding -> app_widget_label_padding
    int app_widget_margin -> app_widget_margin
    int app_widget_title_padding -> app_widget_title_padding
    int ask_question_answers_padding -> ask_question_answers_padding
    int ask_question_content_padding -> ask_question_content_padding
    int bfw_hpadding -> bfw_hpadding
    int bfw_min_content_height -> bfw_min_content_height
    int bfw_title_height -> bfw_title_height
    int bfw_title_hpadding -> bfw_title_hpadding
    int boot_chart_margin_top -> boot_chart_margin_top
    int boot_expand_separator_size -> boot_expand_separator_size
    int boot_item_padding -> boot_item_padding
    int boot_label_width -> boot_label_width
    int close_button_size -> close_button_size
    int core_app_check_badge_margin -> core_app_check_badge_margin
    int core_app_check_padding -> core_app_check_padding
    int daygroup_item_height -> daygroup_item_height
    int default_app_item_padding -> default_app_item_padding
    int default_ask_board_width -> default_ask_board_width
    int default_button_padding -> default_button_padding
    int default_chart_axis_title_size -> default_chart_axis_title_size
    int default_chart_label_size -> default_chart_label_size
    int default_chart_legend_height -> default_chart_legend_height
    int default_chart_legend_size -> default_chart_legend_size
    int default_chart_margin_bottom -> default_chart_margin_bottom
    int default_chart_margin_left -> default_chart_margin_left
    int default_chart_margin_right -> default_chart_margin_right
    int default_chart_margin_top -> default_chart_margin_top
    int default_chart_title_size -> default_chart_title_size
    int default_check_padding -> default_check_padding
    int default_content_hpadding -> default_content_hpadding
    int default_content_vpadding -> default_content_vpadding
    int default_empty_text_font_size -> default_empty_text_font_size
    int default_font_size -> default_font_size
    int default_grid_item_height -> default_grid_item_height
    int default_label_padding -> default_label_padding
    int default_notify_height -> default_notify_height
    int default_pager_title_font_size -> default_pager_title_font_size
    int default_res_icon_size -> default_res_icon_size
    int gv_item_hpadding -> gv_item_hpadding
    int gv_item_vpadding -> gv_item_vpadding
    int lv_index_font_size -> lv_index_font_size
    int lv_index_padding -> lv_index_padding
    int lv_index_width -> lv_index_width
    int lv_item_2nd_font_size -> lv_item_2nd_font_size
    int lv_item_2nd_vpadding -> lv_item_2nd_vpadding
    int lv_item_font_size -> lv_item_font_size
    int lv_item_padding -> lv_item_padding
    int memory_ic_height -> memory_ic_height
    int memory_ic_witdh -> memory_ic_witdh
    int memory_index_font_size -> memory_index_font_size
    int memory_index_padding -> memory_index_padding
    int memory_index_width -> memory_index_width
    int month_item_height -> month_item_height
    int notification_content_padding -> notification_content_padding
    int notification_dialog_height -> notification_dialog_height
    int paper_clip_content_hpadding -> paper_clip_content_hpadding
    int paper_clip_content_vpadding -> paper_clip_content_vpadding
    int paper_clip_frame_padding -> paper_clip_frame_padding
    int paper_clip_title_font_size -> paper_clip_title_font_size
    int paper_clip_title_height -> paper_clip_title_height
    int paper_clip_title_hmargin -> paper_clip_title_hmargin
    int paper_clip_title_vmargin -> paper_clip_title_vmargin
    int screen_on_distrib_chart_margin_top -> screen_on_distrib_chart_margin_top
com.dailystudio.memory.boot.R$drawable -> com.dailystudio.memory.boot.R$drawable:
    int actbar_button -> actbar_button
    int actbar_button_pressed_light -> actbar_button_pressed_light
    int actbar_dropdown_background -> actbar_dropdown_background
    int actbar_prg_01 -> actbar_prg_01
    int actbar_prg_02 -> actbar_prg_02
    int actbar_prg_03 -> actbar_prg_03
    int actbar_prg_04 -> actbar_prg_04
    int actbar_prg_05 -> actbar_prg_05
    int actbar_prg_06 -> actbar_prg_06
    int actbar_prg_07 -> actbar_prg_07
    int actbar_prg_08 -> actbar_prg_08
    int actbar_vert_separator -> actbar_vert_separator
    int app_widget_background -> app_widget_background
    int app_widget_btn -> app_widget_btn
    int app_widget_btn_pressed -> app_widget_btn_pressed
    int ask_board -> ask_board
    int ask_board_normal -> ask_board_normal
    int ask_board_pressed -> ask_board_pressed
    int ask_dialog_bg -> ask_dialog_bg
    int check_background -> check_background
    int check_off_dark -> check_off_dark
    int check_off_light -> check_off_light
    int check_on -> check_on
    int content_bg_op60 -> content_bg_op60
    int content_bg_op80 -> content_bg_op80
    int content_bg_op90 -> content_bg_op90
    int default_button -> default_button
    int default_button_disabled_focused_light -> default_button_disabled_focused_light
    int default_button_disabled_light -> default_button_disabled_light
    int default_button_focused_light -> default_button_focused_light
    int default_button_normal_light -> default_button_normal_light
    int default_button_pressed_light -> default_button_pressed_light
    int default_content_bg -> default_content_bg
    int default_content_bg_pattern -> default_content_bg_pattern
    int default_dark_check -> default_dark_check
    int default_light_check -> default_light_check
    int edit_text_light -> edit_text_light
    int get_it_on_play_logo_large -> get_it_on_play_logo_large
    int get_it_on_play_logo_large_disabled -> get_it_on_play_logo_large_disabled
    int get_it_on_play_logo_large_normal -> get_it_on_play_logo_large_normal
    int get_it_on_play_logo_large_pressed -> get_it_on_play_logo_large_pressed
    int guess_right -> guess_right
    int guess_wrong -> guess_wrong
    int ic_action_overflow -> ic_action_overflow
    int ic_action_search -> ic_action_search
    int ic_boot -> ic_boot
    int ic_boot_active -> ic_boot_active
    int ic_boot_list -> ic_boot_list
    int ic_calendar_day -> ic_calendar_day
    int ic_calendar_month -> ic_calendar_month
    int ic_calendar_week -> ic_calendar_week
    int ic_close_button -> ic_close_button
    int ic_close_button_normal -> ic_close_button_normal
    int ic_close_button_pressed -> ic_close_button_pressed
    int ic_done -> ic_done
    int ic_done_highlight -> ic_done_highlight
    int ic_done_normal -> ic_done_normal
    int ic_launcher -> ic_launcher
    int ic_memory_bar_chart -> ic_memory_bar_chart
    int ic_memory_chart -> ic_memory_chart
    int ic_memory_list -> ic_memory_list
    int ic_memory_record -> ic_memory_record
    int ic_menu_add -> ic_menu_add
    int ic_menu_calendar -> ic_menu_calendar
    int ic_menu_history -> ic_menu_history
    int ic_menu_list -> ic_menu_list
    int ic_menu_screen_on_filter -> ic_menu_screen_on_filter
    int ic_menu_screen_on_list -> ic_menu_screen_on_list
    int ic_menu_screen_on_today -> ic_menu_screen_on_today
    int ic_menu_screen_on_weekdays -> ic_menu_screen_on_weekdays
    int ic_menu_screen_on_weekends -> ic_menu_screen_on_weekends
    int ic_menu_search -> ic_menu_search
    int ic_menu_share -> ic_menu_share
    int ic_menu_today -> ic_menu_today
    int ic_nofity -> ic_nofity
    int ic_screen_on -> ic_screen_on
    int icon -> icon
    int list_divider -> list_divider
    int list_focused -> list_focused
    int list_longpressed -> list_longpressed
    int list_pressed_dark -> list_pressed_dark
    int list_pressed_light -> list_pressed_light
    int list_selector_background_transition_dark -> list_selector_background_transition_dark
    int list_selector_background_transition_light -> list_selector_background_transition_light
    int list_selector_dark -> list_selector_dark
    int list_selector_disabled_dark -> list_selector_disabled_dark
    int list_selector_disabled_light -> list_selector_disabled_light
    int list_selector_light -> list_selector_light
    int menu_dropdown_panel_holo_light -> menu_dropdown_panel_holo_light
    int notification_dialog_bg -> notification_dialog_bg
    int notify_bird_left -> notify_bird_left
    int notify_bird_right -> notify_bird_right
    int notify_pole_and_line -> notify_pole_and_line
    int paper_clip_close_normal -> paper_clip_close_normal
    int paper_clip_close_pressed -> paper_clip_close_pressed
    int paper_clip_window -> paper_clip_window
    int paper_clip_window_close -> paper_clip_window_close
    int rate_star_big_half_dark -> rate_star_big_half_dark
    int rate_star_big_half_light -> rate_star_big_half_light
    int rate_star_big_off_dark -> rate_star_big_off_dark
    int rate_star_big_off_light -> rate_star_big_off_light
    int rate_star_big_on_dark -> rate_star_big_on_dark
    int rate_star_big_on_light -> rate_star_big_on_light
    int rate_star_small_half_dark -> rate_star_small_half_dark
    int rate_star_small_half_light -> rate_star_small_half_light
    int rate_star_small_off_dark -> rate_star_small_off_dark
    int rate_star_small_off_light -> rate_star_small_off_light
    int rate_star_small_on_dark -> rate_star_small_on_dark
    int rate_star_small_on_light -> rate_star_small_on_light
    int ratingbar_dark -> ratingbar_dark
    int ratingbar_light -> ratingbar_light
    int ratingbar_small_dark -> ratingbar_small_dark
    int ratingbar_small_light -> ratingbar_small_light
    int scrollbar_handle -> scrollbar_handle
    int textfield_activated_light -> textfield_activated_light
    int textfield_default_light -> textfield_default_light
    int textfield_disabled_focused_light -> textfield_disabled_focused_light
    int textfield_disabled_light -> textfield_disabled_light
    int textfield_focused_light -> textfield_focused_light
    int vert_divider -> vert_divider
com.dailystudio.memory.boot.R$id -> com.dailystudio.memory.boot.R$id:
    int actbar_activity_actionbar -> actbar_activity_actionbar
    int actbar_activity_content -> actbar_activity_content
    int actbar_activity_overflow_menu -> actbar_activity_overflow_menu
    int actbar_custome_view -> actbar_custome_view
    int actbar_overflow -> actbar_overflow
    int actbar_overflow_menu_item -> actbar_overflow_menu_item
    int actbar_overflow_menu_list -> actbar_overflow_menu_list
    int actbar_overflow_menu_root -> actbar_overflow_menu_root
    int actbar_overflow_popup_overlay -> actbar_overflow_popup_overlay
    int actbar_progress -> actbar_progress
    int actbar_prompt -> actbar_prompt
    int actbar_root -> actbar_root
    int actbar_title -> actbar_title
    int ask_board -> ask_board
    int ask_view -> ask_view
    int bold -> bold
    int boot_actbar_custom_view -> boot_actbar_custom_view
    int boot_base_layout -> boot_base_layout
    int boot_expand_layout -> boot_expand_layout
    int boot_expand_separator -> boot_expand_separator
    int boot_info -> boot_info
    int boot_label_lifetime -> boot_label_lifetime
    int boot_label_shutdown -> boot_label_shutdown
    int boot_label_uptime -> boot_label_uptime
    int boot_lifetime -> boot_lifetime
    int boot_list_fragment -> boot_list_fragment
    int boot_records_fragment -> boot_records_fragment
    int boot_seq -> boot_seq
    int boot_shutdown -> boot_shutdown
    int boot_time -> boot_time
    int boot_uptime -> boot_uptime
    int boots_count -> boots_count
    int chartStub -> chartStub
    int core_app_check_explain -> core_app_check_explain
    int core_app_check_google_play_badge -> core_app_check_google_play_badge
    int core_app_check_know_button -> core_app_check_know_button
    int core_app_check_memory_installed -> core_app_check_memory_installed
    int core_app_check_not_show_again_check -> core_app_check_not_show_again_check
    int core_app_check_plugin -> core_app_check_plugin
    int core_app_check_plugin_icon -> core_app_check_plugin_icon
    int core_app_check_plugin_name -> core_app_check_plugin_name
    int core_app_check_step_one -> core_app_check_step_one
    int core_app_check_step_two -> core_app_check_step_two
    int core_app_check_steps -> core_app_check_steps
    int fragment_notification -> fragment_notification
    int fragment_question -> fragment_question
    int fragment_view_root -> fragment_view_root
    int horizontal -> horizontal
    int italic -> italic
    int memory_icon -> memory_icon
    int memory_index -> memory_index
    int menu_item_icon -> menu_item_icon
    int menu_item_text -> menu_item_text
    int menu_list_months -> menu_list_months
    int menu_screen_on_list -> menu_screen_on_list
    int menu_screen_on_today -> menu_screen_on_today
    int menu_screen_on_weekdays -> menu_screen_on_weekdays
    int menu_screen_on_weekends -> menu_screen_on_weekends
    int month -> month
    int month_name -> month_name
    int months_fragment -> months_fragment
    int normal -> normal
    int notification_close -> notification_close
    int notification_content -> notification_content
    int notification_title -> notification_title
    int notification_title_separator -> notification_title_separator
    int notify_slot_1 -> notify_slot_1
    int notify_slot_2 -> notify_slot_2
    int notify_slot_3 -> notify_slot_3
    int notify_slot_4 -> notify_slot_4
    int notify_slots_root -> notify_slots_root
    int notify_view -> notify_view
    int paper_clip_close_button -> paper_clip_close_button
    int paper_clip_content -> paper_clip_content
    int paper_clip_icon -> paper_clip_icon
    int paper_clip_title -> paper_clip_title
    int paper_clip_title_separator -> paper_clip_title_separator
    int question_answer_right -> question_answer_right
    int question_answer_wrong -> question_answer_wrong
    int question_answers -> question_answers
    int question_content -> question_content
    int question_title -> question_title
    int question_title_separator -> question_title_separator
    int record_fastest_uptime -> record_fastest_uptime
    int record_fastest_uptime_delta -> record_fastest_uptime_delta
    int record_longest_liftime -> record_longest_liftime
    int record_longest_liftime_delta -> record_longest_liftime_delta
    int record_shortest_liftime -> record_shortest_liftime
    int record_shortest_liftime_delta -> record_shortest_liftime_delta
    int record_slowest_uptime -> record_slowest_uptime
    int record_slowest_uptime_delta -> record_slowest_uptime_delta
    int res_icon -> res_icon
    int res_label -> res_label
    int screen_on_boot_seq -> screen_on_boot_seq
    int screen_on_distrib_chart_fragment -> screen_on_distrib_chart_fragment
    int screen_on_duration -> screen_on_duration
    int screen_on_info -> screen_on_info
    int screen_on_label_duration -> screen_on_label_duration
    int screen_on_label_seq -> screen_on_label_seq
    int screen_on_list_fragment -> screen_on_list_fragment
    int screen_on_time -> screen_on_time
    int stats_lifetime_day -> stats_lifetime_day
    int stats_lifetime_day_label -> stats_lifetime_day_label
    int stats_lifetime_hour -> stats_lifetime_hour
    int stats_lifetime_hour_label -> stats_lifetime_hour_label
    int stats_lifetime_min -> stats_lifetime_min
    int stats_lifetime_min_label -> stats_lifetime_min_label
    int stats_lifetime_sec -> stats_lifetime_sec
    int stats_lifetime_sec_label -> stats_lifetime_sec_label
    int uptime_trends_actbar_custom_view -> uptime_trends_actbar_custom_view
    int uptime_trends_chart_fragment -> uptime_trends_chart_fragment
    int uptime_trends_curr_month -> uptime_trends_curr_month
    int uptime_trends_month_chart_fragment -> uptime_trends_month_chart_fragment
    int vertical -> vertical
    int week_num -> week_num
    int week_range -> week_range
    int weekay_time -> weekay_time
    int weekday_dayname -> weekday_dayname
com.dailystudio.memory.boot.R$integer -> com.dailystudio.memory.boot.R$integer:
    int config_chartAnimTime -> config_chartAnimTime
    int config_defaultAnimTime -> config_defaultAnimTime
    int config_notifyAnimTime -> config_notifyAnimTime
    int config_overflowAnimTime -> config_overflowAnimTime
    int config_overflowOverlayAnimTime -> config_overflowOverlayAnimTime
    int config_slowAnimTime -> config_slowAnimTime
com.dailystudio.memory.boot.R$layout -> com.dailystudio.memory.boot.R$layout:
    int actbar_activity -> actbar_activity
    int actbar_base -> actbar_base
    int actbar_overflow_menu -> actbar_overflow_menu
    int actbar_overflow_menu_item -> actbar_overflow_menu_item
    int activity_boot_list -> activity_boot_list
    int activity_boot_recrods -> activity_boot_recrods
    int activity_core_app_check -> activity_core_app_check
    int activity_months_list -> activity_months_list
    int activity_notification -> activity_notification
    int activity_question -> activity_question
    int activity_screen_on_distrub_chart -> activity_screen_on_distrub_chart
    int activity_screen_on_list -> activity_screen_on_list
    int activity_uptime_trends_chart -> activity_uptime_trends_chart
    int activity_uptime_trends_month_chart -> activity_uptime_trends_month_chart
    int ask_host_view -> ask_host_view
    int boot_item -> boot_item
    int boot_item_expand -> boot_item_expand
    int boot_list_actionbar -> boot_list_actionbar
    int fragment_boot_records -> fragment_boot_records
    int fragment_chart -> fragment_chart
    int fragment_grid -> fragment_grid
    int fragment_grid_noanim -> fragment_grid_noanim
    int fragment_list -> fragment_list
    int fragment_list_noanim -> fragment_list_noanim
    int fragment_memory_ask -> fragment_memory_ask
    int fragment_memory_notification -> fragment_memory_notification
    int fragment_memory_notify -> fragment_memory_notify
    int fragment_memory_question -> fragment_memory_question
    int layout_default_resobj -> layout_default_resobj
    int layout_duration_count_view -> layout_duration_count_view
    int layout_month -> layout_month
    int month_item -> month_item
    int notify_host_view -> notify_host_view
    int paper_clip_window -> paper_clip_window
    int screen_on_item -> screen_on_item
    int uptime_trends_actionbar -> uptime_trends_actionbar
    int week_item -> week_item
    int weekday_item -> weekday_item
com.dailystudio.memory.boot.R$menu -> com.dailystudio.memory.boot.R$menu:
    int menu_overflow_base_screen_on_distrib_chart -> menu_overflow_base_screen_on_distrib_chart
    int menu_overflow_screen_on_distrib_chart -> menu_overflow_screen_on_distrib_chart
    int menu_overflow_uptime_trend_month_chart -> menu_overflow_uptime_trend_month_chart
com.dailystudio.memory.boot.R$raw -> com.dailystudio.memory.boot.R$raw:
    int default_showcase_404_page -> default_showcase_404_page
    int default_showcase_404_page_style -> default_showcase_404_page_style
com.dailystudio.memory.boot.R$string -> com.dailystudio.memory.boot.R$string:
    int activity_ask_question -> activity_ask_question
    int activity_boot_list -> activity_boot_list
    int activity_boot_records -> activity_boot_records
    int activity_months_list -> activity_months_list
    int activity_notification -> activity_notification
    int activity_screen_on_distrib_chart -> activity_screen_on_distrib_chart
    int activity_screen_on_distrib_today -> activity_screen_on_distrib_today
    int activity_screen_on_distrib_weekdays -> activity_screen_on_distrib_weekdays
    int activity_screen_on_distrib_weekends -> activity_screen_on_distrib_weekends
    int activity_screen_on_list -> activity_screen_on_list
    int activity_uptime_trends_chart -> activity_uptime_trends_chart
    int activity_uptime_trends_month_chart -> activity_uptime_trends_month_chart
    int alert_dialog_button_cancel -> alert_dialog_button_cancel
    int alert_dialog_button_confirm -> alert_dialog_button_confirm
    int app_name -> app_name
    int build_device -> build_device
    int build_manufacture -> build_manufacture
    int build_platform -> build_platform
    int category_boot_label -> category_boot_label
    int chart_label_hour -> chart_label_hour
    int chart_label_minutes -> chart_label_minutes
    int chart_label_seconds -> chart_label_seconds
    int chart_lable_date -> chart_lable_date
    int core_app_check_button_know -> core_app_check_button_know
    int core_app_check_confirm_dialog_message -> core_app_check_confirm_dialog_message
    int core_app_check_confirm_dialog_title -> core_app_check_confirm_dialog_title
    int core_app_check_explaination -> core_app_check_explaination
    int core_app_check_installed -> core_app_check_installed
    int core_app_check_not_installed -> core_app_check_not_installed
    int core_app_check_not_show_again -> core_app_check_not_show_again
    int core_app_check_step_one -> core_app_check_step_one
    int core_app_check_step_two -> core_app_check_step_two
    int default_app_label -> default_app_label
    int default_ask_board_text -> default_ask_board_text
    int default_ask_question_title -> default_ask_question_title
    int default_bfw_title -> default_bfw_title
    int default_category_label -> default_category_label
    int default_iv_description -> default_iv_description
    int default_nodata_prompt -> default_nodata_prompt
    int default_notification_title -> default_notification_title
    int default_paper_clip_window_title -> default_paper_clip_window_title
    int default_searchable_matches_templ -> default_searchable_matches_templ
    int error_unknow -> error_unknow
    int flag_estimated -> flag_estimated
    int label_boot_lifetime -> label_boot_lifetime
    int label_boot_shutdown -> label_boot_shutdown
    int label_boot_uptime -> label_boot_uptime
    int label_fastest -> label_fastest
    int label_longest -> label_longest
    int label_screen_on_boot_seq -> label_screen_on_boot_seq
    int label_screen_on_duration -> label_screen_on_duration
    int label_screen_on_time -> label_screen_on_time
    int label_shortest -> label_shortest
    int label_slowest -> label_slowest
    int leaderboard_fastest_bootup -> leaderboard_fastest_bootup
    int menu_list_months -> menu_list_months
    int menu_screen_on_list -> menu_screen_on_list
    int menu_screen_on_today -> menu_screen_on_today
    int menu_screen_on_weekdays -> menu_screen_on_weekdays
    int menu_screen_on_weekends -> menu_screen_on_weekends
    int month_pattern -> month_pattern
    int notify_contnet_new_fastest_bootup -> notify_contnet_new_fastest_bootup
    int notify_contnet_new_longest_liftime -> notify_contnet_new_longest_liftime
    int notify_contnet_new_shortest_liftime -> notify_contnet_new_shortest_liftime
    int notify_contnet_new_slowest_bootup -> notify_contnet_new_slowest_bootup
    int notify_title_new_bootup_records -> notify_title_new_bootup_records
    int notify_title_new_liftime_records -> notify_title_new_liftime_records
    int plugin_label_boot -> plugin_label_boot
    int screen_chart_load_prompt -> screen_chart_load_prompt
    int series_title_screen_on_duration -> series_title_screen_on_duration
    int series_title_uptime -> series_title_uptime
    int series_title_uptime_avg -> series_title_uptime_avg
    int task_label_boot_alive -> task_label_boot_alive
    int task_label_screen_on_off -> task_label_screen_on_off
    int time_print_date_format -> time_print_date_format
    int time_print_label_day -> time_print_label_day
    int time_print_label_days -> time_print_label_days
    int time_print_label_hour -> time_print_label_hour
    int time_print_label_min -> time_print_label_min
    int time_print_label_sec -> time_print_label_sec
    int time_print_time_format -> time_print_time_format
com.dailystudio.memory.boot.R$style -> com.dailystudio.memory.boot.R$style:
    int ActionBarCountText -> ActionBarCountText
    int ActionBarOverflowMenuItemText -> ActionBarOverflowMenuItemText
    int ActionBarPromptText -> ActionBarPromptText
    int ActionBarText -> ActionBarText
    int ActionBarTitleText -> ActionBarTitleText
    int ActiveLabel -> ActiveLabel
    int Animation -> Animation
    int Animation_DropDownCenter -> Animation_DropDownCenter
    int Animation_DropDownDown -> Animation_DropDownDown
    int Animation_DropDownUp -> Animation_DropDownUp
    int AppTheme -> AppTheme
    int AskBoardText -> AskBoardText
    int AskQuestionContent -> AskQuestionContent
    int BootActiveLabelText -> BootActiveLabelText
    int BootRecordDeltaText -> BootRecordDeltaText
    int BootRecordText -> BootRecordText
    int BootRecordTitle -> BootRecordTitle
    int BottomFloatingWindowButton -> BottomFloatingWindowButton
    int BottomFloatingWindowTitle -> BottomFloatingWindowTitle
    int CoreAppCheckExplainText -> CoreAppCheckExplainText
    int CoreAppCheckResultText -> CoreAppCheckResultText
    int CoreAppCheckStepListText -> CoreAppCheckStepListText
    int CoreAppCheckStepText -> CoreAppCheckStepText
    int DefaultAdapterView -> DefaultAdapterView
    int DefaultAppWidgetButton -> DefaultAppWidgetButton
    int DefaultAppWidgetLabel -> DefaultAppWidgetLabel
    int DefaultAppWidgetTitle -> DefaultAppWidgetTitle
    int DefaultButton -> DefaultButton
    int DefaultCheck -> DefaultCheck
    int DefaultCheck_Dark -> DefaultCheck_Dark
    int DefaultCheck_Light -> DefaultCheck_Light
    int DefaultDarkIndicatorRatingBar -> DefaultDarkIndicatorRatingBar
    int DefaultDarkPagerTitleStrip -> DefaultDarkPagerTitleStrip
    int DefaultDarkSmallRatingBar -> DefaultDarkSmallRatingBar
    int DefaultEditText -> DefaultEditText
    int DefaultEmptyText -> DefaultEmptyText
    int DefaultGridItemText -> DefaultGridItemText
    int DefaultGridView -> DefaultGridView
    int DefaultGridView_NoAnim -> DefaultGridView_NoAnim
    int DefaultIndicatorRatingBar -> DefaultIndicatorRatingBar
    int DefaultLabel -> DefaultLabel
    int DefaultListItemText -> DefaultListItemText
    int DefaultListItemText1stLine -> DefaultListItemText1stLine
    int DefaultListItemText2ndLine -> DefaultListItemText2ndLine
    int DefaultListView -> DefaultListView
    int DefaultListView_NoAnim -> DefaultListView_NoAnim
    int DefaultPagerTitleStrip -> DefaultPagerTitleStrip
    int DefaultSmallRatingBar -> DefaultSmallRatingBar
    int DefaultText -> DefaultText
    int DurationCountViewText -> DurationCountViewText
    int MemoryIndexText -> MemoryIndexText
    int NotifyContent -> NotifyContent
    int NotifyText -> NotifyText
    int PaperClipTitle -> PaperClipTitle
    int ScreenOnInfoText -> ScreenOnInfoText
    int Theme -> Theme
    int Theme_DefaultActivity -> Theme_DefaultActivity
    int Theme_DefaultActivity_Light -> Theme_DefaultActivity_Light
    int Theme_Translucent -> Theme_Translucent
    int Theme_Transparent -> Theme_Transparent
com.dailystudio.memory.boot.R$styleable -> com.dailystudio.memory.boot.R$styleable:
    int[] CountView -> CountView
    int CountView_count -> CountView_count
    int CountView_minDigits -> CountView_minDigits
    int[] DurationCountView -> DurationCountView
    int DurationCountView_textColor -> DurationCountView_textColor
    int DurationCountView_textSize -> DurationCountView_textSize
    int DurationCountView_textStyle -> DurationCountView_textStyle
    int[] SlidingDrawer -> SlidingDrawer
    int SlidingDrawer_allowSingleTap -> SlidingDrawer_allowSingleTap
    int SlidingDrawer_animateOnClick -> SlidingDrawer_animateOnClick
    int SlidingDrawer_bottomOffset -> SlidingDrawer_bottomOffset
    int SlidingDrawer_content -> SlidingDrawer_content
    int SlidingDrawer_handle -> SlidingDrawer_handle
    int SlidingDrawer_orientation -> SlidingDrawer_orientation
    int SlidingDrawer_topOffset -> SlidingDrawer_topOffset
com.dailystudio.memory.boot.R$xml -> com.dailystudio.memory.boot.R$xml:
    int activity_category_boot -> activity_category_boot
    int boot_privacy_policy -> boot_privacy_policy
    int plugin_boot -> plugin_boot
com.dailystudio.memory.boot.ScreenOnOffTask -> com.dailystudio.memory.boot.ScreenOnOffTask:
    java.util.Observer mObserver -> b
    void onCreate(android.content.Context,long) -> a
    void onDestroy(android.content.Context,long) -> e
    void onPrepareObservables(android.content.Context,long) -> f
    void onDestoryObservables(android.content.Context,long) -> g
    void onExecute(android.content.Context,long) -> b
    void checkAndUpdateScreenOnOff() -> e
    void access$0(com.dailystudio.memory.boot.ScreenOnOffTask) -> a
com.dailystudio.memory.boot.ScreenOnOffTask$1 -> com.dailystudio.memory.boot.c:
    com.dailystudio.memory.boot.ScreenOnOffTask this$0 -> a
    void update(java.util.Observable,java.lang.Object) -> update
com.dailystudio.memory.boot.activity.BaseScreenOnDistribChartActivity -> com.dailystudio.memory.boot.activity.BaseScreenOnDistribChartActivity:
    int[] peroidFragmentIds -> p
    void onCreate(android.os.Bundle) -> onCreate
    void setupActionBar() -> j
    boolean onCreateOverflowMenu(android.view.Menu) -> a
    boolean onOverflowItemSelected(android.view.MenuItem) -> a
    int[] listPeroidBaseFragmentIds() -> i
    void bindIntent(android.content.Intent) -> b
com.dailystudio.memory.boot.activity.BootListActivity -> com.dailystudio.memory.boot.activity.BootListActivity:
    android.widget.TextView mCountView -> n
    android.support.v4.app.LoaderManager$LoaderCallbacks mCountLoaderCallbacks -> o
    void onCreate(android.os.Bundle) -> onCreate
    void setupActionBar() -> g
    android.widget.TextView access$0(com.dailystudio.memory.boot.activity.BootListActivity) -> a
com.dailystudio.memory.boot.activity.BootListActivity$1 -> com.dailystudio.memory.boot.activity.a:
    com.dailystudio.memory.boot.activity.BootListActivity this$0 -> a
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.util.List) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
com.dailystudio.memory.boot.activity.BootRecordsActivity -> com.dailystudio.memory.boot.activity.BootRecordsActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.dailystudio.memory.boot.activity.MonthsListActivity -> com.dailystudio.memory.boot.activity.MonthsListActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onListItemSelected(java.lang.Object) -> a
com.dailystudio.memory.boot.activity.ScreenOnDistribChartActivity -> com.dailystudio.memory.boot.activity.ScreenOnDistribChartActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void setupActionBar() -> j
    boolean onCreateOverflowMenu(android.view.Menu) -> a
    boolean onOverflowItemSelected(android.view.MenuItem) -> a
com.dailystudio.memory.boot.activity.ScreenOnListActivity -> com.dailystudio.memory.boot.activity.ScreenOnListActivity:
    int[] peroidFragmentIds -> p
    void onCreate(android.os.Bundle) -> onCreate
    int[] listPeroidBaseFragmentIds() -> i
com.dailystudio.memory.boot.activity.UptimeTrendsChartActivity -> com.dailystudio.memory.boot.activity.UptimeTrendsChartActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void setupActionBar() -> j
    boolean onCreateOverflowMenu(android.view.Menu) -> a
    boolean onOverflowItemSelected(android.view.MenuItem) -> a
com.dailystudio.memory.boot.activity.UptimeTrendsMonthChartActivity -> com.dailystudio.memory.boot.activity.UptimeTrendsMonthChartActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void setupActionBar() -> j
    boolean onCreateOverflowMenu(android.view.Menu) -> a
    boolean onOverflowItemSelected(android.view.MenuItem) -> a
com.dailystudio.memory.boot.fragment.BootListFragment -> com.dailystudio.memory.boot.fragment.BootListFragment:
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    android.support.v4.widget.CursorAdapter onCreateAdapter() -> H
    int getLoaderId() -> M
    android.os.Bundle createLoaderArguments() -> N
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    android.widget.BaseAdapter onCreateAdapter() -> G
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
com.dailystudio.memory.boot.fragment.BootRecordsFragment -> com.dailystudio.memory.boot.fragment.BootRecordsFragment:
    android.widget.TextView mUptimeFastest -> P
    android.widget.TextView mUptimeFastestDelta -> Q
    android.widget.TextView mUptimeSlowest -> R
    android.widget.TextView mUptimeSlowestDelta -> S
    android.widget.TextView mLifetimeShortest -> T
    android.widget.TextView mLifetimeShortestDelta -> U
    android.widget.TextView mLifetimeLongest -> V
    android.widget.TextView mLifetimeLongestDelta -> W
    java.util.List mRecords -> X
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void setupViews(android.view.View) -> a
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    int getLoaderId() -> M
    android.os.Bundle createLoaderArguments() -> N
    void onLoadFinished(android.support.v4.content.Loader,java.util.List) -> a
    void onDestroy() -> p
    void updateRecordView(android.content.Context,android.widget.TextView,com.dailystudio.memory.record.MemoryRecord) -> a
    void updateRecordDeltaView(android.content.Context,android.widget.TextView,com.dailystudio.memory.record.MemoryRecord,boolean) -> a
    java.lang.String getDefaultRecordString(android.content.Context) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
com.dailystudio.memory.boot.fragment.MonthsListFragment -> com.dailystudio.memory.boot.fragment.MonthsListFragment:
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    android.widget.BaseAdapter onCreateAdapter() -> G
    int getLoaderId() -> M
    android.os.Bundle createLoaderArguments() -> N
com.dailystudio.memory.boot.fragment.ScreenOnDistribChartFragment -> com.dailystudio.memory.boot.fragment.ScreenOnDistribChartFragment:
    android.view.ViewGroup mChartStub -> P
    int[] mFilterWeekDays -> Q
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void setupViews(android.view.View) -> b
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    int getLoaderId() -> M
    android.os.Bundle createLoaderArguments() -> N
    android.view.View getChart(java.lang.Object,java.lang.Object) -> a
    android.view.ViewGroup getChartHolder() -> C
    void bindIntent(android.content.Intent) -> b
com.dailystudio.memory.boot.fragment.ScreenOnListFragment -> com.dailystudio.memory.boot.fragment.ScreenOnListFragment:
    int[] mFilterWeekDays -> P
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    android.support.v4.widget.CursorAdapter onCreateAdapter() -> H
    int getLoaderId() -> M
    android.os.Bundle createLoaderArguments() -> N
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void bindIntent(android.content.Intent) -> b
    android.widget.BaseAdapter onCreateAdapter() -> G
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
com.dailystudio.memory.boot.fragment.UptimeTrendsChartFragment -> com.dailystudio.memory.boot.fragment.UptimeTrendsChartFragment:
    android.view.ViewGroup mChartStub -> P
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void setupViews(android.view.View) -> b
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    int getLoaderId() -> M
    android.os.Bundle createLoaderArguments() -> N
    android.view.View getChart(java.lang.Object,java.lang.Object) -> a
    android.view.ViewGroup getChartHolder() -> C
com.dailystudio.memory.boot.fragment.UptimeTrendsMonthChartFragment -> com.dailystudio.memory.boot.fragment.UptimeTrendsMonthChartFragment:
    android.view.ViewGroup mChartStub -> P
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void setupViews(android.view.View) -> b
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    int getLoaderId() -> M
    android.os.Bundle createLoaderArguments() -> N
    android.view.View getChart(java.lang.Object,java.lang.Object) -> a
    android.view.ViewGroup getChartHolder() -> C
com.dailystudio.memory.boot.loader.BootMonthsLoader -> com.dailystudio.memory.boot.a.a:
    java.lang.Class getObjectClass() -> y
    java.util.List loadInBackground() -> f
com.dailystudio.memory.boot.loader.BootRecordsLoader -> com.dailystudio.memory.boot.a.b:
    java.lang.Class getObjectClass() -> y
    com.dailystudio.dataobject.query.Query getQuery(java.lang.Class) -> b
com.dailystudio.memory.boot.loader.MemoryBootCountLoader -> com.dailystudio.memory.boot.a.c:
    java.lang.Class getObjectClass() -> y
    java.lang.Class getProjectionClass() -> x
    com.dailystudio.dataobject.query.Query getQuery(java.lang.Class) -> b
com.dailystudio.memory.boot.loader.MemoryBootLoader -> com.dailystudio.memory.boot.a.d:
    java.lang.Class getObjectClass() -> y
    com.dailystudio.dataobject.query.Query getQuery(java.lang.Class) -> b
com.dailystudio.memory.boot.loader.MemoryScreenOnLoader -> com.dailystudio.memory.boot.a.e:
    int[] mWeekdays -> v
    java.lang.Class getObjectClass() -> y
    com.dailystudio.dataobject.query.Query getQuery(java.lang.Class) -> b
com.dailystudio.memory.boot.loader.ScreenOnDistribChartLoader -> com.dailystudio.memory.boot.a.f:
    int[] mWeekdays -> h
    java.lang.ref.WeakReference mHostActivityRef -> i
    com.dailystudio.dataobject.query.Query getQuery(java.lang.Class) -> b
    java.lang.Class getObjectClass() -> y
    java.lang.Object createShareArguments() -> z
    java.util.List loadInBackground() -> f
    java.lang.Object buildDataset(java.util.List,java.lang.Object) -> a
    java.lang.Object buildRenderer(java.util.List,java.lang.Object) -> b
    void updateHostProgress(int) -> a
    void showPrompt() -> F
    void hidePrompt() -> G
    com.dailystudio.memory.activity.ActionBarActivity getHostActivity() -> H
com.dailystudio.memory.boot.loader.ScreenOnDistribChartLoader$SharedArguments -> com.dailystudio.memory.boot.a.g:
    long minDistribAvg -> d
    long maxDistribAvg -> e
    long minTime -> f
    long maxTime -> g
    long[] hourDistribSums -> a
    double[] hourDistribAvgs -> b
    com.dailystudio.memory.boot.loader.ScreenOnDistribChartLoader this$0 -> c
    void updateMinAndMaxTime(long) -> a
    void updateMinAndMaxDistribAvg(long) -> b
    java.lang.String toString() -> toString
    void access$1(com.dailystudio.memory.boot.loader.ScreenOnDistribChartLoader$SharedArguments,long) -> a
    long access$2(com.dailystudio.memory.boot.loader.ScreenOnDistribChartLoader$SharedArguments) -> a
    long access$3(com.dailystudio.memory.boot.loader.ScreenOnDistribChartLoader$SharedArguments) -> b
    void access$4(com.dailystudio.memory.boot.loader.ScreenOnDistribChartLoader$SharedArguments,long) -> b
com.dailystudio.memory.boot.loader.UptimeTrendsChartLoader -> com.dailystudio.memory.boot.a.h:
    com.dailystudio.dataobject.query.Query getQuery(java.lang.Class) -> b
    java.lang.Class getObjectClass() -> y
    java.lang.Class getProjectionClass() -> x
    java.lang.Object createShareArguments() -> z
    java.lang.Object buildDataset(java.util.List,java.lang.Object) -> a
    java.lang.Object buildRenderer(java.util.List,java.lang.Object) -> b
com.dailystudio.memory.boot.loader.UptimeTrendsChartLoader$SharedArguments -> com.dailystudio.memory.boot.a.i:
    long minTime -> b
    long maxTime -> c
    long minUptime -> d
    long maxUptime -> e
    long sumUptime -> f
    long cntUptime -> g
    com.dailystudio.memory.boot.loader.UptimeTrendsChartLoader this$0 -> a
    void updateMinAndMaxTime(long) -> a
    void updateMinAndMaxUptime(long) -> b
    void addSumUptime(long) -> c
    java.lang.String toString() -> toString
    void access$1(com.dailystudio.memory.boot.loader.UptimeTrendsChartLoader$SharedArguments,long) -> a
    void access$2(com.dailystudio.memory.boot.loader.UptimeTrendsChartLoader$SharedArguments,long) -> b
    void access$3(com.dailystudio.memory.boot.loader.UptimeTrendsChartLoader$SharedArguments,long) -> c
    long access$4(com.dailystudio.memory.boot.loader.UptimeTrendsChartLoader$SharedArguments) -> a
    long access$5(com.dailystudio.memory.boot.loader.UptimeTrendsChartLoader$SharedArguments) -> b
    long access$6(com.dailystudio.memory.boot.loader.UptimeTrendsChartLoader$SharedArguments) -> c
    long access$7(com.dailystudio.memory.boot.loader.UptimeTrendsChartLoader$SharedArguments) -> d
    long access$8(com.dailystudio.memory.boot.loader.UptimeTrendsChartLoader$SharedArguments) -> e
    long access$9(com.dailystudio.memory.boot.loader.UptimeTrendsChartLoader$SharedArguments) -> f
com.dailystudio.memory.boot.loader.UptimeTrendsMonthChartLoader -> com.dailystudio.memory.boot.a.j:
    com.dailystudio.dataobject.query.Query getQuery(java.lang.Class) -> b
    java.lang.Class getObjectClass() -> y
    java.lang.Object createShareArguments() -> z
    java.lang.Object buildDataset(java.util.List,java.lang.Object) -> a
    java.lang.Object buildRenderer(java.util.List,java.lang.Object) -> b
com.dailystudio.memory.boot.loader.UptimeTrendsMonthChartLoader$SharedArguments -> com.dailystudio.memory.boot.a.k:
    long minTime -> b
    long maxTime -> c
    long minUptime -> d
    long maxUptime -> e
    long sumUptime -> f
    long cntUptime -> g
    java.util.List dayStarts -> h
    java.util.HashMap daySumUptime -> i
    java.util.HashMap dayCntUptime -> j
    com.dailystudio.memory.boot.loader.UptimeTrendsMonthChartLoader this$0 -> a
    void updateMinAndMaxTime(long) -> a
    void updateMinAndMaxUptime(long) -> b
    void addSumUptime(long) -> c
    void groupInDay(long,long) -> a
    java.lang.String toString() -> toString
    void access$1(com.dailystudio.memory.boot.loader.UptimeTrendsMonthChartLoader$SharedArguments,long) -> a
    void access$2(com.dailystudio.memory.boot.loader.UptimeTrendsMonthChartLoader$SharedArguments,long) -> b
    void access$3(com.dailystudio.memory.boot.loader.UptimeTrendsMonthChartLoader$SharedArguments,long) -> c
    void access$4(com.dailystudio.memory.boot.loader.UptimeTrendsMonthChartLoader$SharedArguments,long) -> d
    long access$5(com.dailystudio.memory.boot.loader.UptimeTrendsMonthChartLoader$SharedArguments) -> a
    void access$6(com.dailystudio.memory.boot.loader.UptimeTrendsMonthChartLoader$SharedArguments,long) -> e
    long access$7(com.dailystudio.memory.boot.loader.UptimeTrendsMonthChartLoader$SharedArguments) -> b
    long access$8(com.dailystudio.memory.boot.loader.UptimeTrendsMonthChartLoader$SharedArguments) -> c
    long access$9(com.dailystudio.memory.boot.loader.UptimeTrendsMonthChartLoader$SharedArguments) -> d
    long access$10(com.dailystudio.memory.boot.loader.UptimeTrendsMonthChartLoader$SharedArguments) -> e
    java.util.List access$11(com.dailystudio.memory.boot.loader.UptimeTrendsMonthChartLoader$SharedArguments) -> f
    java.util.HashMap access$12(com.dailystudio.memory.boot.loader.UptimeTrendsMonthChartLoader$SharedArguments) -> g
    java.util.HashMap access$13(com.dailystudio.memory.boot.loader.UptimeTrendsMonthChartLoader$SharedArguments) -> h
    long access$14(com.dailystudio.memory.boot.loader.UptimeTrendsMonthChartLoader$SharedArguments) -> i
com.dailystudio.memory.boot.record.MemoryBootRecordDatabaseModal -> com.dailystudio.memory.boot.record.MemoryBootRecordDatabaseModal:
    boolean isBreakingFastestUptimeRecord(android.content.Context,long) -> a
    boolean isBreakingSlowestUptimeRecord(android.content.Context,long) -> b
    com.dailystudio.memory.boot.record.MemoryBootRecordDatabaseModal$MaxAndMinBootupTime getMaxAndMinBootupTime(android.content.Context) -> a
    boolean isBreakingShortestLifetimeRecord(android.content.Context,long) -> c
    boolean isBreakingLongestLifetimeRecord(android.content.Context,long) -> d
    com.dailystudio.memory.boot.record.MemoryBootRecordDatabaseModal$MaxAndMinLifeTime getMaxAndMinLifetime(android.content.Context) -> b
    void checkAndUpdateRecordsBreaking(android.content.Context) -> c
    void checkAndUpdateUptimeRecordsBreaking(android.content.Context,long) -> e
    void checkAndUpdateLifetimeRecordsBreaking(android.content.Context,long) -> f
com.dailystudio.memory.boot.record.MemoryBootRecordDatabaseModal$MaxAndMinBootupTime -> com.dailystudio.memory.boot.record.MemoryBootRecordDatabaseModal$MaxAndMinBootupTime:
    com.dailystudio.dataobject.LongColumn COLUMN_MIN_BOOTUP -> a
    com.dailystudio.dataobject.LongColumn COLUMN_MAX_BOOTUP -> b
    com.dailystudio.dataobject.Column[] sColumns -> f
    long getMinimumBootup() -> a
    long getMaximumBootup() -> h
    java.lang.String toString() -> toString
com.dailystudio.memory.boot.record.MemoryBootRecordDatabaseModal$MaxAndMinLifeTime -> com.dailystudio.memory.boot.record.MemoryBootRecordDatabaseModal$MaxAndMinLifeTime:
    com.dailystudio.dataobject.LongColumn COLUMN_MIN_LIFETIME -> a
    com.dailystudio.dataobject.LongColumn COLUMN_MAX_LIFETIME -> b
    com.dailystudio.dataobject.Column[] sColumns -> f
    long getMinimumLifetime() -> a
    long getMaximumLifetime() -> h
    java.lang.String toString() -> toString
com.dailystudio.memory.boot.ui.MemoryBootAdapter -> com.dailystudio.memory.boot.b.a:
    android.view.View getExpandView(android.view.View) -> a
    void bindExpandedView(android.view.View,android.content.Context,android.database.Cursor) -> b
    void bindCollapsedView(android.view.View,android.content.Context,android.database.Cursor) -> c
com.dailystudio.memory.boot.ui.MemoryScreenOnAdapter -> com.dailystudio.memory.boot.b.b:
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> a
com.dailystudio.memory.boot.ui.MonthsAdatper -> com.dailystudio.memory.boot.b.c:
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.dailystudio.memory.chart.ChartUtils -> com.dailystudio.memory.b.a:
    void applyDefaulChartStyle(android.content.Context,org.achartengine.renderer.DefaultRenderer) -> a
    void applyDefaulChartStyle(android.content.Context,org.achartengine.renderer.XYMultipleSeriesRenderer) -> a
    int getColorResource(android.content.Context,int) -> a
com.dailystudio.memory.core.R -> com.dailystudio.memory.core.R:
com.dailystudio.memory.core.R$drawable -> com.dailystudio.memory.core.R$drawable:
    int ic_launcher -> ic_launcher
    int icon -> icon
com.dailystudio.memory.core.R$string -> com.dailystudio.memory.core.R$string:
    int app_name -> app_name
    int build_device -> build_device
    int build_manufacture -> build_manufacture
    int build_platform -> build_platform
com.dailystudio.memory.core.R$style -> com.dailystudio.memory.core.R$style:
    int AppTheme -> AppTheme
com.dailystudio.memory.database.MemoryPluginActivityCategoryObject -> com.dailystudio.memory.database.MemoryPluginActivityCategoryObject:
    com.dailystudio.dataobject.Column COLUMN_CATEGORY -> a
    com.dailystudio.dataobject.Column[] sCloumns -> b
    java.lang.String getCategory() -> a
    void setCategory(java.lang.String) -> a
    java.lang.String toString() -> toString
com.dailystudio.memory.database.MemoryPluginActivityObject -> com.dailystudio.memory.database.MemoryPluginActivityObject:
    com.dailystudio.dataobject.Column COLUMN_CATEGORY -> a
    com.dailystudio.dataobject.Column[] sCloumns -> j
    java.lang.String getCategory() -> a
    void setCategory(java.lang.String) -> a
    java.lang.String toString() -> toString
com.dailystudio.memory.database.MemoryPluginDatabaseModal -> com.dailystudio.memory.database.a:
    com.dailystudio.memory.database.MemoryPluginObject addOrUpdatePlugin(android.content.Context,com.dailystudio.memory.plugin.MemoryPluginInfo) -> a
    java.util.Set listExistedPluginsInPackage(android.content.Context,java.lang.String) -> a
    com.dailystudio.memory.database.MemoryPluginObject findPlugin(android.content.Context,com.dailystudio.memory.plugin.MemoryPluginInfo) -> b
    void removePlugins(android.content.Context,java.util.Set) -> a
    com.dailystudio.memory.database.MemoryPluginActivityObject addOrUpdatePluginActivity(android.content.Context,android.content.pm.ResolveInfo) -> a
    java.util.List listActivitiesInPackage(android.content.Context,java.lang.String) -> b
    java.util.Set listExistedActivitiesInPackage(android.content.Context,java.lang.String) -> c
    java.util.List listActivitiesInCategory(android.content.Context,java.lang.String) -> d
    void removeActivities(android.content.Context,java.util.Set) -> b
    void addOrUpdatePluginActivityCategory(android.content.Context,com.dailystudio.memory.database.MemoryPluginActivityCategoryObject) -> a
    java.util.List listActivityCategoriesInPackage(android.content.Context,java.lang.String) -> e
    java.util.Set listExistedActivityCategoriesInPackage(android.content.Context,java.lang.String) -> f
    void removeActivitCategories(android.content.Context,java.util.Set) -> c
    com.dailystudio.memory.database.MemoryPluginActivityObject findPluginActivity(android.content.Context,android.content.pm.ResolveInfo) -> b
    com.dailystudio.memory.database.MemoryPluginActivityObject findPluginActivity(android.content.Context,android.content.ComponentName) -> a
    com.dailystudio.memory.database.MemoryPluginActivityObject createPluginActivityObject(android.content.Context,android.content.pm.ResolveInfo) -> c
    void updatePluginActivityObject(android.content.Context,com.dailystudio.memory.database.MemoryPluginActivityObject,android.content.pm.ResolveInfo) -> a
    android.content.ComponentName toComponentName(android.content.pm.ResolveInfo) -> a
    com.dailystudio.memory.database.MemoryPluginActivityCategoryObject findPluginActivityCategory(android.content.Context,java.lang.String,java.lang.String) -> b
    com.dailystudio.memory.database.MemoryPluginActivityCategoryObject createDefaultCategory(android.content.Context) -> a
    com.dailystudio.memory.database.MemoryPluginActivityCategoryObject createPluginActivityCategory(android.content.Context,android.content.pm.ResolveInfo) -> d
    void increaseActivityCategoryUsageCount(android.content.Context,java.lang.String,java.lang.String) -> a
    void increaseActivityUsageCount(android.content.Context,android.content.ComponentName) -> b
com.dailystudio.memory.database.MemoryPluginObject -> com.dailystudio.memory.database.MemoryPluginObject:
    com.dailystudio.dataobject.Column COLUMN_COMPONENT -> b
    com.dailystudio.dataobject.Column[] sCloumns -> a
    java.lang.String getComponent() -> h
    void setComponent(java.lang.String) -> b
    java.lang.String toString() -> toString
com.dailystudio.memory.database.MemoryResouceObject -> com.dailystudio.memory.database.MemoryResouceObject:
    com.dailystudio.dataobject.Column COLUMN_LABEL -> f
    com.dailystudio.dataobject.Column COLUMN_ICON -> g
    com.dailystudio.dataobject.Column COLUMN_PACKAGE -> h
    com.dailystudio.dataobject.Column[] sCloumns -> a
    java.lang.String getLabel() -> i
    void setLabel(java.lang.String) -> c
    int getIcon() -> j
    void setIcon(int) -> a
    java.lang.String getIconIdentifier() -> k
    java.lang.String getPackage() -> l
    void setPakcage(java.lang.String) -> d
    java.lang.String toString() -> toString
com.dailystudio.memory.database.MemoryUsageCountObject -> com.dailystudio.memory.database.MemoryUsageCountObject:
    com.dailystudio.dataobject.Column COLUMN_USAGE_COUNT -> i
    com.dailystudio.dataobject.Column[] sCloumns -> a
    long getUsageCount() -> m
    void setUsageCount(long) -> a
    java.lang.String toString() -> toString
com.dailystudio.memory.database.loader.MainPageShortcutsLoader -> com.dailystudio.memory.database.a.a:
    java.util.List loadInBackground() -> f
    java.util.List findMainPageShortcuts(android.content.pm.PackageManager) -> a
    java.lang.Object loadInBackground() -> d
com.dailystudio.memory.database.loader.MemorySearchCursorLoader -> com.dailystudio.memory.database.a.b:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> u
    java.lang.ref.WeakReference mHostActivityRef -> v
    java.lang.String mQueryInput -> w
    java.lang.String mQueryAuthority -> x
    android.database.Cursor loadInBackground() -> f
    com.dailystudio.memory.searchable.MemorySearchableQuery buildQuery() -> x
    com.dailystudio.memory.searchable.MemorySearchableQuery analyzeInputs(java.lang.String) -> a
    void fillPluginsContent(android.database.MatrixCursor,com.dailystudio.memory.searchable.MemorySearchableQuery) -> a
    void updateProgress(float) -> a
    com.dailystudio.memory.activity.ActionBarActivity getHostActivity() -> y
    void showPrompt(int) -> a
    void showPrompt(java.lang.CharSequence) -> a
    void hidePrompt() -> z
com.dailystudio.memory.database.loader.PluginActivityLoader -> com.dailystudio.memory.database.a.c:
    java.lang.String mCategory -> v
    java.lang.Class getObjectClass() -> y
    com.dailystudio.dataobject.query.Query getQuery(java.lang.Class) -> b
com.dailystudio.memory.database.loader.PluginCategoryLoader -> com.dailystudio.memory.database.a.d:
    java.lang.Class getObjectClass() -> y
    com.dailystudio.dataobject.query.Query getQuery(java.lang.Class) -> b
com.dailystudio.memory.database.loader.ShowcasePagesLoader -> com.dailystudio.memory.database.a.e:
    java.util.List loadInBackground() -> f
    java.lang.Object loadInBackground() -> d
com.dailystudio.memory.database.loader.StatisticsLifetimeLoader -> com.dailystudio.memory.database.a.f:
    com.dailystudio.memory.dataobject.MemoryObject loadInBackground() -> f
    java.lang.Object loadInBackground() -> d
com.dailystudio.memory.database.loader.StatisticsPiecesLoader -> com.dailystudio.memory.database.a.g:
    com.dailystudio.app.dataobject.CountObject loadInBackground() -> f
    java.lang.Object loadInBackground() -> d
com.dailystudio.memory.database.loader.UncommittedAchievementLoader -> com.dailystudio.memory.database.a.h:
    java.lang.Class getObjectClass() -> y
com.dailystudio.memory.database.loader.UncommittedLeaderboardScoreLoader -> com.dailystudio.memory.database.a.i:
    java.lang.Class getObjectClass() -> y
com.dailystudio.memory.dataobject.DateGroupObject -> com.dailystudio.memory.dataobject.DateGroupObject:
com.dailystudio.memory.dataobject.MemoryDatabaseReader -> com.dailystudio.memory.dataobject.a:
    com.dailystudio.memory.dataobject.MemoryObject queryLastOne() -> c
    com.dailystudio.memory.dataobject.MemoryObject queryLastOne(com.dailystudio.dataobject.query.Query) -> d
    com.dailystudio.dataobject.DatabaseObject queryLastOne(com.dailystudio.dataobject.query.Query) -> b
    com.dailystudio.dataobject.query.Query getQuery() -> b
com.dailystudio.memory.dataobject.MemoryDatabaseWriter -> com.dailystudio.memory.dataobject.b:
    int update(com.dailystudio.memory.dataobject.MemoryObject) -> a
    int delete(com.dailystudio.memory.dataobject.MemoryObject) -> b
    com.dailystudio.dataobject.query.Query getQuery() -> b
com.dailystudio.memory.dataobject.MemoryObject -> com.dailystudio.memory.dataobject.MemoryObject:
    com.dailystudio.dataobject.Column COLUMN_ID -> l
    com.dailystudio.dataobject.TimeColumn COLUMN_TIME -> m
    com.dailystudio.dataobject.Column[] sColumns -> a
    int getId() -> q
    void setTime(long) -> d
    long getTime() -> r
    java.lang.String toString() -> toString
com.dailystudio.memory.dataobject.MemoryQueryBuilder -> com.dailystudio.memory.dataobject.c:
    com.dailystudio.dataobject.query.Query getQuery(long,long) -> a
    com.dailystudio.dataobject.query.Query getQuery(long,long,boolean) -> a
com.dailystudio.memory.dataobject.MonthObject -> com.dailystudio.memory.dataobject.MonthObject:
    com.dailystudio.dataobject.Column COLUMN_MONTH -> a
    int getMonth() -> a
    java.lang.String toString() -> toString
com.dailystudio.memory.dataobject.WeekObject -> com.dailystudio.memory.dataobject.WeekObject:
    com.dailystudio.dataobject.Column COLUMN_WEEK_NUM -> a
    int getWeekNumber() -> a
    java.lang.String toString() -> toString
com.dailystudio.memory.dataobject.WeekdayObject -> com.dailystudio.memory.dataobject.WeekdayObject:
    com.dailystudio.dataobject.Column COLUMN_WEEKDAY -> a
    int getWeekday() -> a
    java.lang.String toString() -> toString
com.dailystudio.memory.datetime.DaysFilter -> com.dailystudio.memory.c.a:
    int[] FILTER_WEEKDAYS -> a
    int[] FILTER_WEEKENDS -> b
com.dailystudio.memory.fragment.AboutFragment -> com.dailystudio.memory.fragment.AboutFragment:
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void setupViews(android.view.View) -> a
com.dailystudio.memory.fragment.AbsMemoryListFragment -> com.dailystudio.memory.fragment.a:
    void onActivityCreated(android.os.Bundle) -> d
    void bindIntent(android.content.Intent) -> b
    void onNewIntent(android.content.Intent) -> a
    void bindAdapterView() -> D
    void onDestroy() -> p
    com.dailystudio.dataobject.DatabaseObject dumpObject(android.database.Cursor) -> b
com.dailystudio.memory.fragment.AbsResObjectListFragment -> com.dailystudio.memory.fragment.b:
    com.dailystudio.memory.fragment.AbsResObjectListFragment$ResolveResourcesAsyncTask mResolveAsyncTask -> P
    int mNotifyBatchSize -> Q
    boolean mResolveProgressEnabled -> R
    java.util.Comparator sDefaultResComparator -> S
    void onDestroy() -> p
    void onLoadFinished(android.support.v4.content.Loader,java.util.List) -> a
    void setResolveProgressEnabled(boolean) -> d
    boolean isResolveProgressEnabled() -> O
    int getResolveStartProgress() -> P
    java.util.Comparator getComparator() -> J
    int access$0(com.dailystudio.memory.fragment.AbsResObjectListFragment) -> a
    void access$1(com.dailystudio.memory.fragment.AbsResObjectListFragment) -> b
    void access$2(com.dailystudio.memory.fragment.AbsResObjectListFragment) -> c
com.dailystudio.memory.fragment.AbsResObjectListFragment$ResolveResourcesAsyncTask -> com.dailystudio.memory.fragment.c:
    boolean mEndFlags -> c
    com.dailystudio.memory.fragment.AbsResObjectListFragment this$0 -> b
    java.lang.Integer doInBackground(java.util.List[]) -> a
    void updateProgress(int,int) -> a
    void resetProgress() -> b
    void cancel() -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> a
com.dailystudio.memory.fragment.AbsStatisticsFragment -> com.dailystudio.memory.fragment.d:
    com.dailystudio.memory.fragment.AbsStatisticsFragment$StatisticCallbacks mStatisticCallbacks -> P
    void notifyStatisticBegin() -> C
    void notifyStatisticEnd() -> D
    void setStatisticCallbacks(com.dailystudio.memory.fragment.AbsStatisticsFragment$StatisticCallbacks) -> a
    java.lang.String getStatisticToken() -> E
com.dailystudio.memory.fragment.AbsStatisticsFragment$StatisticCallbacks -> com.dailystudio.memory.fragment.e:
    void onStatisticBegin(java.lang.String) -> a
    void onStatisticEnd(java.lang.String) -> b
com.dailystudio.memory.fragment.AdmobFragment -> com.dailystudio.memory.fragment.AdmobFragment:
    com.google.android.gms.ads.AdView mAdmobView -> P
    com.dailystudio.app.widget.DeferredHandler mHandler -> Q
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void setupViews(android.view.View) -> a
    void onDestroy() -> p
    void requestAd() -> C
    void destoryAd() -> D
    void access$0(com.dailystudio.memory.fragment.AdmobFragment) -> a
com.dailystudio.memory.fragment.AdmobFragment$1 -> com.dailystudio.memory.fragment.f:
    com.dailystudio.memory.fragment.AdmobFragment this$0 -> a
    void run() -> run
com.dailystudio.memory.fragment.MainPageShortcutsFragment -> com.dailystudio.memory.fragment.MainPageShortcutsFragment:
    java.util.Observer mAppObserver -> P
    void onActivityCreated(android.os.Bundle) -> d
    void onDestroy() -> p
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void setupViews(android.view.View) -> a
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    android.widget.BaseAdapter onCreateAdapter() -> G
    int getLoaderId() -> M
    android.os.Bundle createLoaderArguments() -> N
    void initObservables() -> Q
    void clearObservables() -> R
com.dailystudio.memory.fragment.MainPageShortcutsFragment$1 -> com.dailystudio.memory.fragment.g:
    com.dailystudio.memory.fragment.MainPageShortcutsFragment this$0 -> a
    void update(java.util.Observable,java.lang.Object) -> update
com.dailystudio.memory.fragment.MemoryChartFragment -> com.dailystudio.memory.fragment.h:
    android.view.View mEmptyView -> P
    boolean mOldEmpty -> Q
    void onActivityCreated(android.os.Bundle) -> d
    void bindEmptyView() -> D
    void setEmptyView(android.view.View) -> a
    void updateEmptyStatus(boolean) -> d
    void onLoadFinished(android.support.v4.content.Loader,java.util.List) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
    android.view.View getChart(java.lang.Object,java.lang.Object) -> a
    android.view.ViewGroup getChartHolder() -> C
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
com.dailystudio.memory.fragment.MemoryPeroidChartFragment -> com.dailystudio.memory.fragment.i:
    long mPeroidStart -> P
    long mPeroidEnd -> Q
    void bindIntent(android.content.Intent) -> b
    long getPeroidStart() -> E
    long getPeroidEnd() -> F
com.dailystudio.memory.fragment.MemoryPeroidCursorListFragment -> com.dailystudio.memory.fragment.j:
    long mPeroidStart -> P
    long mPeroidEnd -> Q
    void bindIntent(android.content.Intent) -> b
    long getPeroidStart() -> I
    long getPeroidEnd() -> J
com.dailystudio.memory.fragment.MemoryPeroidObjectsListFragment -> com.dailystudio.memory.fragment.k:
    long mPeroidStart -> P
    long mPeroidEnd -> Q
    void bindIntent(android.content.Intent) -> b
com.dailystudio.memory.fragment.PluginActivityCategoryListFragment -> com.dailystudio.memory.fragment.PluginActivityCategoryListFragment:
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    android.support.v4.widget.CursorAdapter onCreateAdapter() -> H
    int getLoaderId() -> M
    android.os.Bundle createLoaderArguments() -> N
    android.widget.BaseAdapter onCreateAdapter() -> G
com.dailystudio.memory.fragment.PluginActivityListFragment -> com.dailystudio.memory.fragment.PluginActivityListFragment:
    java.lang.String mActivitiesCategory -> P
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void bindIntent(android.content.Intent) -> b
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    android.support.v4.widget.CursorAdapter onCreateAdapter() -> H
    int getLoaderId() -> M
    android.os.Bundle createLoaderArguments() -> N
    android.widget.BaseAdapter onCreateAdapter() -> G
com.dailystudio.memory.fragment.PrivacyPolicyFragment -> com.dailystudio.memory.fragment.PrivacyPolicyFragment:
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void setupViews(android.view.View) -> a
com.dailystudio.memory.fragment.PromoteAppsFragment -> com.dailystudio.memory.fragment.PromoteAppsFragment:
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void setupViews(android.view.View) -> a
com.dailystudio.memory.fragment.SearchResultsListFragment -> com.dailystudio.memory.fragment.SearchResultsListFragment:
    java.lang.String mQueryInput -> P
    java.lang.String mQueryAuthority -> Q
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void setupViews(android.view.View) -> a
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    android.widget.BaseAdapter onCreateAdapter() -> G
    int getLoaderId() -> M
    android.os.Bundle createLoaderArguments() -> N
    void bindAdapterView() -> D
    void onDestroy() -> p
    void doSearchForInput(java.lang.String,java.lang.String) -> a
com.dailystudio.memory.fragment.ShowcaseFragment -> com.dailystudio.memory.fragment.l:
    java.lang.String mShowcasePackage -> P
    android.net.Uri mShowcaseUri -> Q
    android.webkit.WebView mWebView -> R
    android.content.BroadcastReceiver mShowcaseUpdateReceiver -> S
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onDestroy() -> p
    void setupViews(android.view.View) -> a
    void refreshShowcase() -> C
    void startWatchShowcaseChanges() -> D
    void stopWatchShowcaseChanges() -> E
    android.support.v4.app.Fragment newInstance(android.content.Context,com.dailystudio.memory.ui.ShowcasePage) -> a
    java.lang.String access$0(com.dailystudio.memory.fragment.ShowcaseFragment) -> a
    void access$1(com.dailystudio.memory.fragment.ShowcaseFragment) -> b
com.dailystudio.memory.fragment.ShowcaseFragment$1 -> com.dailystudio.memory.fragment.m:
    com.dailystudio.memory.fragment.ShowcaseFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.dailystudio.memory.fragment.ShowcasePagerFragment -> com.dailystudio.memory.fragment.ShowcasePagerFragment:
    android.support.v4.view.ViewPager mViewPager -> P
    com.dailystudio.memory.ui.ShowcasePageAdapter mAdapter -> Q
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void setupViews(android.view.View) -> a
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.util.List) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
    int getLoaderId() -> M
    android.os.Bundle createLoaderArguments() -> N
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
com.dailystudio.memory.fragment.SliderLifeTimeFragment -> com.dailystudio.memory.fragment.SliderLifeTimeFragment:
    android.widget.TextView mLifetimeValue -> P
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void setupViews(android.view.View) -> a
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    int getLoaderId() -> M
    android.os.Bundle createLoaderArguments() -> N
    void onLoadFinished(android.support.v4.content.Loader,com.dailystudio.memory.dataobject.MemoryObject) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
    void setDay(long) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
com.dailystudio.memory.fragment.StatisticsLifeTimeFragment -> com.dailystudio.memory.fragment.StatisticsLifeTimeFragment:
    com.dailystudio.memory.ui.DurationCountView mLifetimeValue -> P
    com.dailystudio.memory.ui.DurationCountView$OnCountDurationListener mOnCountDurationListener -> Q
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void setupViews(android.view.View) -> a
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    int getLoaderId() -> M
    android.os.Bundle createLoaderArguments() -> N
    void onLoadFinished(android.support.v4.content.Loader,com.dailystudio.memory.dataobject.MemoryObject) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
    java.lang.String getStatisticToken() -> E
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
com.dailystudio.memory.fragment.StatisticsLifeTimeFragment$1 -> com.dailystudio.memory.fragment.n:
    com.dailystudio.memory.fragment.StatisticsLifeTimeFragment this$0 -> a
    void onCountDurationStart(com.dailystudio.memory.ui.DurationCountView,long) -> a
    void onCountDurationFinished(com.dailystudio.memory.ui.DurationCountView,long) -> b
com.dailystudio.memory.fragment.StatisticsPiecesFragment -> com.dailystudio.memory.fragment.StatisticsPiecesFragment:
    com.dailystudio.memory.ui.CountView mPiecesValue -> P
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void setupViews(android.view.View) -> a
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    int getLoaderId() -> M
    android.os.Bundle createLoaderArguments() -> N
    void onLoadFinished(android.support.v4.content.Loader,com.dailystudio.app.dataobject.CountObject) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
    java.lang.String getStatisticToken() -> E
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
com.dailystudio.memory.fragment.StatisticsPiecesFragment$1 -> com.dailystudio.memory.fragment.o:
    com.dailystudio.memory.fragment.StatisticsPiecesFragment this$0 -> a
    void onCountStart(com.dailystudio.memory.ui.CountView,long) -> a
    void onCountFinished(com.dailystudio.memory.ui.CountView,long) -> b
    void onCountAbort(com.dailystudio.memory.ui.CountView,long) -> c
com.dailystudio.memory.game.BaseGameActivity -> com.dailystudio.memory.game.a:
    com.dailystudio.memory.game.GameHelper mHelper -> A
    int mRequestedClients -> B
    java.lang.String[] mAdditionalScopes -> E
    java.lang.String mDebugTag -> C
    boolean mDebugLog -> D
    void setRequestedClients(int,java.lang.String[]) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onStop() -> onStop
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    com.google.android.gms.games.GamesClient getGamesClient() -> u
    boolean isSignedIn() -> v
    void beginUserInitiatedSignIn() -> w
    void signOut() -> x
    void showAlert(java.lang.String) -> b
com.dailystudio.memory.game.DesEncrypter -> com.dailystudio.memory.game.b:
    byte[] iv -> a
    byte[] salt -> b
    byte[] encrypt(java.lang.String,java.lang.String) -> a
    java.lang.String decrypt(java.lang.String,byte[]) -> a
com.dailystudio.memory.game.EncryptedMemoryObject -> com.dailystudio.memory.game.EncryptedMemoryObject:
    com.dailystudio.memory.game.DesEncrypter sDesEncrypter -> a
    java.lang.String sEncrypterSeed -> b
    java.lang.String byteArrayToHex(byte[]) -> a
    java.lang.String getEncryptPassword() -> a
    void setEncryptPassword(java.lang.String) -> a
    byte[] encryptString(java.lang.String) -> b
    java.lang.String decryptString(byte[]) -> b
com.dailystudio.memory.game.GameHelper -> com.dailystudio.memory.game.c:
    java.lang.String[] STATE_NAMES -> a
    int mState -> b
    boolean mExpectingResolution -> c
    android.app.Activity mActivity -> d
    java.lang.String[] mScopes -> e
    com.google.android.gms.games.GamesClient mGamesClient -> f
    com.google.android.gms.plus.PlusClient mPlusClient -> g
    com.google.android.gms.appstate.AppStateClient mAppStateClient -> h
    int mRequestedClients -> i
    int mConnectedClients -> j
    int mClientCurrentlyConnecting -> k
    boolean mAutoSignIn -> l
    boolean mUserInitiatedSignIn -> m
    com.google.android.gms.common.ConnectionResult mConnectionResult -> n
    com.dailystudio.memory.game.GameHelper$SignInFailureReason mSignInFailureReason -> o
    boolean mDebugLog -> p
    java.lang.String mDebugTag -> q
    java.lang.String mInvitationId -> r
    com.dailystudio.memory.game.GameHelper$GameHelperListener mListener -> s
    boolean checkState(int,java.lang.String,java.lang.String,int[]) -> a
    void assertConfigured(java.lang.String) -> a
    void setup(com.dailystudio.memory.game.GameHelper$GameHelperListener,int,java.lang.String[]) -> a
    void setState(int) -> a
    com.google.android.gms.games.GamesClient getGamesClient() -> a
    boolean isSignedIn() -> b
    void onStart(android.app.Activity) -> a
    void onStop() -> c
    void showAlert(java.lang.String) -> b
    void enableDebugLog(boolean,java.lang.String) -> a
    void signOut() -> d
    void killConnections() -> e
    java.lang.String activityResponseCodeToString(int) -> b
    void onActivityResult(int,int,android.content.Intent) -> a
    void notifyListener(boolean) -> a
    void beginUserInitiatedSignIn() -> f
    android.content.Context getContext() -> g
    void startConnections() -> h
    void connectNextClient() -> i
    void connectCurrentClient() -> j
    void onConnected(android.os.Bundle) -> a
    void succeedSignIn() -> k
    void onConnectionFailed(com.google.android.gms.common.ConnectionResult) -> a
    void resolveConnectionResult() -> l
    void giveUp(com.dailystudio.memory.game.GameHelper$SignInFailureReason) -> a
    void onDisconnected() -> m
    void showFailureDialog() -> n
    android.app.Dialog makeSimpleDialog(java.lang.String) -> c
    void debugLog(java.lang.String) -> d
    void logWarn(java.lang.String) -> e
    void logError(java.lang.String) -> f
    java.lang.String errorCodeToString(int) -> c
    void printMisconfiguredDebugInfo() -> o
    java.lang.String getAppIdFromResource() -> p
    java.lang.String getSHA1CertFingerprint() -> q
    void byteToString(java.lang.StringBuilder,byte) -> a
com.dailystudio.memory.game.GameHelper$GameHelperListener -> com.dailystudio.memory.game.d:
    void onSignInFailed() -> d_
    void onSignInSucceeded() -> n
com.dailystudio.memory.game.GameHelper$SignInFailureReason -> com.dailystudio.memory.game.e:
    int mServiceErrorCode -> a
    int mActivityResultCode -> b
    int getServiceErrorCode() -> a
    int getActivityResultCode() -> b
    java.lang.String toString() -> toString
com.dailystudio.memory.game.LoginFragment -> com.dailystudio.memory.game.f:
    com.dailystudio.memory.game.LoginFragment$Listener mListener -> P
    boolean mShowSignIn -> Q
    android.net.Uri mPlayerIconUri -> R
    com.google.android.gms.common.images.ImageManager mImageManager -> S
    android.widget.ImageView mPlayerIconView -> T
    android.widget.TextView mPlayerNameView -> U
    void onActivityCreated(android.os.Bundle) -> d
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onStart() -> k
    void setListener(com.dailystudio.memory.game.LoginFragment$Listener) -> a
    void updateUi() -> C
    void onClick(android.view.View) -> onClick
    void setShowSignInButton(boolean) -> d
    void setPlayerInfo(com.google.android.gms.games.Player) -> a
com.dailystudio.memory.game.LoginFragment$Listener -> com.dailystudio.memory.game.g:
    void onSignInButtonClicked() -> a
    void onSignOutButtonClicked() -> b
    void onShowAchievementsRequested() -> c
    void onShowLeaderBoardsRequested() -> d
com.dailystudio.memory.game.MemoryGameActivity -> com.dailystudio.memory.game.h:
    android.graphics.Rect mHitRect -> E
    java.lang.Object mAutoHideLock -> F
    boolean mAutoHideLoginFragment -> G
    android.widget.ImageView mArchievementButton -> H
    com.google.android.gms.games.Player mPlayer -> I
    java.lang.Runnable mShowLoginFragmentRunnable -> J
    java.lang.Runnable mHideRunnable -> K
    android.os.Handler mHandler -> L
    void onCreate(android.os.Bundle) -> onCreate
    com.dailystudio.memory.game.LoginFragment initLoginFragment() -> l
    void setupLoginFragment(com.dailystudio.memory.game.LoginFragment) -> a
    void setupActionBar() -> o
    void signOut() -> x
    void onSignOut() -> y
    void onSignInFailed() -> d_
    void onSignInSucceeded() -> n
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    void toggleLoginFragment() -> p
    void showLoginFragment() -> z
    void hideLoginFragment() -> A
    com.dailystudio.memory.game.LoginFragment findLoginFragment() -> B
    void access$0(com.dailystudio.memory.game.MemoryGameActivity) -> a
    void access$1(com.dailystudio.memory.game.MemoryGameActivity) -> b
    com.dailystudio.memory.game.LoginFragment access$2(com.dailystudio.memory.game.MemoryGameActivity) -> c
    java.lang.Object access$3(com.dailystudio.memory.game.MemoryGameActivity) -> d
    void access$4(com.dailystudio.memory.game.MemoryGameActivity,boolean) -> a
    void access$5(com.dailystudio.memory.game.MemoryGameActivity) -> e
com.dailystudio.memory.game.MemoryGameActivity$1 -> com.dailystudio.memory.game.i:
    com.dailystudio.memory.game.MemoryGameActivity this$0 -> a
    void run() -> run
com.dailystudio.memory.game.MemoryGameActivity$2 -> com.dailystudio.memory.game.j:
    com.dailystudio.memory.game.MemoryGameActivity this$0 -> a
    void run() -> run
com.dailystudio.memory.game.MemoryGameActivity$3 -> com.dailystudio.memory.game.k:
    com.dailystudio.memory.game.MemoryGameActivity this$0 -> a
    void onSignOutButtonClicked() -> b
    void onSignInButtonClicked() -> a
    void onShowAchievementsRequested() -> c
    void onShowLeaderBoardsRequested() -> d
com.dailystudio.memory.game.MemoryGameActivity$4 -> com.dailystudio.memory.game.l:
    com.dailystudio.memory.game.MemoryGameActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dailystudio.memory.game.MemoryGameService -> com.dailystudio.memory.game.MemoryGameService:
    android.os.Looper mServiceLooper -> a
    com.dailystudio.memory.game.MemoryGameService$ServiceHandler mServiceHandler -> b
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void transferIntent(android.content.Intent) -> a
com.dailystudio.memory.game.MemoryGameService$ServiceHandler -> com.dailystudio.memory.game.m:
    com.dailystudio.memory.game.MemoryGameService this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
    void handleIntent(android.content.Intent) -> a
    void saveAsUncommittedUnlockAchievement(android.content.Context,java.lang.String) -> a
    void saveAsUncommittedIncrementAchievement(android.content.Context,java.lang.String,int) -> a
    void saveAsUncommittedLeaderboardScore(android.content.Context,java.lang.String,long) -> a
com.dailystudio.memory.game.MemoryGameUtils -> com.dailystudio.memory.game.n:
    void unlockAchievement(android.content.Context,java.lang.String) -> a
    void incrementAchievement(android.content.Context,java.lang.String,int) -> a
    void submitLeaderboardScore(android.content.Context,java.lang.String,long) -> a
com.dailystudio.memory.game.MemoryGdxGameActivity -> com.dailystudio.memory.game.o:
    void onCreate(android.os.Bundle) -> onCreate
    void setFullscreen(boolean) -> c
com.dailystudio.memory.game.R -> com.dailystudio.memory.game.R:
com.dailystudio.memory.game.R$anim -> com.dailystudio.memory.game.R$anim:
    int actbar_overflow_dropdown_in -> actbar_overflow_dropdown_in
    int actbar_overflow_dropdown_out -> actbar_overflow_dropdown_out
    int actbar_overflow_popup_overlay_in -> actbar_overflow_popup_overlay_in
    int actbar_overflow_popup_overlay_out -> actbar_overflow_popup_overlay_out
    int actbar_prompt_in_bottom -> actbar_prompt_in_bottom
    int actbar_prompt_out_bottom -> actbar_prompt_out_bottom
    int ask_board_in -> ask_board_in
    int ask_board_out -> ask_board_out
    int char_layout_anim -> char_layout_anim
    int chart_in -> chart_in
    int circle_item_in -> circle_item_in
    int circle_layout_anim -> circle_layout_anim
    int expand_list_item_in -> expand_list_item_in
    int expand_list_item_layout_anim -> expand_list_item_layout_anim
    int fade_in -> fade_in
    int fade_out -> fade_out
    int grid_item_in -> grid_item_in
    int grid_layout_anim -> grid_layout_anim
    int grow_fade_in -> grow_fade_in
    int grow_fade_in_center -> grow_fade_in_center
    int grow_fade_in_from_bottom -> grow_fade_in_from_bottom
    int list_item_in -> list_item_in
    int list_layout_anim -> list_layout_anim
    int notify_view_in -> notify_view_in
    int notify_view_out -> notify_view_out
    int paper_clip_in -> paper_clip_in
    int paper_clip_out -> paper_clip_out
    int shrink_fade_out -> shrink_fade_out
    int shrink_fade_out_center -> shrink_fade_out_center
    int shrink_fade_out_from_bottom -> shrink_fade_out_from_bottom
    int slide_fade_in_bottom -> slide_fade_in_bottom
    int slide_fade_in_left -> slide_fade_in_left
    int slide_fade_in_right -> slide_fade_in_right
    int slide_fade_in_top -> slide_fade_in_top
    int slide_fade_out_bottom -> slide_fade_out_bottom
    int slide_fade_out_left -> slide_fade_out_left
    int slide_fade_out_right -> slide_fade_out_right
    int slide_fade_out_top -> slide_fade_out_top
com.dailystudio.memory.game.R$attr -> com.dailystudio.memory.game.R$attr:
    int adSize -> adSize
    int adUnitId -> adUnitId
    int allowSingleTap -> allowSingleTap
    int animateOnClick -> animateOnClick
    int bottomOffset -> bottomOffset
    int cameraBearing -> cameraBearing
    int cameraTargetLat -> cameraTargetLat
    int cameraTargetLng -> cameraTargetLng
    int cameraTilt -> cameraTilt
    int cameraZoom -> cameraZoom
    int content -> content
    int count -> count
    int handle -> handle
    int mapType -> mapType
    int minDigits -> minDigits
    int orientation -> orientation
    int textColor -> textColor
    int textSize -> textSize
    int textStyle -> textStyle
    int topOffset -> topOffset
    int uiCompass -> uiCompass
    int uiRotateGestures -> uiRotateGestures
    int uiScrollGestures -> uiScrollGestures
    int uiTiltGestures -> uiTiltGestures
    int uiZoomControls -> uiZoomControls
    int uiZoomGestures -> uiZoomGestures
    int useViewLifecycle -> useViewLifecycle
    int zOrderOnTop -> zOrderOnTop
com.dailystudio.memory.game.R$color -> com.dailystudio.memory.game.R$color:
    int action_bar_bg_color -> action_bar_bg_color
    int action_bar_popup_content_overlay -> action_bar_popup_content_overlay
    int action_bar_text_color -> action_bar_text_color
    int action_bar_text_disable_color -> action_bar_text_disable_color
    int android_blue -> android_blue
    int android_blue_light -> android_blue_light
    int black -> black
    int blue -> blue
    int chart_transparent -> chart_transparent
    int common_action_bar_splitter -> common_action_bar_splitter
    int common_signin_btn_dark_text_default -> common_signin_btn_dark_text_default
    int common_signin_btn_dark_text_disabled -> common_signin_btn_dark_text_disabled
    int common_signin_btn_dark_text_focused -> common_signin_btn_dark_text_focused
    int common_signin_btn_dark_text_pressed -> common_signin_btn_dark_text_pressed
    int common_signin_btn_default_background -> common_signin_btn_default_background
    int common_signin_btn_light_text_default -> common_signin_btn_light_text_default
    int common_signin_btn_light_text_disabled -> common_signin_btn_light_text_disabled
    int common_signin_btn_light_text_focused -> common_signin_btn_light_text_focused
    int common_signin_btn_light_text_pressed -> common_signin_btn_light_text_pressed
    int common_signin_btn_text_dark -> common_signin_btn_text_dark
    int common_signin_btn_text_light -> common_signin_btn_text_light
    int core_app_check_step_text_color -> core_app_check_step_text_color
    int dark_red -> dark_red
    int default_button_text_color -> default_button_text_color
    int fadeText -> fadeText
    int gold_yellow -> gold_yellow
    int gray -> gray
    int green -> green
    int light_black -> light_black
    int light_gray -> light_gray
    int light_white -> light_white
    int orange -> orange
    int red -> red
    int royal_blue -> royal_blue
    int see_green -> see_green
    int tomato_red -> tomato_red
    int translucent_background -> translucent_background
    int transparent -> transparent
    int transparent_background -> transparent_background
    int white -> white
com.dailystudio.memory.game.R$dimen -> com.dailystudio.memory.game.R$dimen:
    int actbar_custom_view_right_padding -> actbar_custom_view_right_padding
    int actbar_overflow_menu_icon_height -> actbar_overflow_menu_icon_height
    int actbar_overflow_menu_icon_width -> actbar_overflow_menu_icon_width
    int actbar_overflow_menu_item_padding -> actbar_overflow_menu_item_padding
    int actbar_overflow_menu_max_width -> actbar_overflow_menu_max_width
    int actbar_overflow_menu_text_size -> actbar_overflow_menu_text_size
    int action_bar_height -> action_bar_height
    int action_bar_padding -> action_bar_padding
    int action_bar_right_padding -> action_bar_right_padding
    int action_bar_text_size -> action_bar_text_size
    int alert_dialog_custom_view_padding_bottom -> alert_dialog_custom_view_padding_bottom
    int alert_dialog_custom_view_padding_left -> alert_dialog_custom_view_padding_left
    int alert_dialog_custom_view_padding_right -> alert_dialog_custom_view_padding_right
    int alert_dialog_custom_view_padding_top -> alert_dialog_custom_view_padding_top
    int app_widget_btn_padding -> app_widget_btn_padding
    int app_widget_chart_margin_bottom -> app_widget_chart_margin_bottom
    int app_widget_chart_margin_left -> app_widget_chart_margin_left
    int app_widget_chart_margin_right -> app_widget_chart_margin_right
    int app_widget_chart_margin_top -> app_widget_chart_margin_top
    int app_widget_frame_padding -> app_widget_frame_padding
    int app_widget_grid_height -> app_widget_grid_height
    int app_widget_grid_width -> app_widget_grid_width
    int app_widget_label_font_size -> app_widget_label_font_size
    int app_widget_label_padding -> app_widget_label_padding
    int app_widget_margin -> app_widget_margin
    int app_widget_title_padding -> app_widget_title_padding
    int ask_question_answers_padding -> ask_question_answers_padding
    int ask_question_content_padding -> ask_question_content_padding
    int bfw_hpadding -> bfw_hpadding
    int bfw_min_content_height -> bfw_min_content_height
    int bfw_title_height -> bfw_title_height
    int bfw_title_hpadding -> bfw_title_hpadding
    int close_button_size -> close_button_size
    int core_app_check_badge_margin -> core_app_check_badge_margin
    int core_app_check_padding -> core_app_check_padding
    int daygroup_item_height -> daygroup_item_height
    int default_app_item_padding -> default_app_item_padding
    int default_ask_board_width -> default_ask_board_width
    int default_button_padding -> default_button_padding
    int default_chart_axis_title_size -> default_chart_axis_title_size
    int default_chart_label_size -> default_chart_label_size
    int default_chart_legend_height -> default_chart_legend_height
    int default_chart_legend_size -> default_chart_legend_size
    int default_chart_margin_bottom -> default_chart_margin_bottom
    int default_chart_margin_left -> default_chart_margin_left
    int default_chart_margin_right -> default_chart_margin_right
    int default_chart_margin_top -> default_chart_margin_top
    int default_chart_title_size -> default_chart_title_size
    int default_check_padding -> default_check_padding
    int default_content_hpadding -> default_content_hpadding
    int default_content_vpadding -> default_content_vpadding
    int default_empty_text_font_size -> default_empty_text_font_size
    int default_font_size -> default_font_size
    int default_grid_item_height -> default_grid_item_height
    int default_label_padding -> default_label_padding
    int default_notify_height -> default_notify_height
    int default_pager_title_font_size -> default_pager_title_font_size
    int default_res_icon_size -> default_res_icon_size
    int gv_item_hpadding -> gv_item_hpadding
    int gv_item_vpadding -> gv_item_vpadding
    int lv_index_font_size -> lv_index_font_size
    int lv_index_padding -> lv_index_padding
    int lv_index_width -> lv_index_width
    int lv_item_2nd_font_size -> lv_item_2nd_font_size
    int lv_item_2nd_vpadding -> lv_item_2nd_vpadding
    int lv_item_font_size -> lv_item_font_size
    int lv_item_padding -> lv_item_padding
    int memory_ic_height -> memory_ic_height
    int memory_ic_witdh -> memory_ic_witdh
    int memory_index_font_size -> memory_index_font_size
    int memory_index_padding -> memory_index_padding
    int memory_index_width -> memory_index_width
    int notification_content_padding -> notification_content_padding
    int notification_dialog_height -> notification_dialog_height
    int paper_clip_content_hpadding -> paper_clip_content_hpadding
    int paper_clip_content_vpadding -> paper_clip_content_vpadding
    int paper_clip_frame_padding -> paper_clip_frame_padding
    int paper_clip_title_font_size -> paper_clip_title_font_size
    int paper_clip_title_height -> paper_clip_title_height
    int paper_clip_title_hmargin -> paper_clip_title_hmargin
    int paper_clip_title_vmargin -> paper_clip_title_vmargin
com.dailystudio.memory.game.R$drawable -> com.dailystudio.memory.game.R$drawable:
    int actbar_button -> actbar_button
    int actbar_button_pressed_light -> actbar_button_pressed_light
    int actbar_dropdown_background -> actbar_dropdown_background
    int actbar_prg_01 -> actbar_prg_01
    int actbar_prg_02 -> actbar_prg_02
    int actbar_prg_03 -> actbar_prg_03
    int actbar_prg_04 -> actbar_prg_04
    int actbar_prg_05 -> actbar_prg_05
    int actbar_prg_06 -> actbar_prg_06
    int actbar_prg_07 -> actbar_prg_07
    int actbar_prg_08 -> actbar_prg_08
    int actbar_vert_separator -> actbar_vert_separator
    int app_widget_background -> app_widget_background
    int app_widget_btn -> app_widget_btn
    int app_widget_btn_pressed -> app_widget_btn_pressed
    int ask_board -> ask_board
    int ask_board_normal -> ask_board_normal
    int ask_board_pressed -> ask_board_pressed
    int ask_dialog_bg -> ask_dialog_bg
    int check_background -> check_background
    int check_off_dark -> check_off_dark
    int check_off_light -> check_off_light
    int check_on -> check_on
    int common_signin_btn_icon_dark -> common_signin_btn_icon_dark
    int common_signin_btn_icon_disabled_dark -> common_signin_btn_icon_disabled_dark
    int common_signin_btn_icon_disabled_focus_dark -> common_signin_btn_icon_disabled_focus_dark
    int common_signin_btn_icon_disabled_focus_light -> common_signin_btn_icon_disabled_focus_light
    int common_signin_btn_icon_disabled_light -> common_signin_btn_icon_disabled_light
    int common_signin_btn_icon_focus_dark -> common_signin_btn_icon_focus_dark
    int common_signin_btn_icon_focus_light -> common_signin_btn_icon_focus_light
    int common_signin_btn_icon_light -> common_signin_btn_icon_light
    int common_signin_btn_icon_normal_dark -> common_signin_btn_icon_normal_dark
    int common_signin_btn_icon_normal_light -> common_signin_btn_icon_normal_light
    int common_signin_btn_icon_pressed_dark -> common_signin_btn_icon_pressed_dark
    int common_signin_btn_icon_pressed_light -> common_signin_btn_icon_pressed_light
    int common_signin_btn_text_dark -> common_signin_btn_text_dark
    int common_signin_btn_text_disabled_dark -> common_signin_btn_text_disabled_dark
    int common_signin_btn_text_disabled_focus_dark -> common_signin_btn_text_disabled_focus_dark
    int common_signin_btn_text_disabled_focus_light -> common_signin_btn_text_disabled_focus_light
    int common_signin_btn_text_disabled_light -> common_signin_btn_text_disabled_light
    int common_signin_btn_text_focus_dark -> common_signin_btn_text_focus_dark
    int common_signin_btn_text_focus_light -> common_signin_btn_text_focus_light
    int common_signin_btn_text_light -> common_signin_btn_text_light
    int common_signin_btn_text_normal_dark -> common_signin_btn_text_normal_dark
    int common_signin_btn_text_normal_light -> common_signin_btn_text_normal_light
    int common_signin_btn_text_pressed_dark -> common_signin_btn_text_pressed_dark
    int common_signin_btn_text_pressed_light -> common_signin_btn_text_pressed_light
    int content_bg_op60 -> content_bg_op60
    int content_bg_op80 -> content_bg_op80
    int content_bg_op90 -> content_bg_op90
    int default_button -> default_button
    int default_button_disabled_focused_light -> default_button_disabled_focused_light
    int default_button_disabled_light -> default_button_disabled_light
    int default_button_focused_light -> default_button_focused_light
    int default_button_normal_light -> default_button_normal_light
    int default_button_pressed_light -> default_button_pressed_light
    int default_content_bg -> default_content_bg
    int default_content_bg_pattern -> default_content_bg_pattern
    int default_dark_check -> default_dark_check
    int default_light_check -> default_light_check
    int edit_text_light -> edit_text_light
    int get_it_on_play_logo_large -> get_it_on_play_logo_large
    int get_it_on_play_logo_large_disabled -> get_it_on_play_logo_large_disabled
    int get_it_on_play_logo_large_normal -> get_it_on_play_logo_large_normal
    int get_it_on_play_logo_large_pressed -> get_it_on_play_logo_large_pressed
    int guess_right -> guess_right
    int guess_wrong -> guess_wrong
    int ic_action_overflow -> ic_action_overflow
    int ic_action_search -> ic_action_search
    int ic_calendar_day -> ic_calendar_day
    int ic_calendar_month -> ic_calendar_month
    int ic_calendar_week -> ic_calendar_week
    int ic_close_button -> ic_close_button
    int ic_close_button_normal -> ic_close_button_normal
    int ic_close_button_pressed -> ic_close_button_pressed
    int ic_done -> ic_done
    int ic_done_highlight -> ic_done_highlight
    int ic_done_normal -> ic_done_normal
    int ic_launcher -> ic_launcher
    int ic_memory_bar_chart -> ic_memory_bar_chart
    int ic_memory_chart -> ic_memory_chart
    int ic_memory_list -> ic_memory_list
    int ic_memory_record -> ic_memory_record
    int ic_menu_add -> ic_menu_add
    int ic_menu_calendar -> ic_menu_calendar
    int ic_menu_history -> ic_menu_history
    int ic_menu_list -> ic_menu_list
    int ic_menu_search -> ic_menu_search
    int ic_menu_share -> ic_menu_share
    int ic_menu_today -> ic_menu_today
    int ic_nofity -> ic_nofity
    int ic_plusone_medium_off_client -> ic_plusone_medium_off_client
    int ic_plusone_small_off_client -> ic_plusone_small_off_client
    int ic_plusone_standard_off_client -> ic_plusone_standard_off_client
    int ic_plusone_tall_off_client -> ic_plusone_tall_off_client
    int icon -> icon
    int list_divider -> list_divider
    int list_focused -> list_focused
    int list_longpressed -> list_longpressed
    int list_pressed_dark -> list_pressed_dark
    int list_pressed_light -> list_pressed_light
    int list_selector_background_transition_dark -> list_selector_background_transition_dark
    int list_selector_background_transition_light -> list_selector_background_transition_light
    int list_selector_dark -> list_selector_dark
    int list_selector_disabled_dark -> list_selector_disabled_dark
    int list_selector_disabled_light -> list_selector_disabled_light
    int list_selector_light -> list_selector_light
    int menu_dropdown_panel_holo_light -> menu_dropdown_panel_holo_light
    int notification_dialog_bg -> notification_dialog_bg
    int notify_bird_left -> notify_bird_left
    int notify_bird_right -> notify_bird_right
    int notify_pole_and_line -> notify_pole_and_line
    int paper_clip_close_normal -> paper_clip_close_normal
    int paper_clip_close_pressed -> paper_clip_close_pressed
    int paper_clip_window -> paper_clip_window
    int paper_clip_window_close -> paper_clip_window_close
    int rate_star_big_half_dark -> rate_star_big_half_dark
    int rate_star_big_half_light -> rate_star_big_half_light
    int rate_star_big_off_dark -> rate_star_big_off_dark
    int rate_star_big_off_light -> rate_star_big_off_light
    int rate_star_big_on_dark -> rate_star_big_on_dark
    int rate_star_big_on_light -> rate_star_big_on_light
    int rate_star_small_half_dark -> rate_star_small_half_dark
    int rate_star_small_half_light -> rate_star_small_half_light
    int rate_star_small_off_dark -> rate_star_small_off_dark
    int rate_star_small_off_light -> rate_star_small_off_light
    int rate_star_small_on_dark -> rate_star_small_on_dark
    int rate_star_small_on_light -> rate_star_small_on_light
    int ratingbar_dark -> ratingbar_dark
    int ratingbar_light -> ratingbar_light
    int ratingbar_small_dark -> ratingbar_small_dark
    int ratingbar_small_light -> ratingbar_small_light
    int scrollbar_handle -> scrollbar_handle
    int textfield_activated_light -> textfield_activated_light
    int textfield_default_light -> textfield_default_light
    int textfield_disabled_focused_light -> textfield_disabled_focused_light
    int textfield_disabled_light -> textfield_disabled_light
    int textfield_focused_light -> textfield_focused_light
    int vert_divider -> vert_divider
com.dailystudio.memory.game.R$id -> com.dailystudio.memory.game.R$id:
    int actbar_activity_actionbar -> actbar_activity_actionbar
    int actbar_activity_content -> actbar_activity_content
    int actbar_activity_overflow_menu -> actbar_activity_overflow_menu
    int actbar_custome_view -> actbar_custome_view
    int actbar_overflow -> actbar_overflow
    int actbar_overflow_menu_item -> actbar_overflow_menu_item
    int actbar_overflow_menu_list -> actbar_overflow_menu_list
    int actbar_overflow_menu_root -> actbar_overflow_menu_root
    int actbar_overflow_popup_overlay -> actbar_overflow_popup_overlay
    int actbar_progress -> actbar_progress
    int actbar_prompt -> actbar_prompt
    int actbar_root -> actbar_root
    int actbar_title -> actbar_title
    int ask_board -> ask_board
    int ask_view -> ask_view
    int bold -> bold
    int chartStub -> chartStub
    int core_app_check_explain -> core_app_check_explain
    int core_app_check_google_play_badge -> core_app_check_google_play_badge
    int core_app_check_know_button -> core_app_check_know_button
    int core_app_check_memory_installed -> core_app_check_memory_installed
    int core_app_check_not_show_again_check -> core_app_check_not_show_again_check
    int core_app_check_plugin -> core_app_check_plugin
    int core_app_check_plugin_icon -> core_app_check_plugin_icon
    int core_app_check_plugin_name -> core_app_check_plugin_name
    int core_app_check_step_one -> core_app_check_step_one
    int core_app_check_step_two -> core_app_check_step_two
    int core_app_check_steps -> core_app_check_steps
    int fragment_notification -> fragment_notification
    int fragment_question -> fragment_question
    int fragment_view_root -> fragment_view_root
    int horizontal -> horizontal
    int hybrid -> hybrid
    int italic -> italic
    int menu_item_icon -> menu_item_icon
    int menu_item_text -> menu_item_text
    int month_name -> month_name
    int none -> none
    int normal -> normal
    int notification_close -> notification_close
    int notification_content -> notification_content
    int notification_title -> notification_title
    int notification_title_separator -> notification_title_separator
    int notify_slot_1 -> notify_slot_1
    int notify_slot_2 -> notify_slot_2
    int notify_slot_3 -> notify_slot_3
    int notify_slot_4 -> notify_slot_4
    int notify_slots_root -> notify_slots_root
    int notify_view -> notify_view
    int paper_clip_close_button -> paper_clip_close_button
    int paper_clip_content -> paper_clip_content
    int paper_clip_icon -> paper_clip_icon
    int paper_clip_title -> paper_clip_title
    int paper_clip_title_separator -> paper_clip_title_separator
    int question_answer_right -> question_answer_right
    int question_answer_wrong -> question_answer_wrong
    int question_answers -> question_answers
    int question_content -> question_content
    int question_title -> question_title
    int question_title_separator -> question_title_separator
    int res_icon -> res_icon
    int res_label -> res_label
    int satellite -> satellite
    int stats_lifetime_day -> stats_lifetime_day
    int stats_lifetime_day_label -> stats_lifetime_day_label
    int stats_lifetime_hour -> stats_lifetime_hour
    int stats_lifetime_hour_label -> stats_lifetime_hour_label
    int stats_lifetime_min -> stats_lifetime_min
    int stats_lifetime_min_label -> stats_lifetime_min_label
    int stats_lifetime_sec -> stats_lifetime_sec
    int stats_lifetime_sec_label -> stats_lifetime_sec_label
    int terrain -> terrain
    int vertical -> vertical
    int week_num -> week_num
    int week_range -> week_range
    int weekay_time -> weekay_time
    int weekday_dayname -> weekday_dayname
com.dailystudio.memory.game.R$integer -> com.dailystudio.memory.game.R$integer:
    int config_chartAnimTime -> config_chartAnimTime
    int config_defaultAnimTime -> config_defaultAnimTime
    int config_notifyAnimTime -> config_notifyAnimTime
    int config_overflowAnimTime -> config_overflowAnimTime
    int config_overflowOverlayAnimTime -> config_overflowOverlayAnimTime
    int config_slowAnimTime -> config_slowAnimTime
    int google_play_services_version -> google_play_services_version
com.dailystudio.memory.game.R$layout -> com.dailystudio.memory.game.R$layout:
    int actbar_activity -> actbar_activity
    int actbar_base -> actbar_base
    int actbar_overflow_menu -> actbar_overflow_menu
    int actbar_overflow_menu_item -> actbar_overflow_menu_item
    int activity_core_app_check -> activity_core_app_check
    int activity_notification -> activity_notification
    int activity_question -> activity_question
    int ask_host_view -> ask_host_view
    int fragment_chart -> fragment_chart
    int fragment_grid -> fragment_grid
    int fragment_grid_noanim -> fragment_grid_noanim
    int fragment_list -> fragment_list
    int fragment_list_noanim -> fragment_list_noanim
    int fragment_memory_ask -> fragment_memory_ask
    int fragment_memory_notification -> fragment_memory_notification
    int fragment_memory_notify -> fragment_memory_notify
    int fragment_memory_question -> fragment_memory_question
    int layout_default_resobj -> layout_default_resobj
    int layout_duration_count_view -> layout_duration_count_view
    int month_item -> month_item
    int notify_host_view -> notify_host_view
    int paper_clip_window -> paper_clip_window
    int week_item -> week_item
    int weekday_item -> weekday_item
com.dailystudio.memory.game.R$raw -> com.dailystudio.memory.game.R$raw:
    int default_showcase_404_page -> default_showcase_404_page
    int default_showcase_404_page_style -> default_showcase_404_page_style
com.dailystudio.memory.game.R$string -> com.dailystudio.memory.game.R$string:
    int activity_ask_question -> activity_ask_question
    int activity_notification -> activity_notification
    int alert_dialog_button_cancel -> alert_dialog_button_cancel
    int alert_dialog_button_confirm -> alert_dialog_button_confirm
    int app_name -> app_name
    int auth_client_needs_enabling_title -> auth_client_needs_enabling_title
    int auth_client_needs_installation_title -> auth_client_needs_installation_title
    int auth_client_needs_update_title -> auth_client_needs_update_title
    int auth_client_play_services_err_notification_msg -> auth_client_play_services_err_notification_msg
    int auth_client_requested_by_msg -> auth_client_requested_by_msg
    int auth_client_using_bad_version_title -> auth_client_using_bad_version_title
    int build_device -> build_device
    int build_manufacture -> build_manufacture
    int build_platform -> build_platform
    int chart_lable_date -> chart_lable_date
    int common_google_play_services_enable_button -> common_google_play_services_enable_button
    int common_google_play_services_enable_text -> common_google_play_services_enable_text
    int common_google_play_services_enable_title -> common_google_play_services_enable_title
    int common_google_play_services_install_button -> common_google_play_services_install_button
    int common_google_play_services_install_text_phone -> common_google_play_services_install_text_phone
    int common_google_play_services_install_text_tablet -> common_google_play_services_install_text_tablet
    int common_google_play_services_install_title -> common_google_play_services_install_title
    int common_google_play_services_invalid_account_text -> common_google_play_services_invalid_account_text
    int common_google_play_services_invalid_account_title -> common_google_play_services_invalid_account_title
    int common_google_play_services_network_error_text -> common_google_play_services_network_error_text
    int common_google_play_services_network_error_title -> common_google_play_services_network_error_title
    int common_google_play_services_unknown_issue -> common_google_play_services_unknown_issue
    int common_google_play_services_unsupported_date_text -> common_google_play_services_unsupported_date_text
    int common_google_play_services_unsupported_text -> common_google_play_services_unsupported_text
    int common_google_play_services_unsupported_title -> common_google_play_services_unsupported_title
    int common_google_play_services_update_button -> common_google_play_services_update_button
    int common_google_play_services_update_text -> common_google_play_services_update_text
    int common_google_play_services_update_title -> common_google_play_services_update_title
    int common_signin_button_text -> common_signin_button_text
    int common_signin_button_text_long -> common_signin_button_text_long
    int core_app_check_button_know -> core_app_check_button_know
    int core_app_check_confirm_dialog_message -> core_app_check_confirm_dialog_message
    int core_app_check_confirm_dialog_title -> core_app_check_confirm_dialog_title
    int core_app_check_explaination -> core_app_check_explaination
    int core_app_check_installed -> core_app_check_installed
    int core_app_check_not_installed -> core_app_check_not_installed
    int core_app_check_not_show_again -> core_app_check_not_show_again
    int core_app_check_step_one -> core_app_check_step_one
    int core_app_check_step_two -> core_app_check_step_two
    int default_app_label -> default_app_label
    int default_ask_board_text -> default_ask_board_text
    int default_ask_question_title -> default_ask_question_title
    int default_bfw_title -> default_bfw_title
    int default_category_label -> default_category_label
    int default_iv_description -> default_iv_description
    int default_nodata_prompt -> default_nodata_prompt
    int default_notification_title -> default_notification_title
    int default_paper_clip_window_title -> default_paper_clip_window_title
    int default_searchable_matches_templ -> default_searchable_matches_templ
    int error_unknow -> error_unknow
    int gamehelper_app_misconfigured -> gamehelper_app_misconfigured
    int gamehelper_license_failed -> gamehelper_license_failed
    int gamehelper_sign_in_failed -> gamehelper_sign_in_failed
    int gamehelper_unknown_error -> gamehelper_unknown_error
    int month_pattern -> month_pattern
    int time_print_date_format -> time_print_date_format
    int time_print_label_day -> time_print_label_day
    int time_print_label_days -> time_print_label_days
    int time_print_label_hour -> time_print_label_hour
    int time_print_label_min -> time_print_label_min
    int time_print_label_sec -> time_print_label_sec
    int time_print_time_format -> time_print_time_format
com.dailystudio.memory.game.R$style -> com.dailystudio.memory.game.R$style:
    int ActionBarOverflowMenuItemText -> ActionBarOverflowMenuItemText
    int ActionBarPromptText -> ActionBarPromptText
    int ActionBarText -> ActionBarText
    int ActionBarTitleText -> ActionBarTitleText
    int ActiveLabel -> ActiveLabel
    int Animation -> Animation
    int Animation_DropDownCenter -> Animation_DropDownCenter
    int Animation_DropDownDown -> Animation_DropDownDown
    int Animation_DropDownUp -> Animation_DropDownUp
    int AppBaseTheme -> AppBaseTheme
    int AppTheme -> AppTheme
    int AskBoardText -> AskBoardText
    int AskQuestionContent -> AskQuestionContent
    int BottomFloatingWindowButton -> BottomFloatingWindowButton
    int BottomFloatingWindowTitle -> BottomFloatingWindowTitle
    int CoreAppCheckExplainText -> CoreAppCheckExplainText
    int CoreAppCheckResultText -> CoreAppCheckResultText
    int CoreAppCheckStepListText -> CoreAppCheckStepListText
    int CoreAppCheckStepText -> CoreAppCheckStepText
    int DefaultAdapterView -> DefaultAdapterView
    int DefaultAppWidgetButton -> DefaultAppWidgetButton
    int DefaultAppWidgetLabel -> DefaultAppWidgetLabel
    int DefaultAppWidgetTitle -> DefaultAppWidgetTitle
    int DefaultButton -> DefaultButton
    int DefaultCheck -> DefaultCheck
    int DefaultCheck_Dark -> DefaultCheck_Dark
    int DefaultCheck_Light -> DefaultCheck_Light
    int DefaultDarkIndicatorRatingBar -> DefaultDarkIndicatorRatingBar
    int DefaultDarkPagerTitleStrip -> DefaultDarkPagerTitleStrip
    int DefaultDarkSmallRatingBar -> DefaultDarkSmallRatingBar
    int DefaultEditText -> DefaultEditText
    int DefaultEmptyText -> DefaultEmptyText
    int DefaultGridItemText -> DefaultGridItemText
    int DefaultGridView -> DefaultGridView
    int DefaultGridView_NoAnim -> DefaultGridView_NoAnim
    int DefaultIndicatorRatingBar -> DefaultIndicatorRatingBar
    int DefaultLabel -> DefaultLabel
    int DefaultListItemText -> DefaultListItemText
    int DefaultListItemText1stLine -> DefaultListItemText1stLine
    int DefaultListItemText2ndLine -> DefaultListItemText2ndLine
    int DefaultListView -> DefaultListView
    int DefaultListView_NoAnim -> DefaultListView_NoAnim
    int DefaultPagerTitleStrip -> DefaultPagerTitleStrip
    int DefaultSmallRatingBar -> DefaultSmallRatingBar
    int DefaultText -> DefaultText
    int DurationCountViewText -> DurationCountViewText
    int MemoryIndexText -> MemoryIndexText
    int NotifyContent -> NotifyContent
    int NotifyText -> NotifyText
    int PaperClipTitle -> PaperClipTitle
    int Theme -> Theme
    int Theme_DefaultActivity -> Theme_DefaultActivity
    int Theme_DefaultActivity_Light -> Theme_DefaultActivity_Light
    int Theme_Translucent -> Theme_Translucent
    int Theme_Transparent -> Theme_Transparent
com.dailystudio.memory.game.R$styleable -> com.dailystudio.memory.game.R$styleable:
    int[] AdsAttrs -> AdsAttrs
    int AdsAttrs_adSize -> AdsAttrs_adSize
    int AdsAttrs_adUnitId -> AdsAttrs_adUnitId
    int[] CountView -> CountView
    int CountView_count -> CountView_count
    int CountView_minDigits -> CountView_minDigits
    int[] DurationCountView -> DurationCountView
    int DurationCountView_textColor -> DurationCountView_textColor
    int DurationCountView_textSize -> DurationCountView_textSize
    int DurationCountView_textStyle -> DurationCountView_textStyle
    int[] MapAttrs -> MapAttrs
    int MapAttrs_cameraBearing -> MapAttrs_cameraBearing
    int MapAttrs_cameraTargetLat -> MapAttrs_cameraTargetLat
    int MapAttrs_cameraTargetLng -> MapAttrs_cameraTargetLng
    int MapAttrs_cameraTilt -> MapAttrs_cameraTilt
    int MapAttrs_cameraZoom -> MapAttrs_cameraZoom
    int MapAttrs_mapType -> MapAttrs_mapType
    int MapAttrs_uiCompass -> MapAttrs_uiCompass
    int MapAttrs_uiRotateGestures -> MapAttrs_uiRotateGestures
    int MapAttrs_uiScrollGestures -> MapAttrs_uiScrollGestures
    int MapAttrs_uiTiltGestures -> MapAttrs_uiTiltGestures
    int MapAttrs_uiZoomControls -> MapAttrs_uiZoomControls
    int MapAttrs_uiZoomGestures -> MapAttrs_uiZoomGestures
    int MapAttrs_useViewLifecycle -> MapAttrs_useViewLifecycle
    int MapAttrs_zOrderOnTop -> MapAttrs_zOrderOnTop
    int[] SlidingDrawer -> SlidingDrawer
    int SlidingDrawer_allowSingleTap -> SlidingDrawer_allowSingleTap
    int SlidingDrawer_animateOnClick -> SlidingDrawer_animateOnClick
    int SlidingDrawer_bottomOffset -> SlidingDrawer_bottomOffset
    int SlidingDrawer_content -> SlidingDrawer_content
    int SlidingDrawer_handle -> SlidingDrawer_handle
    int SlidingDrawer_orientation -> SlidingDrawer_orientation
    int SlidingDrawer_topOffset -> SlidingDrawer_topOffset
com.dailystudio.memory.game.UncommittedAchievement -> com.dailystudio.memory.game.UncommittedAchievement:
    com.dailystudio.dataobject.Column COLUMN_ENCRYPTED_ACHIEVEMENT_ID -> a
    com.dailystudio.dataobject.Column COLUMN_ENCRYPTED_ACHIEVEMENT_TYPE -> b
    com.dailystudio.dataobject.Column COLUMN_ENCRYPTED_INCREMENT_STEPS -> f
    com.dailystudio.dataobject.Column[] sCloumns -> g
    byte[] getEncryptedAchievementId() -> h
    void setEncryptedAchievementId(byte[]) -> c
    java.lang.String getAchievementId() -> i
    void setAchievementId(java.lang.String) -> c
    byte[] getEncryptedAchievementType() -> j
    void setEncryptedAchievementType(byte[]) -> d
    com.dailystudio.memory.game.UncommittedAchievement$AchievementType getAchievementType() -> k
    void setAchievementType(com.dailystudio.memory.game.UncommittedAchievement$AchievementType) -> a
    byte[] getEncryptedIncrementSteps() -> l
    void setEncryptedIncrementSteps(byte[]) -> e
    int getIncrementSteps() -> m
    void setIncrementSteps(int) -> a
    java.lang.String toString() -> toString
com.dailystudio.memory.game.UncommittedAchievement$AchievementType -> com.dailystudio.memory.game.p:
    com.dailystudio.memory.game.UncommittedAchievement$AchievementType STANDARD -> a
    com.dailystudio.memory.game.UncommittedAchievement$AchievementType INCREMENT -> b
    com.dailystudio.memory.game.UncommittedAchievement$AchievementType[] ENUM$VALUES -> c
    com.dailystudio.memory.game.UncommittedAchievement$AchievementType[] values() -> values
    com.dailystudio.memory.game.UncommittedAchievement$AchievementType valueOf(java.lang.String) -> valueOf
com.dailystudio.memory.game.UncommittedAchievementModal -> com.dailystudio.memory.game.q:
    void saveUncommittedUnlockAchievement(android.content.Context,java.lang.String) -> a
    void saveOrUpdateUncommittedIncrementAchievement(android.content.Context,java.lang.String,int) -> a
    void removeUncommittedAchievement(android.content.Context,com.dailystudio.memory.game.UncommittedAchievement) -> a
    boolean hasUncommittedAchievement(android.content.Context,java.lang.String) -> b
    com.dailystudio.memory.game.UncommittedAchievement findLastUncommittedIncrementAchievement(android.content.Context,java.lang.String) -> c
com.dailystudio.memory.game.UncommittedLeaderboardScore -> com.dailystudio.memory.game.UncommittedLeaderboardScore:
    com.dailystudio.dataobject.Column COLUMN_ENCRYPTED_LEADERBOARD_ID -> a
    com.dailystudio.dataobject.Column COLUMN_ENCRYPTED_LEADERBOARD_SCORE -> b
    com.dailystudio.dataobject.Column[] sCloumns -> f
    byte[] getEncryptedLeaderboardId() -> h
    void setEncryptedLeaderboardId(byte[]) -> c
    java.lang.String getLeaderboardId() -> i
    void setLeaderboardId(java.lang.String) -> c
    byte[] getEncryptedLeaderboardScore() -> j
    void setEncryptedLeaderboardScore(byte[]) -> d
    long getLeaderboardScore() -> k
    void setLeaderboardScore(long) -> a
    java.lang.String toString() -> toString
com.dailystudio.memory.game.UncommittedLeaderboardScoreModal -> com.dailystudio.memory.game.s:
    void saveOrUpdateUncommittedLeaderboardScore(android.content.Context,java.lang.String,long) -> a
    void removeUncommitedLeaderboardScore(android.content.Context,com.dailystudio.memory.game.UncommittedLeaderboardScore) -> a
    com.dailystudio.memory.game.UncommittedLeaderboardScore findLastUncommittedLeaderboardScore(android.content.Context,java.lang.String) -> a
com.dailystudio.memory.game.livegrass.LiveGrassGame -> com.dailystudio.memory.game.a.a:
    aurelienribon.tweenengine.TweenManager tweenManager -> a
    com.badlogic.gdx.graphics.OrthographicCamera camera -> b
    com.badlogic.gdx.graphics.g2d.SpriteBatch batch -> c
    com.badlogic.gdx.graphics.g2d.TextureAtlas atlas -> d
    com.badlogic.gdx.graphics.g2d.Sprite grassSprite1 -> e
    com.badlogic.gdx.graphics.g2d.Sprite grassSprite2 -> f
    com.badlogic.gdx.graphics.g2d.Sprite grassSprite3 -> g
    aurelienribon.tweenengine.TweenCallback windCallback -> h
    void create() -> a
    void render() -> b
    com.badlogic.gdx.graphics.g2d.Sprite access$0(com.dailystudio.memory.game.livegrass.LiveGrassGame) -> a
    aurelienribon.tweenengine.TweenCallback access$1(com.dailystudio.memory.game.livegrass.LiveGrassGame) -> b
    com.badlogic.gdx.graphics.g2d.Sprite access$2(com.dailystudio.memory.game.livegrass.LiveGrassGame) -> c
    com.badlogic.gdx.graphics.g2d.Sprite access$3(com.dailystudio.memory.game.livegrass.LiveGrassGame) -> d
    aurelienribon.tweenengine.TweenManager access$4(com.dailystudio.memory.game.livegrass.LiveGrassGame) -> e
com.dailystudio.memory.game.livegrass.LiveGrassGame$1 -> com.dailystudio.memory.game.a.b:
    com.dailystudio.memory.game.livegrass.LiveGrassGame this$0 -> a
    void onEvent(int,aurelienribon.tweenengine.BaseTween) -> a
com.dailystudio.memory.game.livegrass.SpriteAccessor -> com.dailystudio.memory.game.a.c:
    boolean $assertionsDisabled -> a
    int getValues(com.badlogic.gdx.graphics.g2d.Sprite,int,float[]) -> a
    void setValues(com.badlogic.gdx.graphics.g2d.Sprite,int,float[]) -> b
    int getValues(java.lang.Object,int,float[]) -> a
    void setValues(java.lang.Object,int,float[]) -> b
com.dailystudio.memory.game.step.AbsCheckAchievementStep -> com.dailystudio.memory.game.b.a:
    boolean loadInBackground() -> a
    java.lang.String getAchievementId() -> b
    boolean isAchievementAccomplished() -> c
com.dailystudio.memory.game.step.AbsCheckLeaderboardScoreStep -> com.dailystudio.memory.game.b.b:
    boolean loadInBackground() -> a
    java.lang.String getLeaderboardId() -> b
    long getLeaderboardScore() -> c
com.dailystudio.memory.game.step.CheckFirstPieceAchievementStep -> com.dailystudio.memory.game.b.c:
    java.lang.String getAchievementId() -> b
    boolean isAchievementAccomplished() -> c
com.dailystudio.memory.game.step.CheckPiecesLeaderboardScoreStep -> com.dailystudio.memory.game.b.d:
    java.lang.String getLeaderboardId() -> b
    long getLeaderboardScore() -> c
com.dailystudio.memory.javascript.MemoryJSPluginManager -> com.dailystudio.memory.javascript.MemoryJSPluginManager:
    boolean isPluginInastalled(java.lang.String) -> isPluginInastalled
    java.lang.String getPrivacy(java.lang.String) -> getPrivacy
    java.lang.String getPluginPackages() -> getPluginPackages
com.dailystudio.memory.javascript.MemoryJSPluginManager$PluginPrivacy -> com.dailystudio.memory.javascript.MemoryJSPluginManager$PluginPrivacy:
    java.lang.String pkg -> pkg
    java.lang.String label -> label
    java.lang.String collection -> collection
com.dailystudio.memory.loader.AbsDateGroupLoader -> com.dailystudio.memory.d.a:
    java.util.Comparator mAscComparator -> h
    java.util.Comparator mDescComparator -> i
    java.util.List loadInBackground() -> f
    void sortDates(java.util.List,boolean) -> a
com.dailystudio.memory.loader.AbsDateGroupLoader$AscDateGroupObjectComparator -> com.dailystudio.memory.d.b:
    com.dailystudio.memory.loader.AbsDateGroupLoader this$0 -> a
    int compare(com.dailystudio.memory.dataobject.DateGroupObject,com.dailystudio.memory.dataobject.DateGroupObject) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.dailystudio.memory.loader.AbsDateGroupLoader$DescDateGroupObjectComparator -> com.dailystudio.memory.d.c:
    com.dailystudio.memory.loader.AbsDateGroupLoader this$0 -> a
    int compare(com.dailystudio.memory.dataobject.DateGroupObject,com.dailystudio.memory.dataobject.DateGroupObject) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.dailystudio.memory.loader.AppChangedLoader -> com.dailystudio.memory.d.d:
    void initMembers() -> h
    void initSteps(android.content.Intent) -> a
com.dailystudio.memory.loader.CheckAchievementsAndLeaderboardsLoader -> com.dailystudio.memory.d.e:
    void initMembers() -> h
com.dailystudio.memory.loader.ConvertedDatabaseChartLoader -> com.dailystudio.memory.d.f:
    java.lang.Object mDataSet -> h
    java.lang.Object mRenderer -> i
    java.util.List loadInBackground() -> f
    boolean isEmpty() -> A
    com.dailystudio.dataobject.query.Query getQuery(java.lang.Class) -> b
    java.lang.Object createShareArguments() -> z
    java.lang.Object getDataSet() -> B
    java.lang.Object getChartRenderer() -> C
    java.lang.Object buildDataset(java.util.List,java.lang.Object) -> a
    java.lang.Object buildRenderer(java.util.List,java.lang.Object) -> b
com.dailystudio.memory.loader.ConvertedPeroidDatabaseObjectsLoader -> com.dailystudio.memory.d.g:
    long mPeroidStart -> h
    long mPeroidEnd -> i
    void setPeroid(long,long) -> a
    long getPeroidStart() -> D
    long getPeroidEnd() -> E
    com.dailystudio.dataobject.query.Query getQuery(java.lang.Class) -> b
com.dailystudio.memory.loader.DatabaseChartLoader -> com.dailystudio.memory.d.h:
com.dailystudio.memory.loader.InitLoader -> com.dailystudio.memory.d.i:
    void initMembers() -> h
com.dailystudio.memory.loader.LoaderController -> com.dailystudio.memory.d.j:
    java.util.List mPendingLoaders -> a
    com.dailystudio.memory.loader.MemoryStepLoader mCurrentLoader -> e
    com.dailystudio.memory.loader.MemoryStepLoader$Callback mLoaderCallback -> f
    com.dailystudio.memory.loader.LoaderController getInstance() -> d
    void initMembers() -> c_
    void addObject(com.dailystudio.memory.loader.MemoryStepLoader) -> a
    void startLoader(com.dailystudio.memory.loader.MemoryStepLoader) -> b
    void tryToExecutePendingLoaders() -> i
    void addObject(com.dailystudio.manager.ISingletonObject) -> a
    void access$1(com.dailystudio.memory.loader.LoaderController,com.dailystudio.memory.loader.MemoryStepLoader) -> a
    void access$2(com.dailystudio.memory.loader.LoaderController) -> a
com.dailystudio.memory.loader.LoaderController$1 -> com.dailystudio.memory.d.k:
    com.dailystudio.memory.loader.LoaderController this$0 -> a
    void onPreExecute(com.dailystudio.memory.loader.MemoryStepLoader) -> a
    void onPostExecute(com.dailystudio.memory.loader.MemoryStepLoader,java.lang.Integer) -> a
    void onCancelled(com.dailystudio.memory.loader.MemoryStepLoader) -> b
com.dailystudio.memory.loader.MemoryLoaderStep -> com.dailystudio.memory.d.l:
    android.content.Context mContext -> a
    com.dailystudio.memory.loader.MemoryStepLoader mLoader -> b
    void attachToLoader(com.dailystudio.memory.loader.MemoryStepLoader) -> a
    void postAndWait(java.lang.Runnable) -> a
    boolean loadInBackground() -> a
com.dailystudio.memory.loader.MemoryStepLoader -> com.dailystudio.memory.d.m:
    android.content.Context mContext -> b
    java.lang.Object mWaitLock -> c
    android.os.Handler mHandler -> d
    com.dailystudio.memory.loader.MemoryStepLoader$Callback mCallback -> e
    java.util.List mSteps -> f
    void addStep(com.dailystudio.memory.loader.MemoryLoaderStep) -> a
    java.lang.Integer doInBackground(java.lang.Void[]) -> a
    void waitForSync() -> h
    void postAndWait(java.lang.Runnable) -> a
    void setCallback(com.dailystudio.memory.loader.MemoryStepLoader$Callback) -> a
    void onPreExecute() -> d
    void onPostExecute(java.lang.Integer) -> a
    void onCancelled() -> e
    void printSteps() -> a
    java.lang.Class getSingletonKey() -> b
    void onPostExecute(java.lang.Object) -> a
    java.lang.Object getSingletonKey() -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> a
    void access$3(com.dailystudio.memory.loader.MemoryStepLoader,android.os.Handler) -> a
    java.lang.Object access$4(com.dailystudio.memory.loader.MemoryStepLoader) -> a
com.dailystudio.memory.loader.MemoryStepLoader$Callback -> com.dailystudio.memory.d.n:
    void onPreExecute(com.dailystudio.memory.loader.MemoryStepLoader) -> a
    void onPostExecute(com.dailystudio.memory.loader.MemoryStepLoader,java.lang.Integer) -> a
    void onCancelled(com.dailystudio.memory.loader.MemoryStepLoader) -> b
com.dailystudio.memory.loader.MemoryStepLoader$LooperThread -> com.dailystudio.memory.d.o:
    com.dailystudio.memory.loader.MemoryStepLoader this$0 -> a
    void run() -> run
com.dailystudio.memory.loader.MemoryStepLoader$SyncHandler -> com.dailystudio.memory.d.p:
    com.dailystudio.memory.loader.MemoryStepLoader this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.dailystudio.memory.loader.MonthsLoader -> com.dailystudio.memory.d.q:
    com.dailystudio.dataobject.query.Query getQuery(java.lang.Class) -> b
    java.lang.Class getProjectionClass() -> x
    java.util.List loadInBackground() -> f
com.dailystudio.memory.loader.PeroidDatabaseCursorLoader -> com.dailystudio.memory.d.r:
    long mPeroidStart -> v
    long mPeroidEnd -> w
    void setPeroid(long,long) -> a
    com.dailystudio.dataobject.query.Query getQuery(java.lang.Class) -> b
com.dailystudio.memory.loader.ProjectedDatabaseChartLoader -> com.dailystudio.memory.d.s:
com.dailystudio.memory.loader.ProjectedPeroidDatabaseObjectsLoader -> com.dailystudio.memory.d.t:
com.dailystudio.memory.loader.step.AddPluginsStep -> com.dailystudio.memory.d.a.a:
    java.lang.String mPackageName -> c
    boolean loadInBackground() -> a
com.dailystudio.memory.loader.step.BasePluginsStep -> com.dailystudio.memory.d.a.b:
    android.content.pm.PackageManager mPackageManager -> b
    java.lang.Runnable mRunnable -> c
    void initMembers() -> c
    java.util.List loadPlugins(java.lang.String) -> a
    java.util.List loadPlugins(java.lang.String,java.lang.String) -> a
    void clearDataForPackage(java.lang.String) -> b
    void clearCacheForPackage(java.lang.String) -> c
    java.util.List findAndCachePlugins(android.content.pm.PackageManager,java.lang.String,java.lang.String) -> a
    void findAndCacheActivities(android.content.pm.PackageManager,java.lang.String) -> a
    void clearUselessActivityCategories(java.lang.String) -> d
    void notifyPluginsChanged() -> b
com.dailystudio.memory.loader.step.BasePluginsStep$1 -> com.dailystudio.memory.d.a.c:
    com.dailystudio.memory.loader.step.BasePluginsStep this$0 -> a
    void run() -> run
com.dailystudio.memory.loader.step.CheckAndInitMemoryAskStep -> com.dailystudio.memory.d.a.d:
    boolean loadInBackground() -> a
com.dailystudio.memory.loader.step.CheckAndPromoteMemoryAppStep -> com.dailystudio.memory.d.a.e:
    boolean loadInBackground() -> a
    com.dailystudio.memory.promotapps.PromoteApp getTopPromoteApp() -> b
com.dailystudio.memory.loader.step.LoadPluginsStep -> com.dailystudio.memory.d.a.f:
    boolean loadInBackground() -> a
com.dailystudio.memory.loader.step.RemovePluginsStep -> com.dailystudio.memory.d.a.g:
    java.lang.String mPackageName -> c
    boolean mReplacing -> d
    boolean loadInBackground() -> a
com.dailystudio.memory.menu.ActionBarOverflowMenu -> com.dailystudio.memory.menu.a:
    android.content.Context mContext -> a
    boolean mIsQwerty -> b
    java.util.ArrayList mItems -> c
    com.dailystudio.memory.menu.ActionBarOverflowMenu$MenuItemChangedListener mMenuItemChangedListener -> d
    android.content.Context getContext() -> a
    android.view.MenuItem add(java.lang.CharSequence) -> add
    android.view.MenuItem add(int) -> add
    android.view.MenuItem add(int,int,int,int) -> add
    android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    void clear() -> clear
    void close() -> close
    int findItemIndex(int) -> a
    android.view.MenuItem findItem(int) -> findItem
    android.view.MenuItem getItem(int) -> getItem
    boolean hasVisibleItems() -> hasVisibleItems
    com.dailystudio.memory.menu.ActionBarOverflowMenuItem findItemWithShortcut(int,android.view.KeyEvent) -> a
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    void removeGroup(int) -> removeGroup
    void removeItem(int) -> removeItem
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setQwertyMode(boolean) -> setQwertyMode
    int size() -> size
    void onItemChanged() -> b
    void setMenuItemChangedListener(com.dailystudio.memory.menu.ActionBarOverflowMenu$MenuItemChangedListener) -> a
com.dailystudio.memory.menu.ActionBarOverflowMenu$MenuItemChangedListener -> com.dailystudio.memory.menu.b:
    void onItemsChanged() -> a
com.dailystudio.memory.menu.ActionBarOverflowMenuItem -> com.dailystudio.memory.menu.c:
    int mId -> a
    int mGroup -> b
    int mCategoryOrder -> c
    int mOrdering -> d
    java.lang.CharSequence mTitle -> e
    java.lang.CharSequence mTitleCondensed -> f
    android.content.Intent mIntent -> g
    char mShortcutNumericChar -> h
    char mShortcutAlphabeticChar -> i
    android.graphics.drawable.Drawable mIconDrawable -> j
    int mIconResId -> k
    android.content.Context mContext -> l
    android.view.MenuItem$OnMenuItemClickListener mClickListener -> m
    int mFlags -> n
    com.dailystudio.memory.menu.ActionBarOverflowMenu mActbarOverflowMenu -> o
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    int getGroupId() -> getGroupId
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.content.Intent getIntent() -> getIntent
    int getItemId() -> getItemId
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    char getNumericShortcut() -> getNumericShortcut
    int getOrder() -> getOrder
    android.view.SubMenu getSubMenu() -> getSubMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    boolean hasSubMenu() -> hasSubMenu
    boolean isCheckable() -> isCheckable
    boolean isChecked() -> isChecked
    boolean isEnabled() -> isEnabled
    boolean isVisible() -> isVisible
    android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    android.view.MenuItem setCheckable(boolean) -> setCheckable
    com.dailystudio.memory.menu.ActionBarOverflowMenuItem setExclusiveCheckable(boolean) -> a
    android.view.MenuItem setChecked(boolean) -> setChecked
    android.view.MenuItem setEnabled(boolean) -> setEnabled
    android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem setIcon(int) -> setIcon
    android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    android.view.MenuItem setShortcut(char,char) -> setShortcut
    android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    android.view.MenuItem setTitle(int) -> setTitle
    android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    android.view.MenuItem setVisible(boolean) -> setVisible
    boolean invoke() -> a
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.View getActionView() -> getActionView
com.dailystudio.memory.menu.ActionBarOverflowMenuListAdapter -> com.dailystudio.memory.menu.d:
    android.content.Context mContext -> a
    android.view.Menu mMenuData -> b
    com.dailystudio.memory.menu.ActionBarOverflowMenu$MenuItemChangedListener mMenuItemChangedListener -> c
    java.lang.Runnable mNotifyItemsChangedRunnable -> d
    android.os.Handler mHandler -> e
    void attachMenu(android.view.Menu) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.os.Handler access$0(com.dailystudio.memory.menu.ActionBarOverflowMenuListAdapter) -> a
    java.lang.Runnable access$1(com.dailystudio.memory.menu.ActionBarOverflowMenuListAdapter) -> b
com.dailystudio.memory.menu.ActionBarOverflowMenuListAdapter$1 -> com.dailystudio.memory.menu.e:
    com.dailystudio.memory.menu.ActionBarOverflowMenuListAdapter this$0 -> a
    void onItemsChanged() -> a
com.dailystudio.memory.menu.ActionBarOverflowMenuListAdapter$2 -> com.dailystudio.memory.menu.f:
    com.dailystudio.memory.menu.ActionBarOverflowMenuListAdapter this$0 -> a
    void run() -> run
com.dailystudio.memory.menu.ActionBarOverflowMenuView -> com.dailystudio.memory.menu.ActionBarOverflowMenuView:
    android.widget.ListView mMenuList -> a
    com.dailystudio.memory.menu.ActionBarOverflowMenuListAdapter mMenuListAdapter -> b
    com.dailystudio.memory.menu.ActionBarOverflowMenuView$ActionBarOverflowMenuItemCallbacks mOverflowMenuItemCallbacks -> c
    void initMembers() -> a
    void attchToMenu(android.view.Menu) -> a
    void setActionBarOverflowMenuItemCallbacks(com.dailystudio.memory.menu.ActionBarOverflowMenuView$ActionBarOverflowMenuItemCallbacks) -> setActionBarOverflowMenuItemCallbacks
    void onMeasure(int,int) -> onMeasure
    com.dailystudio.memory.menu.ActionBarOverflowMenuView$ActionBarOverflowMenuItemCallbacks access$0(com.dailystudio.memory.menu.ActionBarOverflowMenuView) -> a
    com.dailystudio.memory.menu.ActionBarOverflowMenuListAdapter access$1(com.dailystudio.memory.menu.ActionBarOverflowMenuView) -> b
com.dailystudio.memory.menu.ActionBarOverflowMenuView$1 -> com.dailystudio.memory.menu.g:
    com.dailystudio.memory.menu.ActionBarOverflowMenuView this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dailystudio.memory.menu.ActionBarOverflowMenuView$ActionBarOverflowMenuItemCallbacks -> com.dailystudio.memory.menu.h:
    void onActionBarOverflowMenuItemSelected(android.view.MenuItem) -> b
com.dailystudio.memory.notify.MemoryNotification -> com.dailystudio.memory.notify.MemoryNotification:
    com.dailystudio.dataobject.Column COLUMN_NOTIFY_ID -> a
    com.dailystudio.dataobject.Column COLUMN_SRC_PACKAGE -> b
    com.dailystudio.dataobject.Column COLUMN_TITLE_RES -> f
    com.dailystudio.dataobject.Column COLUMN_TITLE_TEXT -> g
    com.dailystudio.dataobject.Column COLUMN_CONTENT_RES -> h
    com.dailystudio.dataobject.Column COLUMN_CONTENT_TEXT -> i
    com.dailystudio.dataobject.Column COLUMN_LAUNCH_INTENT -> j
    com.dailystudio.dataobject.Column[] sColumns -> k
    void setNotifyId(int) -> a
    int getNotifyId() -> a
    void setSourcePackage(java.lang.String) -> a
    java.lang.String getSourcePackage() -> h
    void setTitleResource(int) -> b
    int getTitleResource() -> i
    void setTitleText(java.lang.String) -> b
    java.lang.String getTitleText() -> j
    void setContentResource(int) -> c
    int getContentResource() -> k
    void setContentText(java.lang.String) -> c
    java.lang.String getContentText() -> l
    java.lang.String dumpNotifyTitle() -> m
    java.lang.String dumpNotifyText() -> n
    void setNotifyIntent(java.lang.String) -> d
    java.lang.String getNotifyIntent() -> o
    java.lang.String toString() -> toString
com.dailystudio.memory.notify.MemoryNotificationActivity -> com.dailystudio.memory.notify.MemoryNotificationActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onNewIntent(android.content.Intent) -> onNewIntent
    com.dailystudio.app.fragment.AbsLoaderFragment getBaseFragment() -> g
com.dailystudio.memory.notify.MemoryNotificationDatabaseModal -> com.dailystudio.memory.notify.a:
    void addNotify(android.content.Context,int,java.lang.String,int,java.lang.String,int,java.lang.String,java.lang.String) -> a
    void updateNotify(android.content.Context,com.dailystudio.memory.notify.MemoryNotification,int,java.lang.String,int,java.lang.String,int,java.lang.String,java.lang.String) -> a
    com.dailystudio.memory.notify.MemoryNotification findNotify(android.content.Context,int,java.lang.String) -> a
    com.dailystudio.memory.notify.MemoryNotification findNotify(android.content.Context,int) -> a
    void deleteNotify(android.content.Context,com.dailystudio.memory.notify.MemoryNotification) -> a
    void deleteNotify(android.content.Context,int) -> b
com.dailystudio.memory.notify.MemoryNotificationFragment -> com.dailystudio.memory.notify.MemoryNotificationFragment:
    int mDatabaseId -> P
    int mNid -> Q
    java.lang.String mSourcePackage -> R
    android.content.Intent mNotifyIntent -> S
    android.widget.TextView mNotificationContent -> T
    android.widget.TextView mNotificationTitle -> U
    android.view.View mCloseButton -> V
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void setupViews(android.view.View) -> a
    void bindIntent(android.content.Intent) -> b
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
    int getLoaderId() -> M
    android.os.Bundle createLoaderArguments() -> N
    void setNotifyViewed(boolean) -> d
    void updateContent(com.dailystudio.memory.notify.MemoryNotification) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    android.content.Intent access$1(com.dailystudio.memory.notify.MemoryNotificationFragment) -> a
    void access$2(com.dailystudio.memory.notify.MemoryNotificationFragment,boolean) -> a
com.dailystudio.memory.notify.MemoryNotificationFragment$1 -> com.dailystudio.memory.notify.b:
    com.dailystudio.memory.notify.MemoryNotificationFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.dailystudio.memory.notify.MemoryNotificationFragment$2 -> com.dailystudio.memory.notify.c:
    com.dailystudio.memory.notify.MemoryNotificationFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.dailystudio.memory.notify.MemoryNotificationLoader -> com.dailystudio.memory.notify.d:
    int mNid -> v
    java.lang.String mSourcePackage -> w
    java.lang.Class getObjectClass() -> y
    com.dailystudio.dataobject.query.Query getQuery(java.lang.Class) -> b
com.dailystudio.memory.notify.MemoryNotificationsLoader -> com.dailystudio.memory.notify.e:
    java.lang.Class getObjectClass() -> y
    com.dailystudio.dataobject.query.Query getQuery(java.lang.Class) -> b
com.dailystudio.memory.notify.MemoryNotify -> com.dailystudio.memory.notify.f:
    void notifySystemInfo(android.content.Context,int,java.lang.CharSequence,android.content.Intent,int) -> a
    void notifySystemInfo(android.content.Context,int,int,java.lang.CharSequence,java.lang.CharSequence,android.content.Intent,int) -> a
    void cancelNotifySystemInfo(android.content.Context,int) -> a
    void notifyInfo(android.content.Context,int,int,int,android.content.Intent) -> a
    void notifyInfo(android.content.Context,int,java.lang.String,int,java.lang.String,int,android.content.Intent) -> a
com.dailystudio.memory.notify.MemoryNotifyCommandReceiver -> com.dailystudio.memory.notify.MemoryNotifyCommandReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.dailystudio.memory.notify.MemoryNotifyCursorAdapter -> com.dailystudio.memory.notify.g:
    long getItemId(int) -> getItemId
com.dailystudio.memory.notify.MemoryNotifyFragment -> com.dailystudio.memory.notify.MemoryNotifyFragment:
    android.support.v4.widget.CursorAdapter mAdapter -> P
    com.dailystudio.memory.notify.MemoryNotifyHostView mNotifyHostView -> Q
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void setupViews(android.view.View) -> a
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> a
    void swapCursor(android.database.Cursor) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
    int getLoaderId() -> M
    android.os.Bundle createLoaderArguments() -> N
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
com.dailystudio.memory.notify.MemoryNotifyHostView -> com.dailystudio.memory.notify.MemoryNotifyHostView:
    android.content.Context mContext -> a
    android.widget.Adapter mAdapter -> b
    com.dailystudio.memory.notify.MemoryNotifyHostView$NotifyDataSetObserver mDataSetObserver -> c
    android.view.ViewGroup mNotifySlotsRoot -> d
    java.util.Set mReservedViews -> e
    android.util.SparseIntArray mActivedViews -> f
    android.view.animation.Animation mNotifyInAnim -> g
    java.lang.Runnable mRootDisplayRunnable -> h
    android.view.View$OnClickListener mNotifyChildOnClickListener -> i
    void initMembers() -> a
    void setAdapter(android.widget.Adapter) -> setAdapter
    void bindViews() -> b
    void showChild(int) -> a
    void hideChild(int) -> b
    android.view.animation.Animation access$0(com.dailystudio.memory.notify.MemoryNotifyHostView) -> a
    android.util.SparseIntArray access$1(com.dailystudio.memory.notify.MemoryNotifyHostView) -> b
    void access$2(com.dailystudio.memory.notify.MemoryNotifyHostView,int) -> a
    void access$3(com.dailystudio.memory.notify.MemoryNotifyHostView) -> c
    void access$4(com.dailystudio.memory.notify.MemoryNotifyHostView,int) -> b
com.dailystudio.memory.notify.MemoryNotifyHostView$1 -> com.dailystudio.memory.notify.h:
    com.dailystudio.memory.notify.MemoryNotifyHostView this$0 -> a
    void run() -> run
com.dailystudio.memory.notify.MemoryNotifyHostView$2 -> com.dailystudio.memory.notify.i:
    com.dailystudio.memory.notify.MemoryNotifyHostView this$0 -> a
    void onClick(android.view.View) -> onClick
com.dailystudio.memory.notify.MemoryNotifyHostView$NotifyChildDisappearRunnable -> com.dailystudio.memory.notify.j:
    int mViewIndex -> b
    com.dailystudio.memory.notify.MemoryNotifyHostView this$0 -> a
    void run() -> run
com.dailystudio.memory.notify.MemoryNotifyHostView$NotifyChildDisplayRunnable -> com.dailystudio.memory.notify.k:
    int mViewIndex -> b
    com.dailystudio.memory.notify.MemoryNotifyHostView this$0 -> a
    void run() -> run
com.dailystudio.memory.notify.MemoryNotifyHostView$NotifyDataSetObserver -> com.dailystudio.memory.notify.l:
    com.dailystudio.memory.notify.MemoryNotifyHostView this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.dailystudio.memory.plugin.MemoryPlugin -> com.dailystudio.memory.plugin.a:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void startTaskActionExecutor(com.dailystudio.memory.plugin.TaskActionExecutor) -> a
    boolean onRegister(android.content.Context,long) -> a
    boolean onUnregister(android.content.Context,long) -> b
    boolean onCreateTask(android.content.Context,int,java.lang.String,long) -> a
    boolean onDestoryTask(android.content.Context,int,long) -> a
    boolean onExecuteTask(android.content.Context,int,long) -> b
    boolean onPauseTask(android.content.Context,int,long) -> c
    boolean onResumeTask(android.content.Context,int,long) -> d
    boolean onPrepareTaskObservables(android.content.Context,int,long) -> e
    boolean onDestoryTaskObservables(android.content.Context,int,long) -> f
    boolean onKeepAliveTask(android.content.Context,int,long) -> g
    boolean onClearTasks(android.content.Context,long) -> c
    android.content.Intent getKeepAliveTaskServiceIntent(android.content.Context) -> a
    android.content.Intent getAppWidgetDataServiceIntent(android.content.Context) -> b
com.dailystudio.memory.plugin.MemoryPluginInfo -> com.dailystudio.memory.plugin.b:
    android.content.Context mContext -> a
    android.content.ComponentName mComponent -> b
    java.lang.String mLabel -> c
    int mIconRes -> d
    int mPrivacyPolicyRes -> e
    android.net.Uri mShowcasePageUri -> f
    java.lang.String mSearchDatabaseAuthority -> g
    void initMembers() -> o
    android.content.ComponentName getComponent() -> b
    java.lang.String getPackageName() -> d
    void setLabel(java.lang.String) -> a
    java.lang.String getLabel() -> e
    void setIconResource(int) -> a
    int getIconResource() -> f
    void setShowcasePage(android.net.Uri) -> a
    android.net.Uri getShowcasePage() -> g
    void setPrivacyPolicResource(int) -> b
    int getPrivacyPolicResource() -> h
    com.dailystudio.memory.plugin.privacy.PrivacyPolicy dumpPrivacyPolicy() -> i
    void setSearchableAuthority(java.lang.String) -> b
    java.lang.String getSearchableAuthority() -> j
    void register() -> k
    void unregister() -> l
    void createTask(java.lang.String,int) -> a
    void destroyTask(int) -> c
    void pauseTask(int) -> d
    void executeTask(int) -> e
    void keepAliveTask(int) -> f
    void sendBroadcast(android.content.Intent) -> a
    java.lang.String getSingletonKey() -> m
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    java.lang.String getGroup() -> n
    java.lang.Object getSingletonKey() -> c
    java.lang.Object getGroup() -> a
com.dailystudio.memory.plugin.PluginFactory -> com.dailystudio.memory.plugin.c:
    com.dailystudio.memory.plugin.PluginFactory getInstance() -> b
    com.dailystudio.memory.plugin.MemoryPluginInfo createPluginInfo(android.content.Context,android.content.pm.ResolveInfo) -> a
    com.dailystudio.memory.plugin.MemoryPluginInfo createPluginInfo(android.content.ComponentName) -> a
    com.dailystudio.memory.plugin.MemoryPluginInfo newObject(android.content.ComponentName) -> b
    void cacheObject(com.dailystudio.memory.plugin.MemoryPluginInfo) -> a
    com.dailystudio.memory.plugin.MemoryPluginInfo findObject(android.content.ComponentName) -> c
    boolean parseAttributesFromXml(com.dailystudio.memory.plugin.MemoryPluginInfo,org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> a
    boolean parsePluginAttributes(com.dailystudio.memory.plugin.MemoryPluginInfo,android.util.AttributeSet,android.content.res.Resources) -> a
    com.dailystudio.memory.task.TaskHost createHost(android.util.AttributeSet,android.content.res.Resources) -> a
    java.lang.Object findObject(java.lang.Object) -> c
    void cacheObject(java.lang.Object) -> d
    java.lang.Object newObject(java.lang.Object) -> a
com.dailystudio.memory.plugin.PluginManager -> com.dailystudio.memory.plugin.d:
    com.dailystudio.memory.plugin.PluginManager getInstance() -> i
    void removeTaskHosts(com.dailystudio.memory.plugin.MemoryPluginInfo) -> d
    void removeObject(com.dailystudio.memory.plugin.MemoryPluginInfo) -> a
    com.dailystudio.memory.plugin.MemoryPluginInfo removeObject(java.lang.String) -> a
    void clearObjects() -> c
    void registerPlugin(com.dailystudio.memory.plugin.MemoryPluginInfo) -> b
    void unregisterPlugin(com.dailystudio.memory.plugin.MemoryPluginInfo) -> c
    com.dailystudio.memory.plugin.MemoryPluginInfo getPlugin(java.lang.String) -> b
    void clearPlugins() -> j
    java.util.List listPlugins(java.lang.String) -> c
    java.util.List listPlugins() -> k
    int countPlugins(java.lang.String) -> d
    com.dailystudio.manager.IGroupObject removeObject(java.lang.Object) -> b
    void removeObject(com.dailystudio.manager.IGroupObject) -> b
com.dailystudio.memory.plugin.PluginObserverable -> com.dailystudio.memory.plugin.PluginObserverable:
    void onCreate() -> a
    void onDestroy() -> b
    void onPause() -> d
    void onResume() -> e
com.dailystudio.memory.plugin.TaskActionExecutor -> com.dailystudio.memory.plugin.e:
    java.util.concurrent.BlockingQueue mPendingQueue -> b
    boolean mEndFlag -> c
    java.lang.Object mWaitObject -> d
    com.dailystudio.memory.plugin.TaskActionExecutor sInstance -> e
    android.os.Handler mHandler -> f
    com.dailystudio.memory.plugin.TaskActionExecutor getInstance() -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void tryToExecuteAction(com.dailystudio.memory.plugin.actions.TaskAction) -> a
    void onCancelled() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> a
com.dailystudio.memory.plugin.actions.ClearTasksAction -> com.dailystudio.memory.plugin.a.a:
    boolean doTaskAction(int,long) -> a
com.dailystudio.memory.plugin.actions.CreateTaskAction -> com.dailystudio.memory.plugin.a.b:
    boolean doTaskAction(int,long) -> a
com.dailystudio.memory.plugin.actions.DestroyTaskAction -> com.dailystudio.memory.plugin.a.c:
    boolean doTaskAction(int,long) -> a
com.dailystudio.memory.plugin.actions.DestroyTaskObservablesAction -> com.dailystudio.memory.plugin.a.d:
    boolean doTaskAction(int,long) -> a
com.dailystudio.memory.plugin.actions.ExecuteTaskAction -> com.dailystudio.memory.plugin.a.e:
    boolean doTaskAction(int,long) -> a
com.dailystudio.memory.plugin.actions.KeepAliveTaskAction -> com.dailystudio.memory.plugin.a.f:
    boolean doTaskAction(int,long) -> a
com.dailystudio.memory.plugin.actions.PauseTaskAction -> com.dailystudio.memory.plugin.a.g:
    boolean doTaskAction(int,long) -> a
com.dailystudio.memory.plugin.actions.PrepareTaskObservablesAction -> com.dailystudio.memory.plugin.a.h:
    boolean doTaskAction(int,long) -> a
com.dailystudio.memory.plugin.actions.ResumeTaskAction -> com.dailystudio.memory.plugin.a.i:
    boolean doTaskAction(int,long) -> a
com.dailystudio.memory.plugin.actions.TaskAction -> com.dailystudio.memory.plugin.a.j:
    android.content.Context mContext -> a
    com.dailystudio.memory.plugin.MemoryPlugin mPlugin -> b
    android.content.Intent mIntent -> c
    boolean mRunInMainThread -> d
    void run() -> run
    boolean isRunInMainThread() -> a
    java.lang.String toString() -> toString
    boolean doTaskAction(int,long) -> a
com.dailystudio.memory.plugin.privacy.PrivacyPolicy -> com.dailystudio.memory.plugin.b.a:
    java.lang.String collection -> a
    java.lang.String toString() -> toString
com.dailystudio.memory.plugin.privacy.PrivacyPolicyXmlParser -> com.dailystudio.memory.plugin.b.b:
    com.dailystudio.memory.plugin.privacy.PrivacyPolicy parse(org.xmlpull.v1.XmlPullParser) -> a
    java.lang.String readColltection(org.xmlpull.v1.XmlPullParser) -> b
    java.lang.String readText(org.xmlpull.v1.XmlPullParser) -> c
com.dailystudio.memory.prefs.MemoryPrefs -> com.dailystudio.memory.e.a:
    com.dailystudio.memory.prefs.MemoryPrefs sPref -> a
    java.lang.String getPrefName() -> a
    boolean isShowSlideMenu(android.content.Context) -> a
    void setShowSlideMenu(android.content.Context,boolean) -> a
com.dailystudio.memory.promotapps.PromoteApp -> com.dailystudio.memory.promotapps.PromoteApp:
    boolean isPublished -> isPublished
    java.lang.String appName -> appName
    java.lang.String packageName -> packageName
    java.lang.String enabledIconRes -> enabledIconRes
    java.lang.String disabledIconRes -> disabledIconRes
    java.lang.String toString() -> toString
    boolean isInstalled(android.content.Context) -> isInstalled
com.dailystudio.memory.promotapps.PromoteApps -> com.dailystudio.memory.promotapps.PromoteApps:
    int version -> version
    com.dailystudio.memory.promotapps.PromoteApp[] apps -> apps
com.dailystudio.memory.promotapps.PromoteAppsInterface -> com.dailystudio.memory.promotapps.PromoteAppsInterface:
    java.lang.String PROMOTE_APPS_FILE -> PROMOTE_APPS_FILE
    android.content.Context mContext -> mContext
    java.lang.String getPromoteAppsJsonFromFile() -> getPromoteAppsJsonFromFile
    com.dailystudio.memory.promotapps.PromoteApps getPromoteApps() -> getPromoteApps
    com.dailystudio.memory.promotapps.PromoteApps parseFromJSonString(java.lang.String) -> parseFromJSonString
    java.lang.String getPromoteAppsInJson() -> getPromoteAppsInJson
com.dailystudio.memory.record.MemoryRecord -> com.dailystudio.memory.record.MemoryRecord:
    com.dailystudio.dataobject.Column COLUMN_NAME -> a
    com.dailystudio.dataobject.Column COLUMN_SCORE -> b
    com.dailystudio.dataobject.Column COLUMN_DELTA_SCORE -> f
    com.dailystudio.dataobject.Column COLUMN_REVIEWED -> g
    com.dailystudio.dataobject.Column[] sCloumns -> h
    void setRecordName(java.lang.String) -> a
    java.lang.String getRecordName() -> a
    void setRecordScore(long) -> a
    long getRecordScore() -> h
    void setDeltaScore(long) -> b
    long getDeltaScore() -> i
    void setReviewed(boolean) -> a
    boolean isReviewed() -> j
    java.lang.String toString() -> toString
com.dailystudio.memory.record.MemoryRecordDatabaseModal -> com.dailystudio.memory.record.a:
    com.dailystudio.memory.record.MemoryRecord getRecord(android.content.Context,java.lang.String) -> a
    com.dailystudio.memory.record.MemoryRecord getRecord(android.content.Context,java.lang.String,java.lang.String) -> a
    void saveNewRecord(android.content.Context,java.lang.String,long) -> a
    void saveNewRecord(android.content.Context,java.lang.String,java.lang.String,long) -> a
    void reviewRecord(android.content.Context,java.lang.String) -> b
    void reviewRecord(android.content.Context,java.lang.String,java.lang.String) -> b
com.dailystudio.memory.search.MemorySearchSuggestionsProvider -> com.dailystudio.memory.search.MemorySearchSuggestionsProvider:
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    void fillBuildinKeywordsSuggestions(android.database.MatrixCursor,com.dailystudio.memory.searchable.MemorySearchableQuery) -> a
    com.dailystudio.memory.searchable.MemorySearchableQuery analyzeInputs(java.lang.String) -> a
    void fillPluginsSuggestions(android.database.MatrixCursor,com.dailystudio.memory.searchable.MemorySearchableQuery) -> b
com.dailystudio.memory.searchable.MemorySearchableContent -> com.dailystudio.memory.searchable.a:
    java.lang.String[] COLUMNS -> a
    int id -> b
    java.lang.String text1 -> c
    java.lang.String text2 -> d
    java.lang.String icon1ResId -> e
    java.lang.String icon2ResId -> f
    java.lang.String time -> g
    java.lang.Object[] toColumnValues() -> a
    com.dailystudio.memory.searchable.MemorySearchableContent parseFromCursor(android.database.Cursor) -> a
com.dailystudio.memory.searchable.MemorySearchableContentProvider -> com.dailystudio.memory.searchable.b:
    boolean onCreate() -> onCreate
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    android.database.Cursor queryData(java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> b
    android.database.Cursor querySuggestions(java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> a
    com.dailystudio.memory.searchable.MemorySearchableQuery buildSearchableQuery(java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> c
    java.lang.String composeResourceUri(android.content.Context,int) -> a
    java.lang.String composeResourceUri(android.content.Context,java.lang.String,int) -> a
    android.database.Cursor doQueryData(com.dailystudio.memory.searchable.MemorySearchableQuery) -> b
    java.util.List doQuerySuggestions(com.dailystudio.memory.searchable.MemorySearchableQuery) -> a
    com.dailystudio.memory.searchable.MemorySearchableContent memoryToSearchableContent(android.database.Cursor) -> a
    java.lang.String getSearchableAuthority() -> a
com.dailystudio.memory.searchable.MemorySearchableQuery -> com.dailystudio.memory.searchable.MemorySearchableQuery:
    com.dailystudio.memory.searchable.queryparams.QueryParamterAnanlyzer[] sAnalyzers -> sAnalyzers
    java.lang.String queryInputs -> queryInputs
    java.util.List keywordQueryParams -> keywordQueryParams
    java.util.List timeQueryParams -> timeQueryParams
    java.util.List textQueryParams -> textQueryParams
    void buildFromInputs(java.lang.String) -> buildFromInputs
    void dispatchAndAddQueryParameters(com.dailystudio.memory.searchable.queryparams.QueryParameter) -> dispatchAndAddQueryParameters
    java.lang.String toString() -> toString
com.dailystudio.memory.searchable.MemorySearchableQuery$AnalyzedResult -> com.dailystudio.memory.searchable.c:
    java.util.List params -> a
    java.lang.String remainedKeywords -> b
    java.lang.String toString() -> toString
com.dailystudio.memory.searchable.MemorySearchableSuggestion -> com.dailystudio.memory.searchable.d:
    java.lang.String[] COLUMNS -> a
    int id -> b
    java.lang.String query -> c
    java.lang.String text1 -> d
    java.lang.String text2 -> e
    java.lang.String intentData -> f
    java.lang.String icon1ResId -> g
    java.lang.String icon2ResId -> h
    java.lang.String intentExtraData -> i
    java.lang.Object[] toColumnValues() -> a
    com.dailystudio.memory.searchable.MemorySearchableSuggestion parseFromCursor(android.database.Cursor) -> a
com.dailystudio.memory.searchable.TimeSortedCursor -> com.dailystudio.memory.searchable.e:
    java.text.Collator sCollator -> e
    java.util.Comparator sTimeStringComparator -> a
    java.util.List sortList -> b
    android.database.Cursor mCursor -> c
    int mPos -> d
    boolean moveToPosition(int) -> moveToPosition
    boolean moveToFirst() -> moveToFirst
    boolean moveToLast() -> moveToLast
    boolean moveToNext() -> moveToNext
    boolean moveToPrevious() -> moveToPrevious
    boolean move(int) -> move
    int getPosition() -> getPosition
    java.text.Collator access$0() -> a
com.dailystudio.memory.searchable.TimeSortedCursor$1 -> com.dailystudio.memory.searchable.f:
    int compare(com.dailystudio.memory.searchable.TimeSortedCursor$SortEntry,com.dailystudio.memory.searchable.TimeSortedCursor$SortEntry) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.dailystudio.memory.searchable.TimeSortedCursor$SortEntry -> com.dailystudio.memory.searchable.g:
    java.lang.String timeKey -> a
    int order -> b
    com.dailystudio.memory.searchable.TimeSortedCursor this$0 -> c
com.dailystudio.memory.searchable.queryparams.KeywordQueryParameter -> com.dailystudio.memory.searchable.queryparams.KeywordQueryParameter:
    java.util.Map sTranlators -> sTranlators
    java.lang.String keyword -> keyword
    boolean isValid() -> isValid
    java.lang.String toString() -> toString
    com.dailystudio.memory.searchable.queryparams.QueryParameter checkOrTranlateBuildinKeyword(com.dailystudio.memory.searchable.queryparams.KeywordQueryParameter) -> checkOrTranlateBuildinKeyword
com.dailystudio.memory.searchable.queryparams.KeywordQueryParameterAnanlzyer -> com.dailystudio.memory.searchable.queryparams.a:
    java.lang.String getQueryPattern() -> a
    com.dailystudio.memory.searchable.queryparams.QueryParameter createParamter() -> b
    void onFillMatchedParameters(java.util.regex.Matcher,com.dailystudio.memory.searchable.queryparams.QueryParameter) -> a
com.dailystudio.memory.searchable.queryparams.QueryParameter -> com.dailystudio.memory.searchable.queryparams.b:
    java.lang.String QUERY_TYPE_DATE -> QUERY_TYPE_DATE
    java.lang.String QUERY_TYPE_TEXT -> QUERY_TYPE_TEXT
    java.lang.String QUERY_TYPE_KEYWORD -> QUERY_TYPE_KEYWORD
    java.lang.String queryType -> queryType
    boolean isValid() -> isValid
    java.lang.String toString() -> toString
com.dailystudio.memory.searchable.queryparams.QueryParamterAnanlyzer -> com.dailystudio.memory.searchable.queryparams.c:
    com.dailystudio.memory.searchable.MemorySearchableQuery$AnalyzedResult analyzeKeywords(java.lang.String) -> a
    com.dailystudio.memory.searchable.queryparams.QueryParameter createParamter() -> b
    java.lang.String getQueryPattern() -> a
    void onFillMatchedParameters(java.util.regex.Matcher,com.dailystudio.memory.searchable.queryparams.QueryParameter) -> a
    void printMatcher(java.util.regex.Matcher) -> a
com.dailystudio.memory.searchable.queryparams.TextQueryParameter -> com.dailystudio.memory.searchable.queryparams.TextQueryParameter:
    java.lang.String text -> text
    boolean isValid() -> isValid
    java.lang.String toString() -> toString
com.dailystudio.memory.searchable.queryparams.TextQueryParameterAnanlzyer -> com.dailystudio.memory.searchable.queryparams.d:
    java.lang.String getQueryPattern() -> a
    com.dailystudio.memory.searchable.queryparams.QueryParameter createParamter() -> b
    void onFillMatchedParameters(java.util.regex.Matcher,com.dailystudio.memory.searchable.queryparams.QueryParameter) -> a
com.dailystudio.memory.searchable.queryparams.TimeQueryParameter -> com.dailystudio.memory.searchable.queryparams.TimeQueryParameter:
    long timeBegin -> timeBegin
    long timeEnd -> timeEnd
    boolean isValid() -> isValid
    java.lang.String toString() -> toString
com.dailystudio.memory.searchable.queryparams.TimeQueryParameterAnanlzyer -> com.dailystudio.memory.searchable.queryparams.e:
    java.lang.String getQueryPattern() -> a
    com.dailystudio.memory.searchable.queryparams.QueryParameter createParamter() -> b
    void onFillMatchedParameters(java.util.regex.Matcher,com.dailystudio.memory.searchable.queryparams.QueryParameter) -> a
    void analyzeTimeRange(com.dailystudio.memory.searchable.queryparams.TimeQueryParameter,java.lang.String) -> a
    long analyzeTime(java.lang.String) -> b
com.dailystudio.memory.searchable.queryparams.keywords.AbsKeywordTranslator -> com.dailystudio.memory.searchable.queryparams.a.a:
    com.dailystudio.memory.searchable.queryparams.QueryParameter tranlate(com.dailystudio.memory.searchable.queryparams.KeywordQueryParameter) -> a
com.dailystudio.memory.searchable.queryparams.keywords.BuildinKeywords -> com.dailystudio.memory.searchable.queryparams.a.b:
    java.lang.String[] sKeywords -> a
    java.lang.String[] matchedKeywords(java.lang.String) -> a
com.dailystudio.memory.searchable.queryparams.keywords.KeywordLastWeekTranslator -> com.dailystudio.memory.searchable.queryparams.a.c:
    com.dailystudio.memory.searchable.queryparams.QueryParameter tranlate(com.dailystudio.memory.searchable.queryparams.KeywordQueryParameter) -> a
com.dailystudio.memory.searchable.queryparams.keywords.KeywordThisMonthTranslator -> com.dailystudio.memory.searchable.queryparams.a.d:
    com.dailystudio.memory.searchable.queryparams.QueryParameter tranlate(com.dailystudio.memory.searchable.queryparams.KeywordQueryParameter) -> a
com.dailystudio.memory.searchable.queryparams.keywords.KeywordThisWeekTranslator -> com.dailystudio.memory.searchable.queryparams.a.e:
    com.dailystudio.memory.searchable.queryparams.QueryParameter tranlate(com.dailystudio.memory.searchable.queryparams.KeywordQueryParameter) -> a
com.dailystudio.memory.searchable.queryparams.keywords.KeywordTodayTranslator -> com.dailystudio.memory.searchable.queryparams.a.f:
    com.dailystudio.memory.searchable.queryparams.QueryParameter tranlate(com.dailystudio.memory.searchable.queryparams.KeywordQueryParameter) -> a
com.dailystudio.memory.searchable.queryparams.keywords.KeywordYesterdayTranslator -> com.dailystudio.memory.searchable.queryparams.a.g:
    com.dailystudio.memory.searchable.queryparams.QueryParameter tranlate(com.dailystudio.memory.searchable.queryparams.KeywordQueryParameter) -> a
com.dailystudio.memory.showcase.Showcase -> com.dailystudio.memory.f.a:
    void prepareShowcase(android.content.Context,java.lang.String) -> a
com.dailystudio.memory.stats.StatsPieces -> com.dailystudio.memory.g.a:
    android.content.Context mContext -> a
    android.content.Context getContext() -> a
    long statisticsPieces() -> b
com.dailystudio.memory.stats.StatsPieces$QueryPieceResultBroadcastReceiver -> com.dailystudio.memory.g.b:
    long mCount -> b
    com.dailystudio.memory.stats.StatsPieces this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void releaseLock() -> b
    long getPiecesCount() -> a
com.dailystudio.memory.task.ConditionalTaskHost -> com.dailystudio.memory.task.ConditionalTaskHost:
com.dailystudio.memory.task.PeriodicalTaskHost -> com.dailystudio.memory.task.PeriodicalTaskHost:
    int mExecPeroidMillis -> a
    android.app.PendingIntent mAlarmSender -> k
    void initMembers() -> t
    void setExecPeroid(int) -> a
    int getExecPeroid() -> b
    long predictNextExecTime() -> d
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    void startTask() -> e
    android.content.ComponentName composeTaskComponent() -> u
    void stopTask() -> f
com.dailystudio.memory.task.Task -> com.dailystudio.memory.task.a:
    android.content.Context mContext -> a
    int mTaskId -> b
    boolean mInDBUpdates -> c
    android.os.Handler mHandler -> d
    void initMembers() -> e
    int getTaskId() -> a
    void setTaskId(int) -> a
    java.lang.Integer getSingletonKey() -> b
    boolean isInDatabaseUpdates() -> d
    void onCreate(android.content.Context,long) -> a
    void onDestroy(android.content.Context,long) -> e
    void onPause(android.content.Context,long) -> c
    void onResume(android.content.Context,long) -> d
    void onPrepareObservables(android.content.Context,long) -> f
    void onDestoryObservables(android.content.Context,long) -> g
    void onExecute(android.content.Context,long) -> b
    java.lang.Object getSingletonKey() -> c
com.dailystudio.memory.task.TaskFactory -> com.dailystudio.memory.task.b:
    int sTaskIdSeed -> a
    com.dailystudio.memory.task.TaskFactory getInstance() -> b
    com.dailystudio.memory.task.Task createTask(java.lang.String) -> c
    com.dailystudio.memory.task.Task newObject(java.lang.String) -> d
    java.lang.Object newObject(java.lang.String) -> a
com.dailystudio.memory.task.TaskHost -> com.dailystudio.memory.task.c:
    android.content.Context mContext -> b
    int mTaskId -> c
    java.lang.String mLabel -> d
    android.content.ComponentName mComponent -> e
    java.lang.String mTaskClass -> f
    int mSuccessTimes -> g
    int mFailureTimes -> h
    long mLastExecTime -> i
    long mNextExecTime -> j
    boolean mIsOneshot -> a
    com.dailystudio.memory.task.TaskStatus mStatus -> k
    void initMembers() -> b
    int getTaskId() -> g
    void setTaskId(int) -> b
    void setLabel(java.lang.String) -> a
    java.lang.String getLabel() -> h
    void execSuccess() -> i
    void execFailure() -> j
    long predictNextExecTime() -> d
    boolean isOneshot() -> k
    void setOneShot(boolean) -> a
    android.content.ComponentName getComponent() -> l
    void setComponent(android.content.ComponentName) -> a
    void setTaskClass(java.lang.String) -> b
    com.dailystudio.memory.plugin.MemoryPluginInfo getPlugin() -> m
    void createTask() -> n
    void destroyTask() -> o
    void startTask() -> e
    void stopTask() -> f
    void executeTask() -> p
    void keepAliveTask() -> q
    java.lang.String getGroup() -> r
    java.lang.Integer getSingletonKey() -> s
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    void run() -> run
    void saveIntoDatabase(java.lang.String) -> c
    java.lang.Object getSingletonKey() -> c
    java.lang.Object getGroup() -> a
com.dailystudio.memory.task.TaskHostAction -> com.dailystudio.memory.task.TaskHostAction:
    com.dailystudio.dataobject.Column COLUMN_TASK_ID -> a
    com.dailystudio.dataobject.Column COLUMN_TASK_CLASS -> b
    com.dailystudio.dataobject.Column COLUMN_TASK_ACTION -> f
    com.dailystudio.dataobject.Column[] sColumns -> g
com.dailystudio.memory.task.TaskHostFactory -> com.dailystudio.memory.task.d:
    int sTaskIdSeed -> a
    java.util.Map sTaskHostClassesMap -> b
    com.dailystudio.memory.task.TaskHostFactory getInstance() -> b
    com.dailystudio.memory.task.TaskHost allocateHost(java.lang.String) -> c
    com.dailystudio.memory.task.TaskHost newObject(java.lang.String) -> d
    java.lang.Object newObject(java.lang.String) -> a
com.dailystudio.memory.task.TaskHostManager -> com.dailystudio.memory.task.e:
    android.content.BroadcastReceiver mResultReceiver -> e
    android.content.BroadcastReceiver mKeepAliveReceiver -> f
    android.content.BroadcastReceiver mRequestExecuteReceiver -> g
    void registerResultReceiver() -> m
    void unregisterResultReceiver() -> n
    void registerKeepAliveReceiver() -> o
    void unregisterKeepAliveReceiver() -> p
    void registerRequestReceiver() -> q
    void unregisterRequestReceiver() -> r
    void addObject(com.dailystudio.memory.task.TaskHost) -> a
    void removeObject(com.dailystudio.memory.task.TaskHost) -> b
    com.dailystudio.memory.task.TaskHost removeObject(java.lang.Integer) -> a
    void clearObjects() -> c
    com.dailystudio.memory.task.TaskHostManager getInstance() -> i
    void registerTask(com.dailystudio.memory.task.TaskHost) -> c
    void unregisterTask(com.dailystudio.memory.task.TaskHost) -> d
    void clearTasks() -> j
    com.dailystudio.memory.task.TaskHost getTask(int) -> a
    java.util.List getTasks(android.content.ComponentName) -> a
    java.util.List listTasks() -> k
    int countTasks() -> l
    void recoveryTask(int) -> b
    void addObject(com.dailystudio.manager.IGroupObject) -> a
    com.dailystudio.manager.IGroupObject removeObject(java.lang.Object) -> b
    void removeObject(com.dailystudio.manager.IGroupObject) -> b
    android.content.BroadcastReceiver access$3(com.dailystudio.memory.task.TaskHostManager) -> a
com.dailystudio.memory.task.TaskHostManager$1 -> com.dailystudio.memory.task.f:
    com.dailystudio.memory.task.TaskHostManager this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.dailystudio.memory.task.TaskHostManager$2 -> com.dailystudio.memory.task.g:
    com.dailystudio.memory.task.TaskHostManager this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void keepAliveHostsInPackage(java.lang.String) -> a
    void keepAliveHostsInPlugin(com.dailystudio.memory.plugin.MemoryPluginInfo) -> a
com.dailystudio.memory.task.TaskHostManager$3 -> com.dailystudio.memory.task.h:
    com.dailystudio.memory.task.TaskHostManager this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.dailystudio.memory.task.TaskManager -> com.dailystudio.memory.task.i:
    com.dailystudio.memory.task.TaskManager getInstance() -> d
    void registerTask(com.dailystudio.memory.task.Task) -> a
    void unregisterTask(com.dailystudio.memory.task.Task) -> b
    com.dailystudio.memory.task.Task getTask(int) -> a
    java.util.List listTasks() -> i
com.dailystudio.memory.task.TaskStatus -> com.dailystudio.memory.task.j:
    com.dailystudio.memory.task.TaskStatus IDLE -> a
    com.dailystudio.memory.task.TaskStatus RUNNING -> b
    com.dailystudio.memory.task.TaskStatus DONE -> c
    com.dailystudio.memory.task.TaskStatus CANCELLED -> d
    com.dailystudio.memory.task.TaskStatus[] ENUM$VALUES -> e
    com.dailystudio.memory.task.TaskStatus[] values() -> values
    com.dailystudio.memory.task.TaskStatus valueOf(java.lang.String) -> valueOf
com.dailystudio.memory.task.TasksKeepAliveService -> com.dailystudio.memory.task.k:
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
com.dailystudio.memory.ui.AbsResObjectAdapter -> com.dailystudio.memory.ui.a:
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void bindViewWithResource(android.view.View,android.content.Context,com.dailystudio.nativelib.application.IResourceObject) -> a
    android.view.View createViewIfRequired(int,android.view.View,android.view.ViewGroup) -> a
com.dailystudio.memory.ui.AnimatedImageView -> com.dailystudio.memory.ui.AnimatedImageView:
    android.content.Context mContext -> a
    void initMembers() -> c
    void playAnimation() -> a
    void stopAnimation() -> b
com.dailystudio.memory.ui.AnimatedImageView$AnimStartRunnable -> com.dailystudio.memory.ui.b:
    android.graphics.drawable.AnimationDrawable mAnimDrawable -> b
    com.dailystudio.memory.ui.AnimatedImageView this$0 -> a
    void run() -> run
com.dailystudio.memory.ui.AnimatedImageView$AnimStopRunnable -> com.dailystudio.memory.ui.c:
    android.graphics.drawable.AnimationDrawable mAnimDrawable -> b
    com.dailystudio.memory.ui.AnimatedImageView this$0 -> a
    void run() -> run
com.dailystudio.memory.ui.CountView -> com.dailystudio.memory.ui.CountView:
    int DEFAULT_MINI_DIGITS -> b
    long DELTA_INC_DELAY -> c
    long DURATION_ESTIMATION_UNIT -> d
    long MAX_COUNT_DURATION -> e
    android.content.Context mContext -> a
    int mMiniDigits -> f
    java.lang.String mCountValueTempl -> g
    long mDestCount -> h
    long mCurrCount -> i
    com.dailystudio.memory.ui.CountView$CountRunnable mCountRunable -> j
    com.dailystudio.memory.ui.CountView$OnCountListener mOnCountListener -> k
    void initMembers() -> b
    void setMinimumDigits(int) -> setMinimumDigits
    int getMinimumDigits() -> getMinimumDigits
    void countTo(long) -> a
    void abortCount() -> a
    void finishCount() -> c
    void finishCount(boolean) -> a
    void updateCountValue() -> d
    void setOnCountListener(com.dailystudio.memory.ui.CountView$OnCountListener) -> setOnCountListener
    void access$0(com.dailystudio.memory.ui.CountView,long) -> a
    long access$1(com.dailystudio.memory.ui.CountView) -> a
    long access$2(com.dailystudio.memory.ui.CountView) -> b
    void access$3(com.dailystudio.memory.ui.CountView) -> c
    void access$4(com.dailystudio.memory.ui.CountView) -> d
com.dailystudio.memory.ui.CountView$CountRunnable -> com.dailystudio.memory.ui.d:
    long mStartTime -> b
    float mDelatVal -> c
    com.dailystudio.memory.ui.CountView this$0 -> a
    void run() -> run
com.dailystudio.memory.ui.CountView$OnCountListener -> com.dailystudio.memory.ui.e:
    void onCountStart(com.dailystudio.memory.ui.CountView,long) -> a
    void onCountAbort(com.dailystudio.memory.ui.CountView,long) -> c
    void onCountFinished(com.dailystudio.memory.ui.CountView,long) -> b
com.dailystudio.memory.ui.DurationCountView -> com.dailystudio.memory.ui.DurationCountView:
    com.dailystudio.memory.ui.CountView[] mCountViews -> b
    android.widget.TextView[] mCountLabels -> c
    long[] mCountValues -> d
    android.content.Context mContext -> a
    long mDuration -> e
    com.dailystudio.memory.ui.DurationCountView$OnCountDurationListener mOnCountDurationListener -> f
    com.dailystudio.memory.ui.CountView$OnCountListener mOnCountListener -> g
    void initMembers() -> a
    void bindCountListener() -> b
    void setTextStyle(int) -> setTextStyle
    void setTextColor(int) -> setTextColor
    void setTextSize(float) -> setTextSize
    void setDuration(long) -> setDuration
    void setOnCountDurationListener(com.dailystudio.memory.ui.DurationCountView$OnCountDurationListener) -> setOnCountDurationListener
    void countValue(int) -> a
    com.dailystudio.memory.ui.DurationCountView$OnCountDurationListener access$0(com.dailystudio.memory.ui.DurationCountView) -> a
    long access$1(com.dailystudio.memory.ui.DurationCountView) -> b
    void access$2(com.dailystudio.memory.ui.DurationCountView,int) -> a
com.dailystudio.memory.ui.DurationCountView$1 -> com.dailystudio.memory.ui.f:
    com.dailystudio.memory.ui.DurationCountView this$0 -> a
    void onCountStart(com.dailystudio.memory.ui.CountView,long) -> a
    void onCountFinished(com.dailystudio.memory.ui.CountView,long) -> b
    void onCountAbort(com.dailystudio.memory.ui.CountView,long) -> c
    void shiftToNextCount(com.dailystudio.memory.ui.CountView) -> a
com.dailystudio.memory.ui.DurationCountView$OnCountDurationListener -> com.dailystudio.memory.ui.g:
    void onCountDurationStart(com.dailystudio.memory.ui.DurationCountView,long) -> a
    void onCountDurationFinished(com.dailystudio.memory.ui.DurationCountView,long) -> b
com.dailystudio.memory.ui.ExpandableItemDatabaseObjectCursorAdatper -> com.dailystudio.memory.ui.h:
    int mExpendedPosition -> o
    android.view.animation.LayoutAnimationController mExpandLayoutAnimtion -> p
    void expandItem(int) -> b
    void collapseItem() -> c
    int getExpendedPosition() -> d
    boolean isItemExpanded(int) -> c
    android.database.Cursor swapCursor(android.database.Cursor) -> b
    void changeCursor(android.database.Cursor) -> a
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> a
    android.view.animation.LayoutAnimationController onCreateExpandItemLayoutAnimation() -> e
    void displayExpand(android.view.View) -> b
    void hideExpand(android.view.View) -> c
    android.view.View getExpandView(android.view.View) -> a
    void bindExpandedView(android.view.View,android.content.Context,android.database.Cursor) -> b
    void bindCollapsedView(android.view.View,android.content.Context,android.database.Cursor) -> c
com.dailystudio.memory.ui.MainPageShortcutsAdapter -> com.dailystudio.memory.ui.i:
    android.view.View createViewIfRequired(int,android.view.View,android.view.ViewGroup) -> a
com.dailystudio.memory.ui.MemorySearchResultAdapter -> com.dailystudio.memory.ui.j:
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> a
    void update(java.util.Observable,java.lang.Object) -> update
com.dailystudio.memory.ui.PluginActivityAdapter -> com.dailystudio.memory.ui.k:
com.dailystudio.memory.ui.PluginActivityCategoryAdapter -> com.dailystudio.memory.ui.l:
com.dailystudio.memory.ui.PluginsObserverWebView -> com.dailystudio.memory.ui.m:
    java.util.Observer mPluginsObserver -> a
    void initMembers() -> b
    void setupViews() -> c
    boolean performLongClick() -> performLongClick
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onPluginsChanged() -> a
com.dailystudio.memory.ui.PluginsObserverWebView$1 -> com.dailystudio.memory.ui.n:
    com.dailystudio.memory.ui.PluginsObserverWebView this$0 -> a
    void update(java.util.Observable,java.lang.Object) -> update
com.dailystudio.memory.ui.PluginsObserverWebView$DebugWebChromeClient -> com.dailystudio.memory.ui.o:
    com.dailystudio.memory.ui.PluginsObserverWebView this$0 -> a
    boolean onConsoleMessage(android.webkit.ConsoleMessage) -> onConsoleMessage
com.dailystudio.memory.ui.PrivacyPolicyWebView -> com.dailystudio.memory.ui.PrivacyPolicyWebView:
    void initMembers() -> b
    void onPluginsChanged() -> a
com.dailystudio.memory.ui.PromoteAppsWebView -> com.dailystudio.memory.ui.PromoteAppsWebView:
    void initMembers() -> b
    void onPluginsChanged() -> a
com.dailystudio.memory.ui.R -> com.dailystudio.memory.ui.R:
com.dailystudio.memory.ui.R$anim -> com.dailystudio.memory.ui.R$anim:
    int actbar_overflow_dropdown_in -> actbar_overflow_dropdown_in
    int actbar_overflow_dropdown_out -> actbar_overflow_dropdown_out
    int actbar_overflow_popup_overlay_in -> actbar_overflow_popup_overlay_in
    int actbar_overflow_popup_overlay_out -> actbar_overflow_popup_overlay_out
    int actbar_prompt_in_bottom -> actbar_prompt_in_bottom
    int actbar_prompt_out_bottom -> actbar_prompt_out_bottom
    int ask_board_in -> ask_board_in
    int ask_board_out -> ask_board_out
    int char_layout_anim -> char_layout_anim
    int chart_in -> chart_in
    int circle_item_in -> circle_item_in
    int circle_layout_anim -> circle_layout_anim
    int expand_list_item_in -> expand_list_item_in
    int expand_list_item_layout_anim -> expand_list_item_layout_anim
    int fade_in -> fade_in
    int fade_out -> fade_out
    int grid_item_in -> grid_item_in
    int grid_layout_anim -> grid_layout_anim
    int grow_fade_in -> grow_fade_in
    int grow_fade_in_center -> grow_fade_in_center
    int grow_fade_in_from_bottom -> grow_fade_in_from_bottom
    int list_item_in -> list_item_in
    int list_layout_anim -> list_layout_anim
    int notify_view_in -> notify_view_in
    int notify_view_out -> notify_view_out
    int paper_clip_in -> paper_clip_in
    int paper_clip_out -> paper_clip_out
    int shrink_fade_out -> shrink_fade_out
    int shrink_fade_out_center -> shrink_fade_out_center
    int shrink_fade_out_from_bottom -> shrink_fade_out_from_bottom
    int slide_fade_in_bottom -> slide_fade_in_bottom
    int slide_fade_in_left -> slide_fade_in_left
    int slide_fade_in_right -> slide_fade_in_right
    int slide_fade_in_top -> slide_fade_in_top
    int slide_fade_out_bottom -> slide_fade_out_bottom
    int slide_fade_out_left -> slide_fade_out_left
    int slide_fade_out_right -> slide_fade_out_right
    int slide_fade_out_top -> slide_fade_out_top
com.dailystudio.memory.ui.R$attr -> com.dailystudio.memory.ui.R$attr:
    int allowSingleTap -> allowSingleTap
    int animateOnClick -> animateOnClick
    int bottomOffset -> bottomOffset
    int content -> content
    int count -> count
    int handle -> handle
    int minDigits -> minDigits
    int orientation -> orientation
    int textColor -> textColor
    int textSize -> textSize
    int textStyle -> textStyle
    int topOffset -> topOffset
com.dailystudio.memory.ui.R$color -> com.dailystudio.memory.ui.R$color:
    int action_bar_bg_color -> action_bar_bg_color
    int action_bar_popup_content_overlay -> action_bar_popup_content_overlay
    int action_bar_text_color -> action_bar_text_color
    int action_bar_text_disable_color -> action_bar_text_disable_color
    int android_blue -> android_blue
    int android_blue_light -> android_blue_light
    int black -> black
    int blue -> blue
    int chart_transparent -> chart_transparent
    int core_app_check_step_text_color -> core_app_check_step_text_color
    int dark_red -> dark_red
    int default_button_text_color -> default_button_text_color
    int fadeText -> fadeText
    int gold_yellow -> gold_yellow
    int gray -> gray
    int green -> green
    int light_black -> light_black
    int light_gray -> light_gray
    int light_white -> light_white
    int orange -> orange
    int red -> red
    int royal_blue -> royal_blue
    int see_green -> see_green
    int tomato_red -> tomato_red
    int translucent_background -> translucent_background
    int transparent -> transparent
    int transparent_background -> transparent_background
    int white -> white
com.dailystudio.memory.ui.R$dimen -> com.dailystudio.memory.ui.R$dimen:
    int actbar_custom_view_right_padding -> actbar_custom_view_right_padding
    int actbar_overflow_menu_icon_height -> actbar_overflow_menu_icon_height
    int actbar_overflow_menu_icon_width -> actbar_overflow_menu_icon_width
    int actbar_overflow_menu_item_padding -> actbar_overflow_menu_item_padding
    int actbar_overflow_menu_max_width -> actbar_overflow_menu_max_width
    int actbar_overflow_menu_text_size -> actbar_overflow_menu_text_size
    int action_bar_height -> action_bar_height
    int action_bar_padding -> action_bar_padding
    int action_bar_right_padding -> action_bar_right_padding
    int action_bar_text_size -> action_bar_text_size
    int alert_dialog_custom_view_padding_bottom -> alert_dialog_custom_view_padding_bottom
    int alert_dialog_custom_view_padding_left -> alert_dialog_custom_view_padding_left
    int alert_dialog_custom_view_padding_right -> alert_dialog_custom_view_padding_right
    int alert_dialog_custom_view_padding_top -> alert_dialog_custom_view_padding_top
    int app_widget_btn_padding -> app_widget_btn_padding
    int app_widget_chart_margin_bottom -> app_widget_chart_margin_bottom
    int app_widget_chart_margin_left -> app_widget_chart_margin_left
    int app_widget_chart_margin_right -> app_widget_chart_margin_right
    int app_widget_chart_margin_top -> app_widget_chart_margin_top
    int app_widget_frame_padding -> app_widget_frame_padding
    int app_widget_grid_height -> app_widget_grid_height
    int app_widget_grid_width -> app_widget_grid_width
    int app_widget_label_font_size -> app_widget_label_font_size
    int app_widget_label_padding -> app_widget_label_padding
    int app_widget_margin -> app_widget_margin
    int app_widget_title_padding -> app_widget_title_padding
    int ask_question_answers_padding -> ask_question_answers_padding
    int ask_question_content_padding -> ask_question_content_padding
    int bfw_hpadding -> bfw_hpadding
    int bfw_min_content_height -> bfw_min_content_height
    int bfw_title_height -> bfw_title_height
    int bfw_title_hpadding -> bfw_title_hpadding
    int close_button_size -> close_button_size
    int core_app_check_badge_margin -> core_app_check_badge_margin
    int core_app_check_padding -> core_app_check_padding
    int daygroup_item_height -> daygroup_item_height
    int default_app_item_padding -> default_app_item_padding
    int default_ask_board_width -> default_ask_board_width
    int default_button_padding -> default_button_padding
    int default_chart_axis_title_size -> default_chart_axis_title_size
    int default_chart_label_size -> default_chart_label_size
    int default_chart_legend_height -> default_chart_legend_height
    int default_chart_legend_size -> default_chart_legend_size
    int default_chart_margin_bottom -> default_chart_margin_bottom
    int default_chart_margin_left -> default_chart_margin_left
    int default_chart_margin_right -> default_chart_margin_right
    int default_chart_margin_top -> default_chart_margin_top
    int default_chart_title_size -> default_chart_title_size
    int default_check_padding -> default_check_padding
    int default_content_hpadding -> default_content_hpadding
    int default_content_vpadding -> default_content_vpadding
    int default_empty_text_font_size -> default_empty_text_font_size
    int default_font_size -> default_font_size
    int default_grid_item_height -> default_grid_item_height
    int default_label_padding -> default_label_padding
    int default_notify_height -> default_notify_height
    int default_pager_title_font_size -> default_pager_title_font_size
    int default_res_icon_size -> default_res_icon_size
    int gv_item_hpadding -> gv_item_hpadding
    int gv_item_vpadding -> gv_item_vpadding
    int lv_index_font_size -> lv_index_font_size
    int lv_index_padding -> lv_index_padding
    int lv_index_width -> lv_index_width
    int lv_item_2nd_font_size -> lv_item_2nd_font_size
    int lv_item_2nd_vpadding -> lv_item_2nd_vpadding
    int lv_item_font_size -> lv_item_font_size
    int lv_item_padding -> lv_item_padding
    int memory_ic_height -> memory_ic_height
    int memory_ic_witdh -> memory_ic_witdh
    int memory_index_font_size -> memory_index_font_size
    int memory_index_padding -> memory_index_padding
    int memory_index_width -> memory_index_width
    int notification_content_padding -> notification_content_padding
    int notification_dialog_height -> notification_dialog_height
    int paper_clip_content_hpadding -> paper_clip_content_hpadding
    int paper_clip_content_vpadding -> paper_clip_content_vpadding
    int paper_clip_frame_padding -> paper_clip_frame_padding
    int paper_clip_title_font_size -> paper_clip_title_font_size
    int paper_clip_title_height -> paper_clip_title_height
    int paper_clip_title_hmargin -> paper_clip_title_hmargin
    int paper_clip_title_vmargin -> paper_clip_title_vmargin
com.dailystudio.memory.ui.R$drawable -> com.dailystudio.memory.ui.R$drawable:
    int actbar_button -> actbar_button
    int actbar_button_pressed_light -> actbar_button_pressed_light
    int actbar_dropdown_background -> actbar_dropdown_background
    int actbar_prg_01 -> actbar_prg_01
    int actbar_prg_02 -> actbar_prg_02
    int actbar_prg_03 -> actbar_prg_03
    int actbar_prg_04 -> actbar_prg_04
    int actbar_prg_05 -> actbar_prg_05
    int actbar_prg_06 -> actbar_prg_06
    int actbar_prg_07 -> actbar_prg_07
    int actbar_prg_08 -> actbar_prg_08
    int actbar_vert_separator -> actbar_vert_separator
    int app_widget_background -> app_widget_background
    int app_widget_btn -> app_widget_btn
    int app_widget_btn_pressed -> app_widget_btn_pressed
    int ask_board -> ask_board
    int ask_board_normal -> ask_board_normal
    int ask_board_pressed -> ask_board_pressed
    int ask_dialog_bg -> ask_dialog_bg
    int check_background -> check_background
    int check_off_dark -> check_off_dark
    int check_off_light -> check_off_light
    int check_on -> check_on
    int content_bg_op60 -> content_bg_op60
    int content_bg_op80 -> content_bg_op80
    int content_bg_op90 -> content_bg_op90
    int default_button -> default_button
    int default_button_disabled_focused_light -> default_button_disabled_focused_light
    int default_button_disabled_light -> default_button_disabled_light
    int default_button_focused_light -> default_button_focused_light
    int default_button_normal_light -> default_button_normal_light
    int default_button_pressed_light -> default_button_pressed_light
    int default_content_bg -> default_content_bg
    int default_content_bg_pattern -> default_content_bg_pattern
    int default_dark_check -> default_dark_check
    int default_light_check -> default_light_check
    int edit_text_light -> edit_text_light
    int get_it_on_play_logo_large -> get_it_on_play_logo_large
    int get_it_on_play_logo_large_disabled -> get_it_on_play_logo_large_disabled
    int get_it_on_play_logo_large_normal -> get_it_on_play_logo_large_normal
    int get_it_on_play_logo_large_pressed -> get_it_on_play_logo_large_pressed
    int guess_right -> guess_right
    int guess_wrong -> guess_wrong
    int ic_action_overflow -> ic_action_overflow
    int ic_action_search -> ic_action_search
    int ic_calendar_day -> ic_calendar_day
    int ic_calendar_month -> ic_calendar_month
    int ic_calendar_week -> ic_calendar_week
    int ic_close_button -> ic_close_button
    int ic_close_button_normal -> ic_close_button_normal
    int ic_close_button_pressed -> ic_close_button_pressed
    int ic_done -> ic_done
    int ic_done_highlight -> ic_done_highlight
    int ic_done_normal -> ic_done_normal
    int ic_launcher -> ic_launcher
    int ic_memory_bar_chart -> ic_memory_bar_chart
    int ic_memory_chart -> ic_memory_chart
    int ic_memory_list -> ic_memory_list
    int ic_memory_record -> ic_memory_record
    int ic_menu_add -> ic_menu_add
    int ic_menu_calendar -> ic_menu_calendar
    int ic_menu_history -> ic_menu_history
    int ic_menu_list -> ic_menu_list
    int ic_menu_search -> ic_menu_search
    int ic_menu_share -> ic_menu_share
    int ic_menu_today -> ic_menu_today
    int ic_nofity -> ic_nofity
    int icon -> icon
    int list_divider -> list_divider
    int list_focused -> list_focused
    int list_longpressed -> list_longpressed
    int list_pressed_dark -> list_pressed_dark
    int list_pressed_light -> list_pressed_light
    int list_selector_background_transition_dark -> list_selector_background_transition_dark
    int list_selector_background_transition_light -> list_selector_background_transition_light
    int list_selector_dark -> list_selector_dark
    int list_selector_disabled_dark -> list_selector_disabled_dark
    int list_selector_disabled_light -> list_selector_disabled_light
    int list_selector_light -> list_selector_light
    int menu_dropdown_panel_holo_light -> menu_dropdown_panel_holo_light
    int notification_dialog_bg -> notification_dialog_bg
    int notify_bird_left -> notify_bird_left
    int notify_bird_right -> notify_bird_right
    int notify_pole_and_line -> notify_pole_and_line
    int paper_clip_close_normal -> paper_clip_close_normal
    int paper_clip_close_pressed -> paper_clip_close_pressed
    int paper_clip_window -> paper_clip_window
    int paper_clip_window_close -> paper_clip_window_close
    int rate_star_big_half_dark -> rate_star_big_half_dark
    int rate_star_big_half_light -> rate_star_big_half_light
    int rate_star_big_off_dark -> rate_star_big_off_dark
    int rate_star_big_off_light -> rate_star_big_off_light
    int rate_star_big_on_dark -> rate_star_big_on_dark
    int rate_star_big_on_light -> rate_star_big_on_light
    int rate_star_small_half_dark -> rate_star_small_half_dark
    int rate_star_small_half_light -> rate_star_small_half_light
    int rate_star_small_off_dark -> rate_star_small_off_dark
    int rate_star_small_off_light -> rate_star_small_off_light
    int rate_star_small_on_dark -> rate_star_small_on_dark
    int rate_star_small_on_light -> rate_star_small_on_light
    int ratingbar_dark -> ratingbar_dark
    int ratingbar_light -> ratingbar_light
    int ratingbar_small_dark -> ratingbar_small_dark
    int ratingbar_small_light -> ratingbar_small_light
    int scrollbar_handle -> scrollbar_handle
    int textfield_activated_light -> textfield_activated_light
    int textfield_default_light -> textfield_default_light
    int textfield_disabled_focused_light -> textfield_disabled_focused_light
    int textfield_disabled_light -> textfield_disabled_light
    int textfield_focused_light -> textfield_focused_light
    int vert_divider -> vert_divider
com.dailystudio.memory.ui.R$id -> com.dailystudio.memory.ui.R$id:
    int actbar_activity_actionbar -> actbar_activity_actionbar
    int actbar_activity_content -> actbar_activity_content
    int actbar_activity_overflow_menu -> actbar_activity_overflow_menu
    int actbar_custome_view -> actbar_custome_view
    int actbar_overflow -> actbar_overflow
    int actbar_overflow_menu_item -> actbar_overflow_menu_item
    int actbar_overflow_menu_list -> actbar_overflow_menu_list
    int actbar_overflow_menu_root -> actbar_overflow_menu_root
    int actbar_overflow_popup_overlay -> actbar_overflow_popup_overlay
    int actbar_progress -> actbar_progress
    int actbar_prompt -> actbar_prompt
    int actbar_root -> actbar_root
    int actbar_title -> actbar_title
    int ask_board -> ask_board
    int ask_view -> ask_view
    int bold -> bold
    int chartStub -> chartStub
    int core_app_check_explain -> core_app_check_explain
    int core_app_check_google_play_badge -> core_app_check_google_play_badge
    int core_app_check_know_button -> core_app_check_know_button
    int core_app_check_memory_installed -> core_app_check_memory_installed
    int core_app_check_not_show_again_check -> core_app_check_not_show_again_check
    int core_app_check_plugin -> core_app_check_plugin
    int core_app_check_plugin_icon -> core_app_check_plugin_icon
    int core_app_check_plugin_name -> core_app_check_plugin_name
    int core_app_check_step_one -> core_app_check_step_one
    int core_app_check_step_two -> core_app_check_step_two
    int core_app_check_steps -> core_app_check_steps
    int fragment_notification -> fragment_notification
    int fragment_question -> fragment_question
    int fragment_view_root -> fragment_view_root
    int horizontal -> horizontal
    int italic -> italic
    int menu_item_icon -> menu_item_icon
    int menu_item_text -> menu_item_text
    int month_name -> month_name
    int normal -> normal
    int notification_close -> notification_close
    int notification_content -> notification_content
    int notification_title -> notification_title
    int notification_title_separator -> notification_title_separator
    int notify_slot_1 -> notify_slot_1
    int notify_slot_2 -> notify_slot_2
    int notify_slot_3 -> notify_slot_3
    int notify_slot_4 -> notify_slot_4
    int notify_slots_root -> notify_slots_root
    int notify_view -> notify_view
    int paper_clip_close_button -> paper_clip_close_button
    int paper_clip_content -> paper_clip_content
    int paper_clip_icon -> paper_clip_icon
    int paper_clip_title -> paper_clip_title
    int paper_clip_title_separator -> paper_clip_title_separator
    int question_answer_right -> question_answer_right
    int question_answer_wrong -> question_answer_wrong
    int question_answers -> question_answers
    int question_content -> question_content
    int question_title -> question_title
    int question_title_separator -> question_title_separator
    int res_icon -> res_icon
    int res_label -> res_label
    int stats_lifetime_day -> stats_lifetime_day
    int stats_lifetime_day_label -> stats_lifetime_day_label
    int stats_lifetime_hour -> stats_lifetime_hour
    int stats_lifetime_hour_label -> stats_lifetime_hour_label
    int stats_lifetime_min -> stats_lifetime_min
    int stats_lifetime_min_label -> stats_lifetime_min_label
    int stats_lifetime_sec -> stats_lifetime_sec
    int stats_lifetime_sec_label -> stats_lifetime_sec_label
    int vertical -> vertical
    int week_num -> week_num
    int week_range -> week_range
    int weekay_time -> weekay_time
    int weekday_dayname -> weekday_dayname
com.dailystudio.memory.ui.R$integer -> com.dailystudio.memory.ui.R$integer:
    int config_chartAnimTime -> config_chartAnimTime
    int config_defaultAnimTime -> config_defaultAnimTime
    int config_notifyAnimTime -> config_notifyAnimTime
    int config_overflowAnimTime -> config_overflowAnimTime
    int config_overflowOverlayAnimTime -> config_overflowOverlayAnimTime
    int config_slowAnimTime -> config_slowAnimTime
com.dailystudio.memory.ui.R$layout -> com.dailystudio.memory.ui.R$layout:
    int actbar_activity -> actbar_activity
    int actbar_base -> actbar_base
    int actbar_overflow_menu -> actbar_overflow_menu
    int actbar_overflow_menu_item -> actbar_overflow_menu_item
    int activity_core_app_check -> activity_core_app_check
    int activity_notification -> activity_notification
    int activity_question -> activity_question
    int ask_host_view -> ask_host_view
    int fragment_chart -> fragment_chart
    int fragment_grid -> fragment_grid
    int fragment_grid_noanim -> fragment_grid_noanim
    int fragment_list -> fragment_list
    int fragment_list_noanim -> fragment_list_noanim
    int fragment_memory_ask -> fragment_memory_ask
    int fragment_memory_notification -> fragment_memory_notification
    int fragment_memory_notify -> fragment_memory_notify
    int fragment_memory_question -> fragment_memory_question
    int layout_default_resobj -> layout_default_resobj
    int layout_duration_count_view -> layout_duration_count_view
    int month_item -> month_item
    int notify_host_view -> notify_host_view
    int paper_clip_window -> paper_clip_window
    int week_item -> week_item
    int weekday_item -> weekday_item
com.dailystudio.memory.ui.R$raw -> com.dailystudio.memory.ui.R$raw:
    int default_showcase_404_page -> default_showcase_404_page
    int default_showcase_404_page_style -> default_showcase_404_page_style
com.dailystudio.memory.ui.R$string -> com.dailystudio.memory.ui.R$string:
    int activity_ask_question -> activity_ask_question
    int activity_notification -> activity_notification
    int alert_dialog_button_cancel -> alert_dialog_button_cancel
    int alert_dialog_button_confirm -> alert_dialog_button_confirm
    int app_name -> app_name
    int build_device -> build_device
    int build_manufacture -> build_manufacture
    int build_platform -> build_platform
    int chart_lable_date -> chart_lable_date
    int core_app_check_button_know -> core_app_check_button_know
    int core_app_check_confirm_dialog_message -> core_app_check_confirm_dialog_message
    int core_app_check_confirm_dialog_title -> core_app_check_confirm_dialog_title
    int core_app_check_explaination -> core_app_check_explaination
    int core_app_check_installed -> core_app_check_installed
    int core_app_check_not_installed -> core_app_check_not_installed
    int core_app_check_not_show_again -> core_app_check_not_show_again
    int core_app_check_step_one -> core_app_check_step_one
    int core_app_check_step_two -> core_app_check_step_two
    int default_app_label -> default_app_label
    int default_ask_board_text -> default_ask_board_text
    int default_ask_question_title -> default_ask_question_title
    int default_bfw_title -> default_bfw_title
    int default_category_label -> default_category_label
    int default_iv_description -> default_iv_description
    int default_nodata_prompt -> default_nodata_prompt
    int default_notification_title -> default_notification_title
    int default_paper_clip_window_title -> default_paper_clip_window_title
    int default_searchable_matches_templ -> default_searchable_matches_templ
    int error_unknow -> error_unknow
    int month_pattern -> month_pattern
    int time_print_date_format -> time_print_date_format
    int time_print_label_day -> time_print_label_day
    int time_print_label_days -> time_print_label_days
    int time_print_label_hour -> time_print_label_hour
    int time_print_label_min -> time_print_label_min
    int time_print_label_sec -> time_print_label_sec
    int time_print_time_format -> time_print_time_format
com.dailystudio.memory.ui.R$style -> com.dailystudio.memory.ui.R$style:
    int ActionBarOverflowMenuItemText -> ActionBarOverflowMenuItemText
    int ActionBarPromptText -> ActionBarPromptText
    int ActionBarText -> ActionBarText
    int ActionBarTitleText -> ActionBarTitleText
    int ActiveLabel -> ActiveLabel
    int Animation -> Animation
    int Animation_DropDownCenter -> Animation_DropDownCenter
    int Animation_DropDownDown -> Animation_DropDownDown
    int Animation_DropDownUp -> Animation_DropDownUp
    int AppTheme -> AppTheme
    int AskBoardText -> AskBoardText
    int AskQuestionContent -> AskQuestionContent
    int BottomFloatingWindowButton -> BottomFloatingWindowButton
    int BottomFloatingWindowTitle -> BottomFloatingWindowTitle
    int CoreAppCheckExplainText -> CoreAppCheckExplainText
    int CoreAppCheckResultText -> CoreAppCheckResultText
    int CoreAppCheckStepListText -> CoreAppCheckStepListText
    int CoreAppCheckStepText -> CoreAppCheckStepText
    int DefaultAdapterView -> DefaultAdapterView
    int DefaultAppWidgetButton -> DefaultAppWidgetButton
    int DefaultAppWidgetLabel -> DefaultAppWidgetLabel
    int DefaultAppWidgetTitle -> DefaultAppWidgetTitle
    int DefaultButton -> DefaultButton
    int DefaultCheck -> DefaultCheck
    int DefaultCheck_Dark -> DefaultCheck_Dark
    int DefaultCheck_Light -> DefaultCheck_Light
    int DefaultDarkIndicatorRatingBar -> DefaultDarkIndicatorRatingBar
    int DefaultDarkPagerTitleStrip -> DefaultDarkPagerTitleStrip
    int DefaultDarkSmallRatingBar -> DefaultDarkSmallRatingBar
    int DefaultEditText -> DefaultEditText
    int DefaultEmptyText -> DefaultEmptyText
    int DefaultGridItemText -> DefaultGridItemText
    int DefaultGridView -> DefaultGridView
    int DefaultGridView_NoAnim -> DefaultGridView_NoAnim
    int DefaultIndicatorRatingBar -> DefaultIndicatorRatingBar
    int DefaultLabel -> DefaultLabel
    int DefaultListItemText -> DefaultListItemText
    int DefaultListItemText1stLine -> DefaultListItemText1stLine
    int DefaultListItemText2ndLine -> DefaultListItemText2ndLine
    int DefaultListView -> DefaultListView
    int DefaultListView_NoAnim -> DefaultListView_NoAnim
    int DefaultPagerTitleStrip -> DefaultPagerTitleStrip
    int DefaultSmallRatingBar -> DefaultSmallRatingBar
    int DefaultText -> DefaultText
    int DurationCountViewText -> DurationCountViewText
    int MemoryIndexText -> MemoryIndexText
    int NotifyContent -> NotifyContent
    int NotifyText -> NotifyText
    int PaperClipTitle -> PaperClipTitle
    int Theme -> Theme
    int Theme_DefaultActivity -> Theme_DefaultActivity
    int Theme_DefaultActivity_Light -> Theme_DefaultActivity_Light
    int Theme_Translucent -> Theme_Translucent
    int Theme_Transparent -> Theme_Transparent
com.dailystudio.memory.ui.R$styleable -> com.dailystudio.memory.ui.R$styleable:
    int[] CountView -> CountView
    int CountView_count -> CountView_count
    int CountView_minDigits -> CountView_minDigits
    int[] DurationCountView -> DurationCountView
    int DurationCountView_textColor -> DurationCountView_textColor
    int DurationCountView_textSize -> DurationCountView_textSize
    int DurationCountView_textStyle -> DurationCountView_textStyle
    int[] SlidingDrawer -> SlidingDrawer
    int SlidingDrawer_allowSingleTap -> SlidingDrawer_allowSingleTap
    int SlidingDrawer_animateOnClick -> SlidingDrawer_animateOnClick
    int SlidingDrawer_bottomOffset -> SlidingDrawer_bottomOffset
    int SlidingDrawer_content -> SlidingDrawer_content
    int SlidingDrawer_handle -> SlidingDrawer_handle
    int SlidingDrawer_orientation -> SlidingDrawer_orientation
    int SlidingDrawer_topOffset -> SlidingDrawer_topOffset
com.dailystudio.memory.ui.ResourceObjectAdapter -> com.dailystudio.memory.ui.p:
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> a
    void bindView(android.view.View,android.content.Context,android.database.Cursor,com.dailystudio.memory.database.MemoryResouceObject) -> a
    void update(java.util.Observable,java.lang.Object) -> update
com.dailystudio.memory.ui.ShowcasePage -> com.dailystudio.memory.ui.q:
    java.lang.String targetPackage -> a
    android.net.Uri targetUri -> b
    java.lang.String toString() -> toString
com.dailystudio.memory.ui.ShowcasePageAdapter -> com.dailystudio.memory.ui.s:
    android.content.Context mContext -> a
    java.util.List mShowcasePages -> b
    int getCount() -> b
    android.support.v4.app.Fragment getItem(int) -> a
    void setShowpages(java.util.List) -> a
com.dailystudio.memory.ui.ShowcaseWebView -> com.dailystudio.memory.ui.ShowcaseWebView:
    void initMembers() -> b
    void onPluginsChanged() -> a
com.dailystudio.memory.ui.ShowcaseWebView$1 -> com.dailystudio.memory.ui.t:
    com.dailystudio.memory.ui.ShowcaseWebView this$0 -> a
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
com.dailystudio.memory.ui.utils.ColorHelper -> com.dailystudio.memory.ui.a.a:
    int getColorResource(android.content.Context,int) -> a
com.dailystudio.memory.ui.utils.DateTimePrintUtils -> com.dailystudio.memory.ui.a.b:
    java.lang.String printDurationString(android.content.Context,long) -> a
    long[] durationPrintValues(long) -> a
    java.lang.String printDurationString(android.content.Context,long,boolean) -> a
    java.lang.String printTimeString(android.content.Context,long,boolean,boolean) -> a
    java.lang.String printTimeString(android.content.Context,long) -> b
    java.lang.String printTimeStringWithoutTime(android.content.Context,long) -> c
com.dailystudio.memory.ui.utils.ViewHelper -> com.dailystudio.memory.ui.a.c:
    void disableHardwareAccelerated(android.view.View) -> a
    boolean isLargeScreen(android.content.Context) -> a
com.dailystudio.memory.utils.XmlHelper -> com.dailystudio.memory.h.a:
    java.lang.String parseString(android.util.AttributeSet,int,android.content.res.Resources) -> a
    java.lang.String parseLabel(android.util.AttributeSet,int,android.content.res.Resources) -> b
    int parseResource(android.util.AttributeSet,int,android.content.res.Resources) -> c
com.dailystudio.nativeapplib.R -> com.dailystudio.nativeapplib.R:
com.dailystudio.nativeapplib.R$drawable -> com.dailystudio.nativeapplib.R$drawable:
    int ic_launcher -> ic_launcher
    int icon -> icon
com.dailystudio.nativeapplib.R$string -> com.dailystudio.nativeapplib.R$string:
    int app_name -> app_name
    int build_device -> build_device
    int build_manufacture -> build_manufacture
    int build_platform -> build_platform
com.dailystudio.nativeapplib.R$style -> com.dailystudio.nativeapplib.R$style:
    int AppTheme -> AppTheme
com.dailystudio.nativelib.application.AndroidActivity -> com.dailystudio.nativelib.application.a:
    void resolveLabelAndIcon(android.content.Context) -> a
    void launch(android.content.Context) -> b
com.dailystudio.nativelib.application.AndroidApplication -> com.dailystudio.nativelib.application.b:
    java.lang.String mPackageName -> c
    java.lang.String mPackagePath -> d
    int mFlags -> e
    long mFirstInstallTime -> f
    long mLastUpdateTime -> g
    java.lang.String mAppVerName -> h
    int mAppVerCode -> i
    java.lang.String getPackageName() -> a
    int getFlags() -> b
    java.lang.String getVersionName() -> c
    int getVersionCode() -> d
    java.lang.CharSequence getLabel() -> e
    void resolveLabelAndIcon(android.content.Context) -> a
    boolean isInstalled(android.content.Context) -> b
    java.lang.String toString() -> toString
    boolean isInstalled(android.content.Context,java.lang.String) -> a
com.dailystudio.nativelib.application.AndroidComponentObject -> com.dailystudio.nativelib.application.c:
    android.content.ComponentName mComponentName -> c
    android.content.ComponentName getComponentName() -> a
    java.lang.CharSequence getLabel() -> e
com.dailystudio.nativelib.application.AndroidObject -> com.dailystudio.nativelib.application.d:
    android.graphics.drawable.Drawable mIcon -> a
    java.lang.CharSequence mLabel -> b
    boolean mResourcesResolved -> c
    int mIconWidth -> d
    int mIconHeight -> e
    boolean mHiResIconRequired -> f
    int mIconDpi -> g
    android.graphics.drawable.Drawable getIcon() -> f
    int getIconWidth() -> g
    int getIconHeight() -> h
    java.lang.CharSequence getLabel() -> e
    void resolveResources(android.content.Context) -> c
    int getIconDpi() -> i
    boolean isHiResIconRequired() -> j
    void resolveLabelAndIcon(android.content.Context) -> a
    int resolveIconDpi(android.content.Context) -> d
    android.graphics.drawable.Drawable getFullResIcon(android.content.res.Resources,int) -> a
    android.graphics.drawable.Drawable getFullResIcon(android.content.Context,java.lang.String,int) -> a
    android.graphics.drawable.Drawable getFullResIcon(android.content.Context,android.content.pm.ActivityInfo) -> a
com.dailystudio.nativelib.application.AppObservable -> com.dailystudio.nativelib.application.AppObservable:
    android.content.BroadcastReceiver mAppReceiver -> b
    void onCreate() -> a
    void onDestroy() -> b
    void onPause() -> d
    void onResume() -> e
com.dailystudio.nativelib.application.AppObservable$AppBroadcastReceiver -> com.dailystudio.nativelib.application.e:
    com.dailystudio.nativelib.application.AppObservable this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.dailystudio.nativelib.application.IResourceObject -> com.dailystudio.nativelib.application.f:
    android.graphics.drawable.Drawable getIcon() -> f
    java.lang.CharSequence getLabel() -> e
    void resolveResources(android.content.Context) -> c
com.dailystudio.nativelib.application.IResourceObject$ResourceObjectComparator -> com.dailystudio.nativelib.application.g:
    int compare(com.dailystudio.nativelib.application.IResourceObject,com.dailystudio.nativelib.application.IResourceObject) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.dailystudio.nativelib.application.ResourceUtilities -> com.dailystudio.nativelib.application.h:
    android.graphics.Rect sOldBounds -> c
    android.graphics.Canvas sCanvas -> d
    int[] sColors -> a
    int sColorIndex -> b
    android.graphics.Bitmap createIconBitmap(android.graphics.drawable.Drawable,android.content.Context,int,int) -> a
com.dailystudio.nativelib.observable.ConnectivityObservable -> com.dailystudio.nativelib.observable.ConnectivityObservable:
    android.content.BroadcastReceiver mConnectivityReceiver -> b
    void onCreate() -> a
    void onDestroy() -> b
    void onPause() -> d
    void onResume() -> e
    void addObserver(java.util.Observer) -> addObserver
    void deleteObserver(java.util.Observer) -> deleteObserver
com.dailystudio.nativelib.observable.ConnectivityObservable$ConnectivityReceiver -> com.dailystudio.nativelib.observable.a:
    com.dailystudio.nativelib.observable.ConnectivityObservable this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.dailystudio.nativelib.observable.NativeObservable -> com.dailystudio.nativelib.observable.b:
    android.content.Context mContext -> a
    android.os.Handler mHandler -> b
    void initMembers() -> g
    void addObserver(java.util.Observer) -> addObserver
    void deleteObserver(java.util.Observer) -> deleteObserver
    void deleteObservers() -> deleteObservers
    void notifyObservers() -> notifyObservers
    void notifyObservers(java.lang.Object) -> notifyObservers
    void realNotifyObservers(java.lang.Object) -> a
    java.lang.Class getSingletonKey() -> f
    void onCreate() -> a
    void onDestroy() -> b
    void onPause() -> d
    void onResume() -> e
    java.lang.Object getSingletonKey() -> c
    void access$1(com.dailystudio.nativelib.observable.NativeObservable,java.lang.Object) -> a
com.dailystudio.nativelib.observable.NativeObservable$1 -> com.dailystudio.nativelib.observable.c:
    com.dailystudio.nativelib.observable.NativeObservable this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.dailystudio.nativelib.observable.ObservableFactory -> com.dailystudio.nativelib.observable.d:
    com.dailystudio.nativelib.observable.ObservableFactory getInstance() -> b
    com.dailystudio.nativelib.observable.NativeObservable createObservable(java.lang.Class) -> d
com.dailystudio.nativelib.observable.ObservableManager -> com.dailystudio.nativelib.observable.e:
    com.dailystudio.nativelib.observable.ObservableManager getInstance() -> d
    void addObject(com.dailystudio.nativelib.observable.NativeObservable) -> a
    void removeObject(com.dailystudio.nativelib.observable.NativeObservable) -> b
    com.dailystudio.nativelib.observable.NativeObservable removeObject(java.lang.Class) -> b
    void clearObjects() -> c
    void registerObservable(com.dailystudio.nativelib.observable.NativeObservable) -> c
    com.dailystudio.nativelib.observable.NativeObservable getObservable(java.lang.Class) -> c
    void addObject(com.dailystudio.manager.ISingletonObject) -> a
    com.dailystudio.manager.ISingletonObject removeObject(java.lang.Object) -> a
    void removeObject(com.dailystudio.manager.ISingletonObject) -> b
com.dailystudio.nativelib.observable.ScreenOnOffObservable -> com.dailystudio.nativelib.observable.ScreenOnOffObservable:
    android.content.BroadcastReceiver mScreenOnOffReceiver -> b
    void onCreate() -> a
    void onDestroy() -> b
    void onPause() -> d
    void onResume() -> e
    void addObserver(java.util.Observer) -> addObserver
    void deleteObserver(java.util.Observer) -> deleteObserver
com.dailystudio.nativelib.observable.ScreenOnOffObservable$ScreenOnOffChanged -> com.dailystudio.nativelib.observable.f:
    com.dailystudio.nativelib.observable.ScreenOnOffObservable this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.dailystudio.nativelib.observable.TimeTickObservable -> com.dailystudio.nativelib.observable.TimeTickObservable:
    com.dailystudio.nativelib.observable.TimeTickObservable$TimeTickThread mTickThread -> b
    void onCreate() -> a
    void onDestroy() -> b
    void onPause() -> d
    void onResume() -> e
    void addObserver(java.util.Observer) -> addObserver
    void deleteObserver(java.util.Observer) -> deleteObserver
    void startTimeTickThread() -> g
    void stopTimeTickThread() -> h
com.dailystudio.nativelib.observable.TimeTickObservable$TimeTickThread -> com.dailystudio.nativelib.observable.g:
    boolean mEndFlag -> b
    long mCurrentTime -> c
    long mSleepTime -> d
    com.dailystudio.nativelib.observable.TimeTickObservable this$0 -> a
    void run() -> run
    void cancel() -> a
com.dailystudio.nativelib.observable.WifiObservable -> com.dailystudio.nativelib.observable.WifiObservable:
    android.content.BroadcastReceiver mWifiReceiver -> b
    void onCreate() -> a
    void onDestroy() -> b
    void onPause() -> d
    void onResume() -> e
    void addObserver(java.util.Observer) -> addObserver
    void deleteObserver(java.util.Observer) -> deleteObserver
com.dailystudio.nativelib.observable.WifiObservable$WifiChangedReceiver -> com.dailystudio.nativelib.observable.h:
    com.dailystudio.nativelib.observable.WifiObservable this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.dailystudio.utils.ClassNameUtils -> com.dailystudio.g.a:
    java.lang.String getClassName(java.lang.Class) -> a
    java.lang.String getPackageName(java.lang.Class) -> b
com.google.ads.AdRequest -> com.google.ads.AdRequest:
    java.lang.String VERSION -> VERSION
    java.lang.String LOGTAG -> LOGTAG
    java.lang.String TEST_EMULATOR -> TEST_EMULATOR
com.google.ads.AdRequest$ErrorCode -> com.google.ads.AdRequest$ErrorCode:
    com.google.ads.AdRequest$ErrorCode INVALID_REQUEST -> INVALID_REQUEST
    com.google.ads.AdRequest$ErrorCode NO_FILL -> NO_FILL
    com.google.ads.AdRequest$ErrorCode NETWORK_ERROR -> NETWORK_ERROR
    com.google.ads.AdRequest$ErrorCode INTERNAL_ERROR -> INTERNAL_ERROR
    java.lang.String description -> description
    com.google.ads.AdRequest$ErrorCode[] a -> a
    com.google.ads.AdRequest$ErrorCode[] values() -> values
    com.google.ads.AdRequest$ErrorCode valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
com.google.ads.AdRequest$Gender -> com.google.ads.AdRequest$Gender:
    com.google.ads.AdRequest$Gender UNKNOWN -> UNKNOWN
    com.google.ads.AdRequest$Gender MALE -> MALE
    com.google.ads.AdRequest$Gender FEMALE -> FEMALE
    com.google.ads.AdRequest$Gender[] b -> b
    com.google.ads.AdRequest$Gender[] values() -> values
    com.google.ads.AdRequest$Gender valueOf(java.lang.String) -> valueOf
com.google.ads.AdSize -> com.google.ads.AdSize:
    com.google.android.gms.ads.AdSize c -> c
    int FULL_WIDTH -> FULL_WIDTH
    int AUTO_HEIGHT -> AUTO_HEIGHT
    int LANDSCAPE_AD_HEIGHT -> LANDSCAPE_AD_HEIGHT
    int PORTRAIT_AD_HEIGHT -> PORTRAIT_AD_HEIGHT
    int LARGE_AD_HEIGHT -> LARGE_AD_HEIGHT
    com.google.ads.AdSize SMART_BANNER -> SMART_BANNER
    com.google.ads.AdSize BANNER -> BANNER
    com.google.ads.AdSize IAB_MRECT -> IAB_MRECT
    com.google.ads.AdSize IAB_BANNER -> IAB_BANNER
    com.google.ads.AdSize IAB_LEADERBOARD -> IAB_LEADERBOARD
    com.google.ads.AdSize IAB_WIDE_SKYSCRAPER -> IAB_WIDE_SKYSCRAPER
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    boolean isFullWidth() -> isFullWidth
    boolean isAutoHeight() -> isAutoHeight
    boolean isCustomAdSize() -> isCustomAdSize
    java.lang.String toString() -> toString
    int getWidthInPixels(android.content.Context) -> getWidthInPixels
    int getHeightInPixels(android.content.Context) -> getHeightInPixels
    boolean isSizeAppropriate(int,int) -> isSizeAppropriate
    com.google.ads.AdSize findBestSize(com.google.ads.AdSize[]) -> findBestSize
com.google.ads.mediation.EmptyNetworkExtras -> com.google.ads.mediation.EmptyNetworkExtras:
com.google.ads.mediation.MediationAdRequest -> com.google.ads.mediation.MediationAdRequest:
    java.util.Date d -> d
    com.google.ads.AdRequest$Gender e -> e
    java.util.Set f -> f
    boolean g -> g
    java.lang.Integer getAgeInYears() -> getAgeInYears
    java.util.Date getBirthday() -> getBirthday
    com.google.ads.AdRequest$Gender getGender() -> getGender
    java.util.Set getKeywords() -> getKeywords
    android.location.Location getLocation() -> getLocation
    boolean isTesting() -> isTesting
com.google.ads.mediation.MediationAdapter -> com.google.ads.mediation.MediationAdapter:
    void destroy() -> destroy
    java.lang.Class getAdditionalParametersType() -> getAdditionalParametersType
    java.lang.Class getServerParametersType() -> getServerParametersType
com.google.ads.mediation.MediationBannerAdapter -> com.google.ads.mediation.MediationBannerAdapter:
    void requestBannerAd(com.google.ads.mediation.MediationBannerListener,android.app.Activity,com.google.ads.mediation.MediationServerParameters,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.NetworkExtras) -> requestBannerAd
    android.view.View getBannerView() -> getBannerView
com.google.ads.mediation.MediationBannerListener -> com.google.ads.mediation.MediationBannerListener:
    void onReceivedAd(com.google.ads.mediation.MediationBannerAdapter) -> onReceivedAd
    void onFailedToReceiveAd(com.google.ads.mediation.MediationBannerAdapter,com.google.ads.AdRequest$ErrorCode) -> onFailedToReceiveAd
    void onPresentScreen(com.google.ads.mediation.MediationBannerAdapter) -> onPresentScreen
    void onDismissScreen(com.google.ads.mediation.MediationBannerAdapter) -> onDismissScreen
    void onLeaveApplication(com.google.ads.mediation.MediationBannerAdapter) -> onLeaveApplication
    void onClick(com.google.ads.mediation.MediationBannerAdapter) -> onClick
com.google.ads.mediation.MediationInterstitialAdapter -> com.google.ads.mediation.MediationInterstitialAdapter:
    void requestInterstitialAd(com.google.ads.mediation.MediationInterstitialListener,android.app.Activity,com.google.ads.mediation.MediationServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.NetworkExtras) -> requestInterstitialAd
    void showInterstitial() -> showInterstitial
com.google.ads.mediation.MediationInterstitialListener -> com.google.ads.mediation.MediationInterstitialListener:
    void onReceivedAd(com.google.ads.mediation.MediationInterstitialAdapter) -> onReceivedAd
    void onFailedToReceiveAd(com.google.ads.mediation.MediationInterstitialAdapter,com.google.ads.AdRequest$ErrorCode) -> onFailedToReceiveAd
    void onPresentScreen(com.google.ads.mediation.MediationInterstitialAdapter) -> onPresentScreen
    void onDismissScreen(com.google.ads.mediation.MediationInterstitialAdapter) -> onDismissScreen
    void onLeaveApplication(com.google.ads.mediation.MediationInterstitialAdapter) -> onLeaveApplication
com.google.ads.mediation.MediationServerParameters -> com.google.ads.mediation.MediationServerParameters:
    void load(java.util.Map) -> load
    void a() -> a
com.google.ads.mediation.MediationServerParameters$MappingException -> com.google.ads.mediation.MediationServerParameters$MappingException:
com.google.ads.mediation.MediationServerParameters$Parameter -> com.google.ads.mediation.MediationServerParameters$Parameter:
    java.lang.String name() -> name
    boolean required() -> required
com.google.ads.mediation.NetworkExtras -> com.google.ads.mediation.NetworkExtras:
com.google.ads.mediation.admob.AdMobAdapter -> com.google.ads.mediation.admob.AdMobAdapter:
    com.google.android.gms.ads.AdView h -> h
    com.google.android.gms.ads.InterstitialAd i -> i
    com.google.android.gms.ads.AdRequest a(android.content.Context,com.google.ads.mediation.MediationAdRequest,com.google.android.gms.ads.mediation.admob.AdMobExtras,com.google.ads.mediation.admob.AdMobServerParameters) -> a
    void destroy() -> destroy
    java.lang.Class getAdditionalParametersType() -> getAdditionalParametersType
    java.lang.Class getServerParametersType() -> getServerParametersType
    void requestBannerAd(com.google.ads.mediation.MediationBannerListener,android.app.Activity,com.google.ads.mediation.admob.AdMobServerParameters,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest,com.google.android.gms.ads.mediation.admob.AdMobExtras) -> requestBannerAd
    android.view.View getBannerView() -> getBannerView
    void requestInterstitialAd(com.google.ads.mediation.MediationInterstitialListener,android.app.Activity,com.google.ads.mediation.admob.AdMobServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.android.gms.ads.mediation.admob.AdMobExtras) -> requestInterstitialAd
    void showInterstitial() -> showInterstitial
    void requestBannerAd(com.google.ads.mediation.MediationBannerListener,android.app.Activity,com.google.ads.mediation.MediationServerParameters,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.NetworkExtras) -> requestBannerAd
    void requestInterstitialAd(com.google.ads.mediation.MediationInterstitialListener,android.app.Activity,com.google.ads.mediation.MediationServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.NetworkExtras) -> requestInterstitialAd
com.google.ads.mediation.admob.AdMobAdapter$a -> com.google.ads.mediation.admob.AdMobAdapter$a:
    com.google.ads.mediation.admob.AdMobAdapter j -> j
    com.google.ads.mediation.MediationBannerListener k -> k
    void onAdLoaded() -> onAdLoaded
    void onAdFailedToLoad(int) -> onAdFailedToLoad
    void onAdOpened() -> onAdOpened
    void onAdClosed() -> onAdClosed
    void onAdLeftApplication() -> onAdLeftApplication
com.google.ads.mediation.admob.AdMobAdapter$b -> com.google.ads.mediation.admob.AdMobAdapter$b:
    com.google.ads.mediation.admob.AdMobAdapter j -> j
    com.google.ads.mediation.MediationInterstitialListener l -> l
    void onAdLoaded() -> onAdLoaded
    void onAdFailedToLoad(int) -> onAdFailedToLoad
    void onAdOpened() -> onAdOpened
    void onAdClosed() -> onAdClosed
    void onAdLeftApplication() -> onAdLeftApplication
com.google.ads.mediation.admob.AdMobServerParameters -> com.google.ads.mediation.admob.AdMobServerParameters:
    java.lang.String adUnitId -> adUnitId
    java.lang.String allowHouseAds -> allowHouseAds
    int tagForChildDirectedTreatment -> tagForChildDirectedTreatment
com.google.ads.mediation.customevent.CustomEvent -> com.google.ads.mediation.customevent.CustomEvent:
    void destroy() -> destroy
com.google.ads.mediation.customevent.CustomEventAdapter -> com.google.ads.mediation.customevent.CustomEventAdapter:
    android.view.View m -> m
    com.google.ads.mediation.customevent.CustomEventBanner n -> n
    com.google.ads.mediation.customevent.CustomEventInterstitial o -> o
    java.lang.Object a(java.lang.String) -> a
    void destroy() -> destroy
    java.lang.Class getAdditionalParametersType() -> getAdditionalParametersType
    android.view.View getBannerView() -> getBannerView
    java.lang.Class getServerParametersType() -> getServerParametersType
    void requestBannerAd(com.google.ads.mediation.MediationBannerListener,android.app.Activity,com.google.ads.mediation.customevent.CustomEventServerParameters,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest,com.google.android.gms.ads.mediation.customevent.CustomEventExtras) -> requestBannerAd
    void requestInterstitialAd(com.google.ads.mediation.MediationInterstitialListener,android.app.Activity,com.google.ads.mediation.customevent.CustomEventServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.android.gms.ads.mediation.customevent.CustomEventExtras) -> requestInterstitialAd
    void showInterstitial() -> showInterstitial
    void a(android.view.View) -> a
    void requestBannerAd(com.google.ads.mediation.MediationBannerListener,android.app.Activity,com.google.ads.mediation.MediationServerParameters,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.NetworkExtras) -> requestBannerAd
    void requestInterstitialAd(com.google.ads.mediation.MediationInterstitialListener,android.app.Activity,com.google.ads.mediation.MediationServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.NetworkExtras) -> requestInterstitialAd
    void a(com.google.ads.mediation.customevent.CustomEventAdapter,android.view.View) -> a
com.google.ads.mediation.customevent.CustomEventAdapter$a -> com.google.ads.mediation.customevent.CustomEventAdapter$a:
    com.google.ads.mediation.customevent.CustomEventAdapter p -> p
    com.google.ads.mediation.MediationBannerListener k -> k
    void onReceivedAd(android.view.View) -> onReceivedAd
    void onFailedToReceiveAd() -> onFailedToReceiveAd
    void onClick() -> onClick
    void onPresentScreen() -> onPresentScreen
    void onDismissScreen() -> onDismissScreen
    void onLeaveApplication() -> onLeaveApplication
com.google.ads.mediation.customevent.CustomEventAdapter$b -> com.google.ads.mediation.customevent.CustomEventAdapter$b:
    com.google.ads.mediation.customevent.CustomEventAdapter p -> p
    com.google.ads.mediation.MediationInterstitialListener l -> l
    com.google.ads.mediation.customevent.CustomEventAdapter q -> q
    void onReceivedAd() -> onReceivedAd
    void onFailedToReceiveAd() -> onFailedToReceiveAd
    void onPresentScreen() -> onPresentScreen
    void onDismissScreen() -> onDismissScreen
    void onLeaveApplication() -> onLeaveApplication
com.google.ads.mediation.customevent.CustomEventBanner -> com.google.ads.mediation.customevent.CustomEventBanner:
    void requestBannerAd(com.google.ads.mediation.customevent.CustomEventBannerListener,android.app.Activity,java.lang.String,java.lang.String,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest,java.lang.Object) -> requestBannerAd
com.google.ads.mediation.customevent.CustomEventBannerListener -> com.google.ads.mediation.customevent.CustomEventBannerListener:
    void onReceivedAd(android.view.View) -> onReceivedAd
    void onClick() -> onClick
com.google.ads.mediation.customevent.CustomEventInterstitial -> com.google.ads.mediation.customevent.CustomEventInterstitial:
    void requestInterstitialAd(com.google.ads.mediation.customevent.CustomEventInterstitialListener,android.app.Activity,java.lang.String,java.lang.String,com.google.ads.mediation.MediationAdRequest,java.lang.Object) -> requestInterstitialAd
    void showInterstitial() -> showInterstitial
com.google.ads.mediation.customevent.CustomEventInterstitialListener -> com.google.ads.mediation.customevent.CustomEventInterstitialListener:
    void onReceivedAd() -> onReceivedAd
com.google.ads.mediation.customevent.CustomEventListener -> com.google.ads.mediation.customevent.CustomEventListener:
    void onFailedToReceiveAd() -> onFailedToReceiveAd
    void onPresentScreen() -> onPresentScreen
    void onDismissScreen() -> onDismissScreen
    void onLeaveApplication() -> onLeaveApplication
com.google.ads.mediation.customevent.CustomEventServerParameters -> com.google.ads.mediation.customevent.CustomEventServerParameters:
    java.lang.String label -> label
    java.lang.String className -> className
    java.lang.String parameter -> parameter
com.google.android.gms.R -> com.google.android.gms.R:
com.google.android.gms.R$attr -> com.google.android.gms.R$attr:
    int adSize -> adSize
    int adUnitId -> adUnitId
    int cameraBearing -> cameraBearing
    int cameraTargetLat -> cameraTargetLat
    int cameraTargetLng -> cameraTargetLng
    int cameraTilt -> cameraTilt
    int cameraZoom -> cameraZoom
    int mapType -> mapType
    int uiCompass -> uiCompass
    int uiRotateGestures -> uiRotateGestures
    int uiScrollGestures -> uiScrollGestures
    int uiTiltGestures -> uiTiltGestures
    int uiZoomControls -> uiZoomControls
    int uiZoomGestures -> uiZoomGestures
    int useViewLifecycle -> useViewLifecycle
    int zOrderOnTop -> zOrderOnTop
com.google.android.gms.R$color -> com.google.android.gms.R$color:
    int common_action_bar_splitter -> common_action_bar_splitter
    int common_signin_btn_dark_text_default -> common_signin_btn_dark_text_default
    int common_signin_btn_dark_text_disabled -> common_signin_btn_dark_text_disabled
    int common_signin_btn_dark_text_focused -> common_signin_btn_dark_text_focused
    int common_signin_btn_dark_text_pressed -> common_signin_btn_dark_text_pressed
    int common_signin_btn_default_background -> common_signin_btn_default_background
    int common_signin_btn_light_text_default -> common_signin_btn_light_text_default
    int common_signin_btn_light_text_disabled -> common_signin_btn_light_text_disabled
    int common_signin_btn_light_text_focused -> common_signin_btn_light_text_focused
    int common_signin_btn_light_text_pressed -> common_signin_btn_light_text_pressed
    int common_signin_btn_text_dark -> common_signin_btn_text_dark
    int common_signin_btn_text_light -> common_signin_btn_text_light
com.google.android.gms.R$drawable -> com.google.android.gms.R$drawable:
    int common_signin_btn_icon_dark -> common_signin_btn_icon_dark
    int common_signin_btn_icon_disabled_dark -> common_signin_btn_icon_disabled_dark
    int common_signin_btn_icon_disabled_focus_dark -> common_signin_btn_icon_disabled_focus_dark
    int common_signin_btn_icon_disabled_focus_light -> common_signin_btn_icon_disabled_focus_light
    int common_signin_btn_icon_disabled_light -> common_signin_btn_icon_disabled_light
    int common_signin_btn_icon_focus_dark -> common_signin_btn_icon_focus_dark
    int common_signin_btn_icon_focus_light -> common_signin_btn_icon_focus_light
    int common_signin_btn_icon_light -> common_signin_btn_icon_light
    int common_signin_btn_icon_normal_dark -> common_signin_btn_icon_normal_dark
    int common_signin_btn_icon_normal_light -> common_signin_btn_icon_normal_light
    int common_signin_btn_icon_pressed_dark -> common_signin_btn_icon_pressed_dark
    int common_signin_btn_icon_pressed_light -> common_signin_btn_icon_pressed_light
    int common_signin_btn_text_dark -> common_signin_btn_text_dark
    int common_signin_btn_text_disabled_dark -> common_signin_btn_text_disabled_dark
    int common_signin_btn_text_disabled_focus_dark -> common_signin_btn_text_disabled_focus_dark
    int common_signin_btn_text_disabled_focus_light -> common_signin_btn_text_disabled_focus_light
    int common_signin_btn_text_disabled_light -> common_signin_btn_text_disabled_light
    int common_signin_btn_text_focus_dark -> common_signin_btn_text_focus_dark
    int common_signin_btn_text_focus_light -> common_signin_btn_text_focus_light
    int common_signin_btn_text_light -> common_signin_btn_text_light
    int common_signin_btn_text_normal_dark -> common_signin_btn_text_normal_dark
    int common_signin_btn_text_normal_light -> common_signin_btn_text_normal_light
    int common_signin_btn_text_pressed_dark -> common_signin_btn_text_pressed_dark
    int common_signin_btn_text_pressed_light -> common_signin_btn_text_pressed_light
    int ic_plusone_medium_off_client -> ic_plusone_medium_off_client
    int ic_plusone_small_off_client -> ic_plusone_small_off_client
    int ic_plusone_standard_off_client -> ic_plusone_standard_off_client
    int ic_plusone_tall_off_client -> ic_plusone_tall_off_client
com.google.android.gms.R$id -> com.google.android.gms.R$id:
    int hybrid -> hybrid
    int none -> none
    int normal -> normal
    int satellite -> satellite
    int terrain -> terrain
com.google.android.gms.R$integer -> com.google.android.gms.R$integer:
    int google_play_services_version -> google_play_services_version
com.google.android.gms.R$string -> com.google.android.gms.R$string:
    int auth_client_needs_enabling_title -> auth_client_needs_enabling_title
    int auth_client_needs_installation_title -> auth_client_needs_installation_title
    int auth_client_needs_update_title -> auth_client_needs_update_title
    int auth_client_play_services_err_notification_msg -> auth_client_play_services_err_notification_msg
    int auth_client_requested_by_msg -> auth_client_requested_by_msg
    int auth_client_using_bad_version_title -> auth_client_using_bad_version_title
    int common_google_play_services_enable_button -> common_google_play_services_enable_button
    int common_google_play_services_enable_text -> common_google_play_services_enable_text
    int common_google_play_services_enable_title -> common_google_play_services_enable_title
    int common_google_play_services_install_button -> common_google_play_services_install_button
    int common_google_play_services_install_text_phone -> common_google_play_services_install_text_phone
    int common_google_play_services_install_text_tablet -> common_google_play_services_install_text_tablet
    int common_google_play_services_install_title -> common_google_play_services_install_title
    int common_google_play_services_invalid_account_text -> common_google_play_services_invalid_account_text
    int common_google_play_services_invalid_account_title -> common_google_play_services_invalid_account_title
    int common_google_play_services_network_error_text -> common_google_play_services_network_error_text
    int common_google_play_services_network_error_title -> common_google_play_services_network_error_title
    int common_google_play_services_unknown_issue -> common_google_play_services_unknown_issue
    int common_google_play_services_unsupported_date_text -> common_google_play_services_unsupported_date_text
    int common_google_play_services_unsupported_text -> common_google_play_services_unsupported_text
    int common_google_play_services_unsupported_title -> common_google_play_services_unsupported_title
    int common_google_play_services_update_button -> common_google_play_services_update_button
    int common_google_play_services_update_text -> common_google_play_services_update_text
    int common_google_play_services_update_title -> common_google_play_services_update_title
    int common_signin_button_text -> common_signin_button_text
    int common_signin_button_text_long -> common_signin_button_text_long
com.google.android.gms.R$styleable -> com.google.android.gms.R$styleable:
    int[] AdsAttrs -> AdsAttrs
    int AdsAttrs_adSize -> AdsAttrs_adSize
    int AdsAttrs_adUnitId -> AdsAttrs_adUnitId
    int[] MapAttrs -> MapAttrs
    int MapAttrs_cameraBearing -> MapAttrs_cameraBearing
    int MapAttrs_cameraTargetLat -> MapAttrs_cameraTargetLat
    int MapAttrs_cameraTargetLng -> MapAttrs_cameraTargetLng
    int MapAttrs_cameraTilt -> MapAttrs_cameraTilt
    int MapAttrs_cameraZoom -> MapAttrs_cameraZoom
    int MapAttrs_mapType -> MapAttrs_mapType
    int MapAttrs_uiCompass -> MapAttrs_uiCompass
    int MapAttrs_uiRotateGestures -> MapAttrs_uiRotateGestures
    int MapAttrs_uiScrollGestures -> MapAttrs_uiScrollGestures
    int MapAttrs_uiTiltGestures -> MapAttrs_uiTiltGestures
    int MapAttrs_uiZoomControls -> MapAttrs_uiZoomControls
    int MapAttrs_uiZoomGestures -> MapAttrs_uiZoomGestures
    int MapAttrs_useViewLifecycle -> MapAttrs_useViewLifecycle
    int MapAttrs_zOrderOnTop -> MapAttrs_zOrderOnTop
com.google.android.gms.ads.AdActivity -> com.google.android.gms.ads.AdActivity:
    com.google.android.gms.internal.bn dH -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onRestart() -> onRestart
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroy() -> onDestroy
com.google.android.gms.ads.AdListener -> com.google.android.gms.ads.a:
    void onAdClosed() -> onAdClosed
    void onAdFailedToLoad(int) -> onAdFailedToLoad
    void onAdLeftApplication() -> onAdLeftApplication
    void onAdOpened() -> onAdOpened
    void onAdLoaded() -> onAdLoaded
com.google.android.gms.ads.AdRequest -> com.google.android.gms.ads.b:
    java.lang.String DEVICE_ID_EMULATOR -> a
    java.util.Date d -> b
    int dI -> c
    java.util.Set f -> d
    java.util.Map dJ -> e
    int dK -> f
    java.util.Set dL -> g
    java.util.Date getBirthday() -> a
    int getGender() -> b
    java.util.Set getKeywords() -> c
    com.google.android.gms.ads.mediation.NetworkExtras getNetworkExtras(java.lang.Class) -> a
    boolean isTestDevice(android.content.Context) -> a
    java.util.Map v() -> d
    int w() -> e
com.google.android.gms.ads.AdRequest$1 -> com.google.android.gms.ads.c:
com.google.android.gms.ads.AdRequest$Builder -> com.google.android.gms.ads.d:
    java.util.HashSet dM -> a
    java.util.HashMap dN -> b
    java.util.HashSet dO -> c
    java.util.Date d -> d
    int dI -> e
    int dK -> f
    com.google.android.gms.ads.AdRequest$Builder addKeyword(java.lang.String) -> a
    com.google.android.gms.ads.AdRequest$Builder addNetworkExtras(com.google.android.gms.ads.mediation.NetworkExtras) -> a
    com.google.android.gms.ads.AdRequest$Builder addTestDevice(java.lang.String) -> b
    com.google.android.gms.ads.AdRequest build() -> a
    com.google.android.gms.ads.AdRequest$Builder setBirthday(java.util.Date) -> a
    com.google.android.gms.ads.AdRequest$Builder setGender(int) -> a
    com.google.android.gms.ads.AdRequest$Builder tagForChildDirectedTreatment(boolean) -> a
    java.util.Date a(com.google.android.gms.ads.AdRequest$Builder) -> a
    int b(com.google.android.gms.ads.AdRequest$Builder) -> b
    java.util.HashSet c(com.google.android.gms.ads.AdRequest$Builder) -> c
    java.util.HashMap d(com.google.android.gms.ads.AdRequest$Builder) -> d
    int e(com.google.android.gms.ads.AdRequest$Builder) -> e
    java.util.HashSet f(com.google.android.gms.ads.AdRequest$Builder) -> f
com.google.android.gms.ads.AdSize -> com.google.android.gms.ads.e:
    com.google.android.gms.ads.AdSize BANNER -> a
    com.google.android.gms.ads.AdSize FULL_BANNER -> b
    com.google.android.gms.ads.AdSize LEADERBOARD -> c
    com.google.android.gms.ads.AdSize MEDIUM_RECTANGLE -> d
    com.google.android.gms.ads.AdSize WIDE_SKYSCRAPER -> e
    com.google.android.gms.ads.AdSize SMART_BANNER -> f
    int dP -> g
    int dQ -> h
    java.lang.String dR -> i
    boolean equals(java.lang.Object) -> equals
    int getHeight() -> a
    int getHeightInPixels(android.content.Context) -> a
    int getWidth() -> b
    int getWidthInPixels(android.content.Context) -> b
    int hashCode() -> hashCode
    boolean isAutoHeight() -> c
    boolean isFullWidth() -> d
    java.lang.String toString() -> toString
com.google.android.gms.ads.AdView -> com.google.android.gms.ads.AdView:
    com.google.android.gms.internal.av dS -> a
    com.google.android.gms.ads.AdListener dT -> b
    com.google.android.gms.internal.ac dU -> c
    com.google.android.gms.ads.AdSize c -> d
    java.lang.String dV -> e
    com.google.android.gms.ads.a dW -> f
    void destroy() -> a
    com.google.android.gms.ads.AdListener getAdListener() -> getAdListener
    com.google.android.gms.ads.AdSize getAdSize() -> getAdSize
    java.lang.String getAdUnitId() -> getAdUnitId
    void loadAd(com.google.android.gms.ads.AdRequest) -> a
    void setAdListener(com.google.android.gms.ads.AdListener) -> setAdListener
    void setAdSize(com.google.android.gms.ads.AdSize) -> setAdSize
    void setAdUnitId(java.lang.String) -> setAdUnitId
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void x() -> b
    void c(java.lang.String) -> a
    void d(java.lang.String) -> b
com.google.android.gms.ads.InterstitialAd -> com.google.android.gms.ads.f:
    com.google.android.gms.internal.av dS -> a
    android.content.Context mContext -> b
    com.google.android.gms.ads.AdListener dT -> c
    com.google.android.gms.internal.ac dU -> d
    java.lang.String dV -> e
    com.google.android.gms.ads.a dW -> f
    void loadAd(com.google.android.gms.ads.AdRequest) -> a
    void setAdListener(com.google.android.gms.ads.AdListener) -> a
    void setAdUnitId(java.lang.String) -> a
    void show() -> a
    void c(java.lang.String) -> b
    void d(java.lang.String) -> c
com.google.android.gms.ads.a -> com.google.android.gms.ads.g:
    void a(java.lang.String,java.lang.String) -> a
com.google.android.gms.ads.identifier.AdvertisingIdClient -> com.google.android.gms.ads.a.a:
    com.google.android.gms.common.a g(android.content.Context) -> b
    com.google.android.gms.ads.identifier.AdvertisingIdClient$Info getAdvertisingIdInfo(android.content.Context) -> a
com.google.android.gms.ads.identifier.AdvertisingIdClient$Info -> com.google.android.gms.ads.a.b:
    java.lang.String dX -> a
    boolean dY -> b
    java.lang.String getId() -> a
    boolean isLimitAdTrackingEnabled() -> b
com.google.android.gms.ads.mediation.NetworkExtras -> com.google.android.gms.ads.b.a:
com.google.android.gms.ads.mediation.admob.AdMobExtras -> com.google.android.gms.ads.b.a.a:
    android.os.Bundle im -> a
    android.os.Bundle getExtras() -> a
com.google.android.gms.ads.mediation.customevent.CustomEventExtras -> com.google.android.gms.ads.b.b.a:
    java.util.HashMap in -> a
    java.lang.Object getExtra(java.lang.String) -> a
com.google.android.gms.appstate.AppStateClient -> com.google.android.gms.a.a:
    com.google.android.gms.internal.cw io -> a
    void connect() -> a
    boolean isConnected() -> b
    void disconnect() -> c
com.google.android.gms.appstate.AppStateClient$1 -> com.google.android.gms.a.b:
com.google.android.gms.appstate.AppStateClient$Builder -> com.google.android.gms.a.c:
    java.lang.String[] ip -> a
    android.content.Context mContext -> b
    com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks iq -> c
    com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener ir -> d
    java.lang.String[] is -> e
    java.lang.String it -> f
    com.google.android.gms.appstate.AppStateClient$Builder setScopes(java.lang.String[]) -> a
    com.google.android.gms.appstate.AppStateClient create() -> a
com.google.android.gms.auth.RecoveryDecision -> com.google.android.gms.auth.RecoveryDecision:
    com.google.android.gms.auth.RecoveryDecisionCreator CREATOR -> a
    int iM -> b
    android.app.PendingIntent recoveryIntent -> c
    boolean showRecoveryInterstitial -> d
    boolean isRecoveryInfoNeeded -> e
    boolean isRecoveryInterstitialAllowed -> f
    android.app.PendingIntent recoveryIntentWithoutIntro -> g
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.auth.RecoveryDecisionCreator -> com.google.android.gms.auth.a:
    com.google.android.gms.auth.RecoveryDecision createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.auth.RecoveryDecision[] newArray(int) -> a
    void a(com.google.android.gms.auth.RecoveryDecision,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.common.ConnectionResult -> com.google.android.gms.common.a:
    com.google.android.gms.common.ConnectionResult iP -> a
    android.app.PendingIntent mPendingIntent -> b
    int iC -> c
    void startResolutionForResult(android.app.Activity,int) -> a
    boolean hasResolution() -> a
    int getErrorCode() -> b
    java.lang.String aH() -> c
    java.lang.String toString() -> toString
com.google.android.gms.common.GooglePlayServicesClient -> com.google.android.gms.common.b:
com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks -> com.google.android.gms.common.c:
    void onConnected(android.os.Bundle) -> a
    void onDisconnected() -> m
com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener -> com.google.android.gms.common.d:
    void onConnectionFailed(com.google.android.gms.common.ConnectionResult) -> a
com.google.android.gms.common.GooglePlayServicesNotAvailableException -> com.google.android.gms.common.e:
    int errorCode -> a
com.google.android.gms.common.GooglePlayServicesRepairableException -> com.google.android.gms.common.f:
    int iL -> a
com.google.android.gms.common.GooglePlayServicesUtil -> com.google.android.gms.common.g:
    byte[][] iQ -> a
    byte[][] iR -> b
    byte[][] iS -> c
    byte[][] iT -> d
    byte[][] iU -> i
    byte[][] iV -> j
    byte[][] iW -> e
    boolean iX -> f
    boolean iY -> g
    boolean iZ -> h
    int ja -> k
    java.lang.Object jb -> l
    int isGooglePlayServicesAvailable(android.content.Context) -> a
    void m(android.content.Context) -> b
    void n(android.content.Context) -> d
    byte[] a(android.content.pm.PackageInfo,byte[][]) -> a
    android.content.Intent a(android.content.Context,int,int) -> a
    boolean n(int) -> a
    int o(int) -> b
    boolean aI() -> a
    boolean o(android.content.Context) -> e
    java.lang.String b(android.content.Context,int,int) -> b
    java.lang.String b(android.content.Context,int) -> a
    android.app.Dialog getErrorDialog(int,android.app.Activity,int,android.content.DialogInterface$OnCancelListener) -> a
    android.app.Dialog a(int,android.app.Activity,int,android.content.DialogInterface$OnCancelListener,int) -> a
    boolean a(android.content.res.Resources) -> a
    boolean b(android.content.res.Resources) -> b
    android.content.Context getRemoteContext(android.content.Context) -> c
    byte[][] a(byte[][][]) -> a
    byte[] t(java.lang.String) -> a
com.google.android.gms.common.SignInButton -> com.google.android.gms.common.SignInButton:
    int mSize -> a
    int jc -> b
    android.view.View jd -> c
    android.view.View$OnClickListener je -> d
    void setSize(int) -> setSize
    void setColorScheme(int) -> setColorScheme
    void setStyle(int,int) -> a
    void p(android.content.Context) -> a
    android.widget.Button c(android.content.Context,int,int) -> a
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void setEnabled(boolean) -> setEnabled
    void onClick(android.view.View) -> onClick
com.google.android.gms.common.UserRecoverableException -> com.google.android.gms.common.h:
    android.content.Intent mIntent -> a
com.google.android.gms.common.a -> com.google.android.gms.common.i:
    boolean iN -> a
    java.util.concurrent.BlockingQueue iO -> b
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    android.os.IBinder aG() -> a
com.google.android.gms.common.data.DataBuffer -> com.google.android.gms.common.data.a:
    com.google.android.gms.common.data.d jf -> a
    int getCount() -> a
    java.lang.Object get(int) -> a
    void close() -> b
    java.util.Iterator iterator() -> iterator
com.google.android.gms.common.data.Freezable -> com.google.android.gms.common.data.b:
    java.lang.Object freeze() -> a
com.google.android.gms.common.data.a -> com.google.android.gms.common.data.c:
    com.google.android.gms.common.data.DataBuffer jg -> a
    int jh -> b
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.android.gms.common.data.b -> com.google.android.gms.common.data.e:
    com.google.android.gms.common.data.d jf -> a
    int ji -> b
    int jj -> c
    long getLong(java.lang.String) -> a
    int getInteger(java.lang.String) -> b
    boolean getBoolean(java.lang.String) -> c
    java.lang.String getString(java.lang.String) -> d
    android.net.Uri u(java.lang.String) -> e
    boolean v(java.lang.String) -> f
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.android.gms.common.data.d -> com.google.android.gms.common.data.d:
    com.google.android.gms.common.data.e CREATOR -> a
    int iM -> f
    java.lang.String[] jm -> g
    android.os.Bundle jn -> b
    android.database.CursorWindow[] jo -> h
    int iC -> i
    android.os.Bundle jp -> j
    int[] jq -> c
    int jr -> d
    boolean mClosed -> e
    java.lang.Object js -> k
    boolean jt -> l
    com.google.android.gms.common.data.d$a ju -> m
    void b(java.lang.Object) -> a
    void aJ() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int getVersionCode() -> b
    java.lang.String[] aK() -> c
    android.database.CursorWindow[] aL() -> d
    int getStatusCode() -> e
    android.os.Bundle aM() -> f
    void b(java.lang.String,int) -> a
    long a(java.lang.String,int,int) -> a
    int b(java.lang.String,int,int) -> b
    java.lang.String c(java.lang.String,int,int) -> c
    boolean d(java.lang.String,int,int) -> d
    android.net.Uri f(java.lang.String,int,int) -> e
    boolean g(java.lang.String,int,int) -> f
    int getCount() -> g
    int q(int) -> a
    boolean isClosed() -> h
    void close() -> i
    void finalize() -> finalize
com.google.android.gms.common.data.d$1 -> com.google.android.gms.common.data.f:
com.google.android.gms.common.data.d$a -> com.google.android.gms.common.data.g:
    java.lang.String[] jm -> a
    java.util.ArrayList jv -> b
    java.lang.String jw -> c
    java.util.HashMap jx -> d
    boolean jy -> e
    java.lang.String jz -> f
com.google.android.gms.common.data.e -> com.google.android.gms.common.data.h:
    com.google.android.gms.common.data.d h(android.os.Parcel) -> a
    com.google.android.gms.common.data.d[] s(int) -> a
    void a(com.google.android.gms.common.data.d,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.common.images.ImageManager -> com.google.android.gms.common.images.ImageManager:
    java.lang.Object jC -> a
    java.util.HashSet jD -> b
    com.google.android.gms.common.images.ImageManager jE -> c
    com.google.android.gms.common.images.ImageManager jF -> d
    android.content.Context mContext -> e
    android.os.Handler mHandler -> f
    java.util.concurrent.ExecutorService jG -> g
    com.google.android.gms.common.images.ImageManager$b jH -> h
    java.util.Map jI -> i
    java.util.Map jJ -> j
    com.google.android.gms.common.images.ImageManager create(android.content.Context) -> a
    com.google.android.gms.common.images.ImageManager a(android.content.Context,boolean) -> a
    void aO() -> c
    void loadImage(android.widget.ImageView,android.net.Uri,int) -> a
    void a(com.google.android.gms.common.images.a) -> a
    boolean b(com.google.android.gms.common.images.a) -> b
    android.graphics.Bitmap a(com.google.android.gms.common.images.a$a) -> a
    boolean a(com.google.android.gms.common.images.ImageManager,com.google.android.gms.common.images.a) -> a
    android.content.Context a(com.google.android.gms.common.images.ImageManager) -> a
    android.graphics.Bitmap a(com.google.android.gms.common.images.ImageManager,com.google.android.gms.common.images.a$a) -> a
    java.util.Map b(com.google.android.gms.common.images.ImageManager) -> b
    java.util.Map c(com.google.android.gms.common.images.ImageManager) -> c
    java.lang.Object aP() -> a
    java.util.HashSet aQ() -> b
    java.util.concurrent.ExecutorService d(com.google.android.gms.common.images.ImageManager) -> d
    android.os.Handler e(com.google.android.gms.common.images.ImageManager) -> e
    com.google.android.gms.common.images.ImageManager$b f(com.google.android.gms.common.images.ImageManager) -> f
com.google.android.gms.common.images.ImageManager$ImageReceiver -> com.google.android.gms.common.images.ImageManager$ImageReceiver:
    android.net.Uri mUri -> c
    java.util.ArrayList jK -> d
    boolean jL -> a
    com.google.android.gms.common.images.ImageManager jM -> b
    void c(com.google.android.gms.common.images.a) -> a
    void d(com.google.android.gms.common.images.a) -> b
    void aR() -> a
    void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
    java.util.ArrayList a(com.google.android.gms.common.images.ImageManager$ImageReceiver) -> a
com.google.android.gms.common.images.ImageManager$OnImageLoadedListener -> com.google.android.gms.common.images.a:
    void onImageLoaded(android.net.Uri,android.graphics.drawable.Drawable) -> a
com.google.android.gms.common.images.ImageManager$a -> com.google.android.gms.common.images.b:
    int a(android.app.ActivityManager) -> a
com.google.android.gms.common.images.ImageManager$b -> com.google.android.gms.common.images.c:
    void a(boolean,com.google.android.gms.common.images.a$a,android.graphics.Bitmap,android.graphics.Bitmap) -> a
    int q(android.content.Context) -> a
    int a(com.google.android.gms.common.images.a$a,android.graphics.Bitmap) -> a
    int sizeOf(java.lang.Object,java.lang.Object) -> a
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> a
com.google.android.gms.common.images.ImageManager$c -> com.google.android.gms.common.images.d:
    android.net.Uri mUri -> b
    android.os.ParcelFileDescriptor jN -> c
    com.google.android.gms.common.images.ImageManager jM -> a
    void run() -> run
com.google.android.gms.common.images.ImageManager$d -> com.google.android.gms.common.images.e:
    com.google.android.gms.common.images.a jO -> b
    com.google.android.gms.common.images.ImageManager jM -> a
    void run() -> run
com.google.android.gms.common.images.ImageManager$e -> com.google.android.gms.common.images.f:
    com.google.android.gms.common.images.ImageManager$b jH -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onLowMemory() -> onLowMemory
    void onTrimMemory(int) -> onTrimMemory
com.google.android.gms.common.images.ImageManager$f -> com.google.android.gms.common.images.g:
    android.net.Uri mUri -> b
    android.graphics.Bitmap jP -> c
    java.util.concurrent.CountDownLatch jQ -> d
    boolean jR -> e
    com.google.android.gms.common.images.ImageManager jM -> a
    void run() -> run
    void a(com.google.android.gms.common.images.ImageManager$ImageReceiver,boolean) -> a
com.google.android.gms.common.images.a -> com.google.android.gms.common.images.h:
    com.google.android.gms.common.images.a$a jS -> a
    int jT -> c
    int jU -> d
    int jV -> b
    int jW -> e
    java.lang.ref.WeakReference jX -> f
    java.lang.ref.WeakReference jY -> g
    java.lang.ref.WeakReference jZ -> h
    int ka -> i
    boolean kb -> j
    boolean kc -> k
    void v(int) -> a
    void a(android.widget.ImageView) -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    void a(android.content.Context,android.graphics.Bitmap,boolean) -> a
    void r(android.content.Context) -> a
    void b(android.content.Context,boolean) -> a
    void a(android.graphics.drawable.Drawable,boolean,boolean,boolean) -> a
    void a(android.widget.ImageView,android.graphics.drawable.Drawable,boolean,boolean,boolean) -> a
    void a(android.widget.TextView,int,android.graphics.drawable.Drawable,boolean,boolean) -> a
    boolean a(boolean,boolean) -> a
    com.google.android.gms.internal.cz a(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> a
com.google.android.gms.common.images.a$a -> com.google.android.gms.common.images.i:
    android.net.Uri uri -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.android.gms.common.internal.safeparcel.SafeParcelable -> com.google.android.gms.common.internal.safeparcel.SafeParcelable:
com.google.android.gms.common.internal.safeparcel.a -> com.google.android.gms.common.internal.safeparcel.a:
    int i(android.os.Parcel) -> a
    int y(int) -> a
    int a(android.os.Parcel,int) -> a
    void b(android.os.Parcel,int) -> b
    void a(android.os.Parcel,int,int) -> a
    int j(android.os.Parcel) -> b
    boolean c(android.os.Parcel,int) -> c
    byte d(android.os.Parcel,int) -> d
    short e(android.os.Parcel,int) -> e
    int f(android.os.Parcel,int) -> f
    long g(android.os.Parcel,int) -> g
    java.math.BigInteger h(android.os.Parcel,int) -> h
    float i(android.os.Parcel,int) -> i
    double j(android.os.Parcel,int) -> j
    java.math.BigDecimal k(android.os.Parcel,int) -> k
    java.lang.String l(android.os.Parcel,int) -> l
    android.os.IBinder m(android.os.Parcel,int) -> m
    android.os.Parcelable a(android.os.Parcel,int,android.os.Parcelable$Creator) -> a
    android.os.Bundle n(android.os.Parcel,int) -> n
    byte[] o(android.os.Parcel,int) -> o
    boolean[] p(android.os.Parcel,int) -> p
    int[] q(android.os.Parcel,int) -> q
    long[] r(android.os.Parcel,int) -> r
    java.math.BigInteger[] s(android.os.Parcel,int) -> s
    float[] t(android.os.Parcel,int) -> t
    double[] u(android.os.Parcel,int) -> u
    java.math.BigDecimal[] v(android.os.Parcel,int) -> v
    java.lang.String[] w(android.os.Parcel,int) -> w
    java.util.ArrayList x(android.os.Parcel,int) -> x
    java.lang.Object[] b(android.os.Parcel,int,android.os.Parcelable$Creator) -> b
    java.util.ArrayList c(android.os.Parcel,int,android.os.Parcelable$Creator) -> c
    android.os.Parcel y(android.os.Parcel,int) -> y
    android.os.Parcel[] z(android.os.Parcel,int) -> z
    void a(android.os.Parcel,int,java.util.List,java.lang.ClassLoader) -> a
com.google.android.gms.common.internal.safeparcel.a$a -> com.google.android.gms.common.internal.safeparcel.b:
com.google.android.gms.common.internal.safeparcel.b -> com.google.android.gms.common.internal.safeparcel.c:
    void b(android.os.Parcel,int,int) -> b
    int A(android.os.Parcel,int) -> b
    void B(android.os.Parcel,int) -> c
    int k(android.os.Parcel) -> a
    void C(android.os.Parcel,int) -> a
    void a(android.os.Parcel,int,boolean) -> a
    void a(android.os.Parcel,int,byte) -> a
    void a(android.os.Parcel,int,short) -> a
    void c(android.os.Parcel,int,int) -> a
    void a(android.os.Parcel,int,long) -> a
    void a(android.os.Parcel,int,float) -> a
    void a(android.os.Parcel,int,double) -> a
    void a(android.os.Parcel,int,java.lang.String,boolean) -> a
    void a(android.os.Parcel,int,android.os.IBinder,boolean) -> a
    void a(android.os.Parcel,int,android.os.Parcelable,int,boolean) -> a
    void a(android.os.Parcel,int,android.os.Bundle,boolean) -> a
    void a(android.os.Parcel,int,byte[],boolean) -> a
    void a(android.os.Parcel,int,java.lang.String[],boolean) -> a
    void a(android.os.Parcel,int,java.util.List,boolean) -> a
    void a(android.os.Parcel,int,android.os.Parcelable[],int,boolean) -> a
    void b(android.os.Parcel,int,java.util.List,boolean) -> b
    void a(android.os.Parcel,android.os.Parcelable,int) -> a
    void a(android.os.Parcel,int,android.os.Parcel,boolean) -> a
    void c(android.os.Parcel,int,java.util.List,boolean) -> c
com.google.android.gms.dynamic.b -> com.google.android.gms.b.a:
com.google.android.gms.dynamic.b$a -> com.google.android.gms.b.b:
    com.google.android.gms.dynamic.b z(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.dynamic.b$a$a -> com.google.android.gms.b.c:
    android.os.IBinder dG -> a
    android.os.IBinder asBinder() -> asBinder
com.google.android.gms.dynamic.c -> com.google.android.gms.b.d:
    java.lang.Object mh -> a
    com.google.android.gms.dynamic.b g(java.lang.Object) -> a
    java.lang.Object b(com.google.android.gms.dynamic.b) -> a
com.google.android.gms.dynamic.e -> com.google.android.gms.b.e:
    java.lang.String mi -> a
    java.lang.Object mj -> b
    java.lang.Object t(android.content.Context) -> a
    java.lang.Object d(android.os.IBinder) -> a
com.google.android.gms.dynamic.e$a -> com.google.android.gms.b.f:
com.google.android.gms.games.Game -> com.google.android.gms.games.Game:
    java.lang.String getApplicationId() -> b
    java.lang.String getDisplayName() -> c
    java.lang.String getPrimaryCategory() -> d
    java.lang.String getSecondaryCategory() -> e
    java.lang.String getDescription() -> f
    java.lang.String getDeveloperName() -> g
    android.net.Uri getIconImageUri() -> h
    android.net.Uri getHiResImageUri() -> i
    android.net.Uri getFeaturedImageUri() -> j
    boolean isPlayEnabledGame() -> k
    boolean isInstanceInstalled() -> l
    java.lang.String getInstancePackageName() -> m
    int getGameplayAclStatus() -> n
    int getAchievementTotalCount() -> o
    int getLeaderboardCount() -> p
com.google.android.gms.games.GameEntity -> com.google.android.gms.games.GameEntity:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int iM -> a
    java.lang.String mk -> b
    java.lang.String ml -> c
    java.lang.String mm -> d
    java.lang.String mn -> e
    java.lang.String mo -> f
    java.lang.String mp -> g
    android.net.Uri mq -> h
    android.net.Uri mr -> i
    android.net.Uri ms -> j
    boolean mt -> k
    boolean mu -> l
    java.lang.String mv -> m
    int mw -> n
    int mx -> o
    int my -> p
    int getVersionCode() -> q
    java.lang.String getApplicationId() -> b
    java.lang.String getDisplayName() -> c
    java.lang.String getPrimaryCategory() -> d
    java.lang.String getSecondaryCategory() -> e
    java.lang.String getDescription() -> f
    java.lang.String getDeveloperName() -> g
    android.net.Uri getIconImageUri() -> h
    android.net.Uri getHiResImageUri() -> i
    android.net.Uri getFeaturedImageUri() -> j
    boolean isPlayEnabledGame() -> k
    boolean isInstanceInstalled() -> l
    java.lang.String getInstancePackageName() -> m
    int getGameplayAclStatus() -> n
    int getAchievementTotalCount() -> o
    int getLeaderboardCount() -> p
    com.google.android.gms.games.Game freeze() -> r
    int hashCode() -> hashCode
    int a(com.google.android.gms.games.Game) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.games.Game,java.lang.Object) -> a
    java.lang.String toString() -> toString
    java.lang.String b(com.google.android.gms.games.Game) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
    java.lang.Integer bQ() -> s
    boolean b(java.lang.Integer) -> a
    boolean J(java.lang.String) -> a
com.google.android.gms.games.GameEntity$a -> com.google.android.gms.games.a:
    com.google.android.gms.games.GameEntity t(android.os.Parcel) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.GamesClient -> com.google.android.gms.games.c:
    com.google.android.gms.internal.em mz -> a
    void connect() -> a
    boolean isConnected() -> b
    void disconnect() -> c
    com.google.android.gms.games.Player getCurrentPlayer() -> d
    android.content.Intent getAllLeaderboardsIntent() -> e
    void submitScore(java.lang.String,long) -> a
    android.content.Intent getAchievementsIntent() -> f
    void unlockAchievement(java.lang.String) -> a
    void incrementAchievement(java.lang.String,int) -> a
    void signOut() -> g
com.google.android.gms.games.GamesClient$1 -> com.google.android.gms.games.e:
com.google.android.gms.games.GamesClient$Builder -> com.google.android.gms.games.f:
    android.content.Context mContext -> a
    java.lang.String mA -> b
    java.lang.String it -> c
    com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks iq -> d
    com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener ir -> e
    java.lang.String[] is -> f
    int mB -> g
    android.view.View mC -> h
    com.google.android.gms.games.GamesClient$Builder setScopes(java.lang.String[]) -> a
    com.google.android.gms.games.GamesClient$Builder setGravityForPopups(int) -> a
    com.google.android.gms.games.GamesClient create() -> a
com.google.android.gms.games.OnSignOutCompleteListener -> com.google.android.gms.games.g:
    void onSignOutComplete() -> a
com.google.android.gms.games.Player -> com.google.android.gms.games.Player:
    java.lang.String getPlayerId() -> b
    java.lang.String getDisplayName() -> c
    android.net.Uri getIconImageUri() -> d
    android.net.Uri getHiResImageUri() -> e
    long getRetrievedTimestamp() -> f
com.google.android.gms.games.PlayerBuffer -> com.google.android.gms.games.h:
    com.google.android.gms.games.Player get(int) -> b
    java.lang.Object get(int) -> a
com.google.android.gms.games.PlayerEntity -> com.google.android.gms.games.PlayerEntity:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int iM -> a
    java.lang.String mD -> b
    java.lang.String ml -> c
    android.net.Uri mq -> d
    android.net.Uri mr -> e
    long mE -> f
    int getVersionCode() -> g
    java.lang.String getPlayerId() -> b
    java.lang.String getDisplayName() -> c
    android.net.Uri getIconImageUri() -> d
    android.net.Uri getHiResImageUri() -> e
    long getRetrievedTimestamp() -> f
    com.google.android.gms.games.Player freeze() -> h
    int hashCode() -> hashCode
    int a(com.google.android.gms.games.Player) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.games.Player,java.lang.Object) -> a
    java.lang.String toString() -> toString
    java.lang.String b(com.google.android.gms.games.Player) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
    java.lang.Integer bQ() -> i
    boolean b(java.lang.Integer) -> a
    boolean J(java.lang.String) -> a
com.google.android.gms.games.PlayerEntity$a -> com.google.android.gms.games.i:
    com.google.android.gms.games.PlayerEntity u(android.os.Parcel) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.a -> com.google.android.gms.games.j:
    com.google.android.gms.games.GameEntity t(android.os.Parcel) -> a
    com.google.android.gms.games.GameEntity[] K(int) -> a
    void a(com.google.android.gms.games.GameEntity,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.achievement.OnAchievementUpdatedListener -> com.google.android.gms.games.a.a:
    void onAchievementUpdated(int,java.lang.String) -> a
com.google.android.gms.games.b -> com.google.android.gms.games.b:
    java.lang.String getApplicationId() -> b
    java.lang.String getDisplayName() -> c
    java.lang.String getPrimaryCategory() -> d
    java.lang.String getSecondaryCategory() -> e
    java.lang.String getDescription() -> f
    java.lang.String getDeveloperName() -> g
    android.net.Uri getIconImageUri() -> h
    android.net.Uri getHiResImageUri() -> i
    android.net.Uri getFeaturedImageUri() -> j
    boolean isPlayEnabledGame() -> k
    boolean isInstanceInstalled() -> l
    java.lang.String getInstancePackageName() -> m
    int getGameplayAclStatus() -> n
    int getAchievementTotalCount() -> o
    int getLeaderboardCount() -> p
    com.google.android.gms.games.Game freeze() -> q
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.c -> com.google.android.gms.games.k:
    com.google.android.gms.games.PlayerEntity u(android.os.Parcel) -> a
    com.google.android.gms.games.PlayerEntity[] L(int) -> a
    void a(com.google.android.gms.games.PlayerEntity,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.d -> com.google.android.gms.games.d:
    java.lang.String getPlayerId() -> b
    java.lang.String getDisplayName() -> c
    android.net.Uri getIconImageUri() -> d
    android.net.Uri getHiResImageUri() -> e
    long getRetrievedTimestamp() -> f
    com.google.android.gms.games.Player freeze() -> g
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.leaderboard.OnScoreSubmittedListener -> com.google.android.gms.games.b.a:
    void onScoreSubmitted(int,com.google.android.gms.games.leaderboard.SubmitScoreResult) -> a
com.google.android.gms.games.leaderboard.SubmitScoreResult -> com.google.android.gms.games.b.b:
    java.lang.String[] nI -> a
    java.lang.String nJ -> b
    java.lang.String mD -> c
    int iC -> d
    java.util.HashMap nK -> e
    int getStatusCode() -> a
    void a(com.google.android.gms.games.leaderboard.SubmitScoreResult$Result,int) -> a
    java.lang.String toString() -> toString
com.google.android.gms.games.leaderboard.SubmitScoreResult$Result -> com.google.android.gms.games.b.c:
    long rawScore -> a
    java.lang.String formattedScore -> b
    java.lang.String scoreTag -> c
    boolean newBest -> d
    java.lang.String toString() -> toString
com.google.android.gms.games.multiplayer.Invitation -> com.google.android.gms.games.multiplayer.Invitation:
    com.google.android.gms.games.Game getGame() -> b
    java.lang.String getInvitationId() -> c
    com.google.android.gms.games.multiplayer.Participant getInviter() -> d
    long getCreationTimestamp() -> e
    int ch() -> f
    int getVariant() -> g
com.google.android.gms.games.multiplayer.InvitationEntity -> com.google.android.gms.games.multiplayer.InvitationEntity:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int iM -> a
    com.google.android.gms.games.GameEntity nL -> b
    java.lang.String nM -> c
    long nN -> d
    int nO -> e
    com.google.android.gms.games.multiplayer.ParticipantEntity nP -> f
    java.util.ArrayList nQ -> g
    int nR -> h
    int getVersionCode() -> h
    com.google.android.gms.games.Game getGame() -> b
    java.lang.String getInvitationId() -> c
    com.google.android.gms.games.multiplayer.Participant getInviter() -> d
    long getCreationTimestamp() -> e
    java.util.ArrayList getParticipants() -> i
    int ch() -> f
    int getVariant() -> g
    com.google.android.gms.games.multiplayer.Invitation freeze() -> j
    int hashCode() -> hashCode
    int a(com.google.android.gms.games.multiplayer.Invitation) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.games.multiplayer.Invitation,java.lang.Object) -> a
    java.lang.String toString() -> toString
    java.lang.String b(com.google.android.gms.games.multiplayer.Invitation) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
    java.lang.Integer bQ() -> k
    boolean b(java.lang.Integer) -> a
    boolean J(java.lang.String) -> a
com.google.android.gms.games.multiplayer.InvitationEntity$a -> com.google.android.gms.games.multiplayer.a:
    com.google.android.gms.games.multiplayer.InvitationEntity v(android.os.Parcel) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.multiplayer.Participant -> com.google.android.gms.games.multiplayer.Participant:
    int getStatus() -> b
    java.lang.String ci() -> c
    int getCapabilities() -> d
    boolean isConnectedToRoom() -> e
    java.lang.String getDisplayName() -> f
    android.net.Uri getIconImageUri() -> g
    android.net.Uri getHiResImageUri() -> h
    java.lang.String getParticipantId() -> i
    com.google.android.gms.games.Player getPlayer() -> j
com.google.android.gms.games.multiplayer.ParticipantEntity -> com.google.android.gms.games.multiplayer.ParticipantEntity:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int iM -> a
    java.lang.String nd -> b
    java.lang.String ml -> c
    android.net.Uri mq -> d
    android.net.Uri mr -> e
    int nU -> f
    java.lang.String nV -> g
    boolean nW -> h
    com.google.android.gms.games.PlayerEntity nX -> i
    int nY -> j
    int getVersionCode() -> k
    int getStatus() -> b
    java.lang.String ci() -> c
    boolean isConnectedToRoom() -> e
    java.lang.String getDisplayName() -> f
    android.net.Uri getIconImageUri() -> g
    android.net.Uri getHiResImageUri() -> h
    java.lang.String getParticipantId() -> i
    com.google.android.gms.games.Player getPlayer() -> j
    int getCapabilities() -> d
    com.google.android.gms.games.multiplayer.Participant freeze() -> l
    int hashCode() -> hashCode
    int a(com.google.android.gms.games.multiplayer.Participant) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.games.multiplayer.Participant,java.lang.Object) -> a
    java.lang.String toString() -> toString
    java.lang.String b(com.google.android.gms.games.multiplayer.Participant) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
    java.lang.Integer bQ() -> m
    boolean b(java.lang.Integer) -> a
    boolean J(java.lang.String) -> a
com.google.android.gms.games.multiplayer.ParticipantEntity$a -> com.google.android.gms.games.multiplayer.c:
    com.google.android.gms.games.multiplayer.ParticipantEntity w(android.os.Parcel) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.multiplayer.Participatable -> com.google.android.gms.games.multiplayer.e:
    java.util.ArrayList getParticipants() -> i
com.google.android.gms.games.multiplayer.a -> com.google.android.gms.games.multiplayer.f:
    com.google.android.gms.games.multiplayer.InvitationEntity v(android.os.Parcel) -> a
    com.google.android.gms.games.multiplayer.InvitationEntity[] S(int) -> a
    void a(com.google.android.gms.games.multiplayer.InvitationEntity,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.multiplayer.b -> com.google.android.gms.games.multiplayer.b:
    com.google.android.gms.games.Game nS -> c
    com.google.android.gms.games.multiplayer.d nT -> d
    java.util.ArrayList nQ -> e
    com.google.android.gms.games.Game getGame() -> b
    java.lang.String getInvitationId() -> c
    com.google.android.gms.games.multiplayer.Participant getInviter() -> d
    long getCreationTimestamp() -> e
    java.util.ArrayList getParticipants() -> i
    int ch() -> f
    int getVariant() -> g
    com.google.android.gms.games.multiplayer.Invitation freeze() -> h
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.multiplayer.c -> com.google.android.gms.games.multiplayer.g:
    com.google.android.gms.games.multiplayer.ParticipantEntity w(android.os.Parcel) -> a
    com.google.android.gms.games.multiplayer.ParticipantEntity[] T(int) -> a
    void a(com.google.android.gms.games.multiplayer.ParticipantEntity,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.multiplayer.d -> com.google.android.gms.games.multiplayer.d:
    com.google.android.gms.games.d nZ -> c
    com.google.android.gms.games.multiplayer.Participant freeze() -> k
    int getStatus() -> b
    java.lang.String ci() -> c
    boolean isConnectedToRoom() -> e
    java.lang.String getDisplayName() -> f
    android.net.Uri getIconImageUri() -> g
    android.net.Uri getHiResImageUri() -> h
    java.lang.String getParticipantId() -> i
    com.google.android.gms.games.Player getPlayer() -> j
    int getCapabilities() -> d
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.multiplayer.realtime.RealTimeMessage -> com.google.android.gms.games.multiplayer.realtime.RealTimeMessage:
    java.lang.String oa -> a
    byte[] ob -> b
    int oc -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.games.multiplayer.realtime.RealTimeMessage$1 -> com.google.android.gms.games.multiplayer.realtime.a:
    com.google.android.gms.games.multiplayer.realtime.RealTimeMessage x(android.os.Parcel) -> a
    com.google.android.gms.games.multiplayer.realtime.RealTimeMessage[] U(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.multiplayer.realtime.Room -> com.google.android.gms.games.multiplayer.realtime.Room:
    java.lang.String getRoomId() -> b
    java.lang.String getCreatorId() -> c
    long getCreationTimestamp() -> d
    int getStatus() -> e
    java.lang.String getDescription() -> f
    int getVariant() -> g
    android.os.Bundle getAutoMatchCriteria() -> h
    int getAutoMatchWaitEstimateSeconds() -> j
com.google.android.gms.games.multiplayer.realtime.RoomConfig -> com.google.android.gms.games.multiplayer.realtime.b:
    android.os.Bundle createAutoMatchCriteria(int,int,long) -> a
com.google.android.gms.games.multiplayer.realtime.RoomEntity -> com.google.android.gms.games.multiplayer.realtime.RoomEntity:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int iM -> a
    java.lang.String nb -> b
    java.lang.String ol -> c
    long nN -> d
    int om -> e
    java.lang.String mo -> f
    int nR -> g
    android.os.Bundle oh -> h
    java.util.ArrayList nQ -> i
    int on -> j
    int getVersionCode() -> k
    java.lang.String getRoomId() -> b
    java.lang.String getCreatorId() -> c
    long getCreationTimestamp() -> d
    int getStatus() -> e
    java.lang.String getDescription() -> f
    int getVariant() -> g
    android.os.Bundle getAutoMatchCriteria() -> h
    java.util.ArrayList getParticipants() -> i
    int getAutoMatchWaitEstimateSeconds() -> j
    com.google.android.gms.games.multiplayer.realtime.Room freeze() -> l
    int hashCode() -> hashCode
    int a(com.google.android.gms.games.multiplayer.realtime.Room) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.games.multiplayer.realtime.Room,java.lang.Object) -> a
    java.lang.String toString() -> toString
    java.lang.String b(com.google.android.gms.games.multiplayer.realtime.Room) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
    java.lang.Integer bQ() -> m
    boolean b(java.lang.Integer) -> a
    boolean J(java.lang.String) -> a
com.google.android.gms.games.multiplayer.realtime.RoomEntity$a -> com.google.android.gms.games.multiplayer.realtime.d:
    com.google.android.gms.games.multiplayer.realtime.RoomEntity y(android.os.Parcel) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.multiplayer.realtime.b -> com.google.android.gms.games.multiplayer.realtime.e:
    com.google.android.gms.games.multiplayer.realtime.RoomEntity y(android.os.Parcel) -> a
    com.google.android.gms.games.multiplayer.realtime.RoomEntity[] V(int) -> a
    void a(com.google.android.gms.games.multiplayer.realtime.RoomEntity,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.multiplayer.realtime.c -> com.google.android.gms.games.multiplayer.realtime.c:
    int nu -> c
    java.lang.String getRoomId() -> b
    java.lang.String getCreatorId() -> c
    long getCreationTimestamp() -> d
    int getStatus() -> e
    java.lang.String getDescription() -> f
    int getVariant() -> g
    android.os.Bundle getAutoMatchCriteria() -> h
    java.util.ArrayList getParticipants() -> i
    int getAutoMatchWaitEstimateSeconds() -> j
    com.google.android.gms.games.multiplayer.realtime.Room freeze() -> k
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.internal.a -> com.google.android.gms.internal.a:
    java.lang.String a(byte[],boolean) -> a
    byte[] a(java.lang.String,boolean) -> a
com.google.android.gms.internal.aa -> com.google.android.gms.internal.b:
    com.google.android.gms.ads.AdSize c -> a
    java.lang.String dV -> b
    com.google.android.gms.ads.AdSize[] f(java.lang.String) -> a
    com.google.android.gms.ads.AdSize getAdSize() -> a
    java.lang.String getAdUnitId() -> b
com.google.android.gms.internal.ab -> com.google.android.gms.internal.c:
    void onAdClosed() -> a
    void onAdFailedToLoad(int) -> a
    void onAdLeftApplication() -> b
    void onAdLoaded() -> c
    void onAdOpened() -> d
com.google.android.gms.internal.ab$a -> com.google.android.gms.internal.d:
    com.google.android.gms.internal.ab e(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.ab$a$a -> com.google.android.gms.internal.e:
    android.os.IBinder dG -> a
    android.os.IBinder asBinder() -> asBinder
    void onAdClosed() -> a
    void onAdFailedToLoad(int) -> a
    void onAdLeftApplication() -> b
    void onAdLoaded() -> c
    void onAdOpened() -> d
com.google.android.gms.internal.ac -> com.google.android.gms.internal.f:
    com.google.android.gms.dynamic.b z() -> a
    void destroy() -> b
    boolean isReady() -> c
    boolean a(com.google.android.gms.internal.v) -> a
    void pause() -> d
    void resume() -> e
    void a(com.google.android.gms.internal.ab) -> a
    void a(com.google.android.gms.internal.ae) -> a
    void showInterstitial() -> f
    void stopLoading() -> g
com.google.android.gms.internal.ac$a -> com.google.android.gms.internal.g:
    com.google.android.gms.internal.ac f(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.ac$a$a -> com.google.android.gms.internal.h:
    android.os.IBinder dG -> a
    android.os.IBinder asBinder() -> asBinder
    com.google.android.gms.dynamic.b z() -> a
    void destroy() -> b
    boolean isReady() -> c
    boolean a(com.google.android.gms.internal.v) -> a
    void pause() -> d
    void resume() -> e
    void a(com.google.android.gms.internal.ab) -> a
    void a(com.google.android.gms.internal.ae) -> a
    void showInterstitial() -> f
    void stopLoading() -> g
com.google.android.gms.internal.ad -> com.google.android.gms.internal.i:
    android.os.IBinder a(com.google.android.gms.dynamic.b,com.google.android.gms.internal.x,java.lang.String,com.google.android.gms.internal.aw,int) -> a
com.google.android.gms.internal.ad$a -> com.google.android.gms.internal.j:
    com.google.android.gms.internal.ad g(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.ad$a$a -> com.google.android.gms.internal.k:
    android.os.IBinder dG -> a
    android.os.IBinder asBinder() -> asBinder
    android.os.IBinder a(com.google.android.gms.dynamic.b,com.google.android.gms.internal.x,java.lang.String,com.google.android.gms.internal.aw,int) -> a
com.google.android.gms.internal.ae -> com.google.android.gms.internal.l:
    void a(java.lang.String,java.lang.String) -> a
com.google.android.gms.internal.ae$a -> com.google.android.gms.internal.m:
    com.google.android.gms.internal.ae h(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.ae$a$a -> com.google.android.gms.internal.n:
    android.os.IBinder dG -> a
    android.os.IBinder asBinder() -> asBinder
    void a(java.lang.String,java.lang.String) -> a
com.google.android.gms.internal.af -> com.google.android.gms.internal.o:
    com.google.android.gms.internal.ag ey -> a
    void a(com.google.android.gms.internal.cq,java.util.Map) -> a
com.google.android.gms.internal.ag -> com.google.android.gms.internal.p:
    void a(java.lang.String,java.lang.String) -> a
com.google.android.gms.internal.ah -> com.google.android.gms.internal.q:
    com.google.android.gms.internal.ai ez -> a
    com.google.android.gms.internal.ai eA -> b
    com.google.android.gms.internal.ai eB -> c
    com.google.android.gms.internal.ai eC -> d
    com.google.android.gms.internal.ai eD -> e
    com.google.android.gms.internal.ai eE -> f
    com.google.android.gms.internal.ai eF -> g
    com.google.android.gms.internal.ai eG -> h
    com.google.android.gms.internal.ai eH -> i
com.google.android.gms.internal.ah$1 -> com.google.android.gms.internal.r:
    void a(com.google.android.gms.internal.cq,java.util.Map) -> a
com.google.android.gms.internal.ah$2 -> com.google.android.gms.internal.s:
    void a(com.google.android.gms.internal.cq,java.util.Map) -> a
com.google.android.gms.internal.ah$3 -> com.google.android.gms.internal.t:
    void a(com.google.android.gms.internal.cq,java.util.Map) -> a
com.google.android.gms.internal.ah$4 -> com.google.android.gms.internal.u:
    void a(com.google.android.gms.internal.cq,java.util.Map) -> a
com.google.android.gms.internal.ah$5 -> com.google.android.gms.internal.w:
    void a(com.google.android.gms.internal.cq,java.util.Map) -> a
com.google.android.gms.internal.ah$6 -> com.google.android.gms.internal.y:
    void a(com.google.android.gms.internal.cq,java.util.Map) -> a
com.google.android.gms.internal.ah$7 -> com.google.android.gms.internal.z:
    void a(com.google.android.gms.internal.cq,java.util.Map) -> a
com.google.android.gms.internal.ai -> com.google.android.gms.internal.aa:
    void a(com.google.android.gms.internal.cq,java.util.Map) -> a
com.google.android.gms.internal.aj -> com.google.android.gms.internal.ab:
    void a(com.google.android.gms.internal.cq,java.util.Map) -> a
    boolean a(java.util.Map) -> a
    int b(java.util.Map) -> b
com.google.android.gms.internal.ak -> com.google.android.gms.internal.ac:
    int a(android.util.DisplayMetrics,java.util.Map,java.lang.String,int) -> a
    void a(com.google.android.gms.internal.cq,java.util.Map) -> a
com.google.android.gms.internal.al -> com.google.android.gms.internal.ad:
    void init() -> a
    android.location.Location a(long) -> a
com.google.android.gms.internal.am -> com.google.android.gms.internal.ae:
    void init() -> a
    android.location.Location a(long) -> a
com.google.android.gms.internal.an -> com.google.android.gms.internal.af:
    com.google.android.gms.internal.bu eI -> a
    com.google.android.gms.internal.aw dZ -> b
    android.content.Context mContext -> c
    java.lang.Object eJ -> d
    com.google.android.gms.internal.ap eK -> e
    boolean eL -> f
    com.google.android.gms.internal.as eM -> g
    void cancel() -> a
    com.google.android.gms.internal.at a(long,long) -> a
com.google.android.gms.internal.an$1 -> com.google.android.gms.internal.ag:
    com.google.android.gms.internal.at eN -> a
    com.google.android.gms.internal.an eO -> b
    void run() -> run
com.google.android.gms.internal.ao -> com.google.android.gms.internal.ah:
    java.lang.String eP -> a
    java.util.List eQ -> b
    java.lang.String eR -> c
    java.lang.String eS -> d
    java.util.List eT -> e
com.google.android.gms.internal.ap -> com.google.android.gms.internal.ai:
    java.util.List eU -> a
    long eV -> b
    java.util.List eW -> c
    java.util.List eX -> d
    java.util.List eY -> e
    java.lang.String eZ -> f
    long fa -> g
com.google.android.gms.internal.aq -> com.google.android.gms.internal.aj:
    void D() -> h
    void E() -> i
    void F() -> j
    void G() -> k
    void H() -> l
com.google.android.gms.internal.ar -> com.google.android.gms.internal.ak:
    java.lang.Object eJ -> a
    com.google.android.gms.internal.at$a fb -> b
    com.google.android.gms.internal.aq fc -> c
    void a(com.google.android.gms.internal.at$a) -> a
    void y() -> a
    void onAdClosed() -> b
    void onAdFailedToLoad(int) -> a
    void onAdLeftApplication() -> c
    void onAdOpened() -> d
    void onAdLoaded() -> e
    void a(com.google.android.gms.internal.aq) -> a
com.google.android.gms.internal.as -> com.google.android.gms.internal.al:
    java.lang.String fd -> a
    com.google.android.gms.internal.aw dZ -> b
    long fe -> c
    com.google.android.gms.internal.ao ff -> d
    com.google.android.gms.internal.v em -> e
    com.google.android.gms.internal.x fg -> f
    android.content.Context mContext -> g
    java.lang.Object eJ -> h
    com.google.android.gms.internal.ax fh -> i
    int fi -> j
    void cancel() -> a
    void d(int) -> a
    com.google.android.gms.internal.at b(long,long) -> a
    com.google.android.gms.internal.ax P() -> b
    void a(com.google.android.gms.internal.ar) -> a
    void a(long,long,long,long) -> a
    void b(long,long,long,long) -> b
    java.lang.Object a(com.google.android.gms.internal.as) -> a
    int b(com.google.android.gms.internal.as) -> b
    com.google.android.gms.internal.ax a(com.google.android.gms.internal.as,com.google.android.gms.internal.ax) -> a
    com.google.android.gms.internal.ax c(com.google.android.gms.internal.as) -> c
    com.google.android.gms.internal.ax d(com.google.android.gms.internal.as) -> d
    void a(com.google.android.gms.internal.as,com.google.android.gms.internal.ar) -> a
com.google.android.gms.internal.as$1 -> com.google.android.gms.internal.am:
    com.google.android.gms.internal.ar fj -> a
    com.google.android.gms.internal.as fk -> b
    void run() -> run
com.google.android.gms.internal.at -> com.google.android.gms.internal.an:
    int fl -> a
    com.google.android.gms.internal.ao fm -> b
    com.google.android.gms.internal.ax fn -> c
    java.lang.String fo -> d
    com.google.android.gms.internal.ar fp -> e
com.google.android.gms.internal.at$a -> com.google.android.gms.internal.ao:
    void d(int) -> a
com.google.android.gms.internal.au -> com.google.android.gms.internal.ap:
    java.util.List a(org.json.JSONObject,java.lang.String) -> a
    void a(android.content.Context,java.lang.String,com.google.android.gms.internal.ce,java.lang.String,boolean,java.util.List) -> a
com.google.android.gms.internal.av -> com.google.android.gms.internal.aq:
    java.util.Map fq -> a
    com.google.android.gms.internal.ax g(java.lang.String) -> a
    void c(java.util.Map) -> a
    com.google.android.gms.internal.ax h(java.lang.String) -> b
com.google.android.gms.internal.aw -> com.google.android.gms.internal.ar:
    com.google.android.gms.internal.ax g(java.lang.String) -> a
com.google.android.gms.internal.aw$a -> com.google.android.gms.internal.as:
    com.google.android.gms.internal.aw i(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.aw$a$a -> com.google.android.gms.internal.at:
    android.os.IBinder dG -> a
    android.os.IBinder asBinder() -> asBinder
    com.google.android.gms.internal.ax g(java.lang.String) -> a
com.google.android.gms.internal.ax -> com.google.android.gms.internal.au:
    void a(com.google.android.gms.dynamic.b,com.google.android.gms.internal.x,com.google.android.gms.internal.v,java.lang.String,com.google.android.gms.internal.ay) -> a
    com.google.android.gms.dynamic.b getView() -> a
    void a(com.google.android.gms.dynamic.b,com.google.android.gms.internal.v,java.lang.String,com.google.android.gms.internal.ay) -> a
    void showInterstitial() -> b
    void destroy() -> c
com.google.android.gms.internal.ax$a -> com.google.android.gms.internal.av:
    com.google.android.gms.internal.ax j(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.ax$a$a -> com.google.android.gms.internal.aw:
    android.os.IBinder dG -> a
    android.os.IBinder asBinder() -> asBinder
    void a(com.google.android.gms.dynamic.b,com.google.android.gms.internal.x,com.google.android.gms.internal.v,java.lang.String,com.google.android.gms.internal.ay) -> a
    com.google.android.gms.dynamic.b getView() -> a
    void a(com.google.android.gms.dynamic.b,com.google.android.gms.internal.v,java.lang.String,com.google.android.gms.internal.ay) -> a
    void showInterstitial() -> b
    void destroy() -> c
com.google.android.gms.internal.ay -> com.google.android.gms.internal.ax:
    void y() -> a
    void onAdClosed() -> b
    void onAdFailedToLoad(int) -> a
    void onAdLeftApplication() -> c
    void onAdOpened() -> d
    void onAdLoaded() -> e
com.google.android.gms.internal.ay$a -> com.google.android.gms.internal.ay:
    com.google.android.gms.internal.ay k(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.ay$a$a -> com.google.android.gms.internal.az:
    android.os.IBinder dG -> a
    android.os.IBinder asBinder() -> asBinder
    void y() -> a
    void onAdClosed() -> b
    void onAdFailedToLoad(int) -> a
    void onAdLeftApplication() -> c
    void onAdOpened() -> d
    void onAdLoaded() -> e
com.google.android.gms.internal.az -> com.google.android.gms.internal.ba:
    com.google.ads.mediation.MediationAdapter fr -> a
    com.google.ads.mediation.NetworkExtras fs -> b
    com.google.android.gms.dynamic.b getView() -> a
    void a(com.google.android.gms.dynamic.b,com.google.android.gms.internal.x,com.google.android.gms.internal.v,java.lang.String,com.google.android.gms.internal.ay) -> a
    void a(com.google.android.gms.dynamic.b,com.google.android.gms.internal.v,java.lang.String,com.google.android.gms.internal.ay) -> a
    void showInterstitial() -> b
    void destroy() -> c
    com.google.ads.mediation.MediationServerParameters a(java.lang.String,int) -> a
com.google.android.gms.internal.b -> com.google.android.gms.internal.bb:
    int r -> a
    int s -> b
    int t -> c
    int u -> d
    int v -> e
    int w -> f
    int x -> g
    int y -> h
    int z -> i
    int A -> j
    int B -> k
    int C -> l
    int D -> m
    int E -> n
    int F -> o
    int G -> p
    int H -> q
    int I -> r
    int J -> s
    int K -> t
    int L -> u
    int M -> v
    int N -> w
    int O -> x
    int P -> y
    int Q -> z
    int R -> A
    int S -> B
    int T -> C
    int U -> D
    int V -> E
    int W -> F
    int X -> G
    int Y -> H
    int Z -> I
    int aa -> J
    int ab -> K
    int ac -> L
    int ad -> M
    int ae -> N
    int af -> O
    int ag -> P
    int ah -> Q
    int ai -> R
    int aj -> S
    int ak -> T
    int al -> U
    int am -> V
    int an -> W
    int ao -> X
    int ap -> Y
    int aq -> Z
    int ar -> aa
    int as -> ab
    int at -> ac
    int au -> ad
    int av -> ae
    int aw -> af
    int ax -> ag
    int ay -> ah
    int az -> ai
    int aA -> aj
    int aB -> ak
    int aC -> al
    int aD -> am
    int aE -> an
    int aF -> ao
    int aG -> ap
    int aH -> aq
    int aI -> ar
    int aJ -> as
    int aK -> at
    int aL -> au
    int aM -> av
    int aN -> aw
    int aO -> ax
    int aP -> ay
    int aQ -> az
    int aR -> aA
    int aS -> aB
    int aT -> aC
    int aU -> aD
    int aV -> aE
    int aW -> aF
    int aX -> aG
    int aY -> aH
    int aZ -> aI
    int ba -> aJ
    int bb -> aK
    int bc -> aL
    int bd -> aM
    int be -> aN
    int bf -> aO
    int bg -> aP
    int bh -> aQ
    int bi -> aR
    int bj -> aS
    int bk -> aT
    int bl -> aU
    int bm -> aV
    int bn -> aW
    int bo -> aX
    int bp -> aY
    int bq -> aZ
    int br -> ba
    int bs -> bb
    int bt -> bc
    int bu -> bd
    int bv -> be
    int bw -> bf
    int bx -> bg
    int by -> bh
    int bz -> bi
    int bA -> bj
    int bB -> bk
    int bC -> bl
    int bD -> bm
    int bE -> bn
    int bF -> bo
    int bG -> bp
    int bH -> bq
    int bI -> br
    int bJ -> bs
    int bK -> bt
    int bL -> bu
    int bM -> bv
    int bN -> bw
    int bO -> bx
    int bP -> by
    int bQ -> bz
    int bR -> bA
    int bS -> bB
    int bT -> bC
    int bU -> bD
    int bV -> bE
    int bW -> bF
    int bX -> bG
    int bY -> bH
    int bZ -> bI
    int ca -> bJ
    int cb -> bK
    int cc -> bL
    int cd -> bM
    int ce -> bN
    int cf -> bO
    int cg -> bP
    int ch -> bQ
    int ci -> bR
    int cj -> bS
    int ck -> bT
    int cl -> bU
    int cm -> bV
    int cn -> bW
    int co -> bX
    int cp -> bY
    int cq -> bZ
    int cr -> ca
    int cs -> cb
    int ct -> cc
    int cu -> cd
    int cv -> ce
    int cw -> cf
    int cx -> cg
    int cy -> ch
    int cz -> ci
    int cA -> cj
    int cB -> ck
    int cC -> cl
    int cD -> cm
    int cE -> cn
    int cF -> co
    int cG -> cp
    int cH -> cq
    int cI -> cr
    int cJ -> cs
    int cK -> ct
    int cL -> cu
    int cM -> cv
    int cN -> cw
    int cO -> cx
    int cP -> cy
    int cQ -> cz
    int cR -> cA
    int cS -> cB
    int cT -> cC
    int cU -> cD
    int cV -> cE
    int cW -> cF
    int cX -> cG
    int cY -> cH
    int cZ -> cI
    int da -> cJ
    int db -> cK
    int dc -> cL
    int dd -> cM
    com.google.android.gms.internal.b$a[] de -> cN
    void a(byte[],byte[]) -> a
com.google.android.gms.internal.b$1 -> com.google.android.gms.internal.bc:
com.google.android.gms.internal.b$a -> com.google.android.gms.internal.bd:
    void b(byte[],byte[]) -> a
com.google.android.gms.internal.b$b -> com.google.android.gms.internal.bf:
    com.google.android.gms.internal.b df -> a
    void b(byte[],byte[]) -> a
com.google.android.gms.internal.b$c -> com.google.android.gms.internal.bg:
    com.google.android.gms.internal.b df -> a
    void b(byte[],byte[]) -> a
com.google.android.gms.internal.b$d -> com.google.android.gms.internal.bi:
    com.google.android.gms.internal.b df -> a
    void b(byte[],byte[]) -> a
com.google.android.gms.internal.b$e -> com.google.android.gms.internal.bj:
    com.google.android.gms.internal.b df -> a
    void b(byte[],byte[]) -> a
com.google.android.gms.internal.b$f -> com.google.android.gms.internal.bk:
    com.google.android.gms.internal.b df -> a
    void b(byte[],byte[]) -> a
com.google.android.gms.internal.b$g -> com.google.android.gms.internal.bl:
    com.google.android.gms.internal.b df -> a
    void b(byte[],byte[]) -> a
com.google.android.gms.internal.b$h -> com.google.android.gms.internal.bm:
    com.google.android.gms.internal.b df -> a
    void b(byte[],byte[]) -> a
com.google.android.gms.internal.b$i -> com.google.android.gms.internal.bn:
    com.google.android.gms.internal.b df -> a
    void b(byte[],byte[]) -> a
com.google.android.gms.internal.b$j -> com.google.android.gms.internal.bo:
    com.google.android.gms.internal.b df -> a
    void b(byte[],byte[]) -> a
com.google.android.gms.internal.b$k -> com.google.android.gms.internal.bp:
    com.google.android.gms.internal.b df -> a
    void b(byte[],byte[]) -> a
com.google.android.gms.internal.b$l -> com.google.android.gms.internal.bq:
    com.google.android.gms.internal.b df -> a
    void b(byte[],byte[]) -> a
com.google.android.gms.internal.b$m -> com.google.android.gms.internal.br:
    com.google.android.gms.internal.b df -> a
    void b(byte[],byte[]) -> a
com.google.android.gms.internal.ba -> com.google.android.gms.internal.bs:
    com.google.android.gms.internal.ay ft -> a
    void onClick(com.google.ads.mediation.MediationBannerAdapter) -> onClick
    void onDismissScreen(com.google.ads.mediation.MediationBannerAdapter) -> onDismissScreen
    void onFailedToReceiveAd(com.google.ads.mediation.MediationBannerAdapter,com.google.ads.AdRequest$ErrorCode) -> onFailedToReceiveAd
    void onLeaveApplication(com.google.ads.mediation.MediationBannerAdapter) -> onLeaveApplication
    void onPresentScreen(com.google.ads.mediation.MediationBannerAdapter) -> onPresentScreen
    void onReceivedAd(com.google.ads.mediation.MediationBannerAdapter) -> onReceivedAd
    void onDismissScreen(com.google.ads.mediation.MediationInterstitialAdapter) -> onDismissScreen
    void onFailedToReceiveAd(com.google.ads.mediation.MediationInterstitialAdapter,com.google.ads.AdRequest$ErrorCode) -> onFailedToReceiveAd
    void onLeaveApplication(com.google.ads.mediation.MediationInterstitialAdapter) -> onLeaveApplication
    void onPresentScreen(com.google.ads.mediation.MediationInterstitialAdapter) -> onPresentScreen
    void onReceivedAd(com.google.ads.mediation.MediationInterstitialAdapter) -> onReceivedAd
    com.google.android.gms.internal.ay a(com.google.android.gms.internal.ba) -> a
com.google.android.gms.internal.ba$1 -> com.google.android.gms.internal.bt:
    com.google.android.gms.internal.ba fu -> a
    void run() -> run
com.google.android.gms.internal.ba$10 -> com.google.android.gms.internal.bv:
    com.google.ads.AdRequest$ErrorCode fv -> a
    com.google.android.gms.internal.ba fu -> b
    void run() -> run
com.google.android.gms.internal.ba$11 -> com.google.android.gms.internal.bx:
    com.google.android.gms.internal.ba fu -> a
    void run() -> run
com.google.android.gms.internal.ba$2 -> com.google.android.gms.internal.by:
    com.google.android.gms.internal.ba fu -> a
    void run() -> run
com.google.android.gms.internal.ba$3 -> com.google.android.gms.internal.bz:
    com.google.android.gms.internal.ba fu -> a
    void run() -> run
com.google.android.gms.internal.ba$4 -> com.google.android.gms.internal.ca:
    com.google.android.gms.internal.ba fu -> a
    void run() -> run
com.google.android.gms.internal.ba$5 -> com.google.android.gms.internal.cb:
    com.google.ads.AdRequest$ErrorCode fv -> a
    com.google.android.gms.internal.ba fu -> b
    void run() -> run
com.google.android.gms.internal.ba$6 -> com.google.android.gms.internal.cc:
    com.google.android.gms.internal.ba fu -> a
    void run() -> run
com.google.android.gms.internal.ba$7 -> com.google.android.gms.internal.cd:
    com.google.android.gms.internal.ba fu -> a
    void run() -> run
com.google.android.gms.internal.ba$8 -> com.google.android.gms.internal.ce:
    com.google.android.gms.internal.ba fu -> a
    void run() -> run
com.google.android.gms.internal.ba$9 -> com.google.android.gms.internal.cf:
    com.google.android.gms.internal.ba fu -> a
    void run() -> run
com.google.android.gms.internal.bb -> com.google.android.gms.internal.cg:
    com.google.ads.AdSize a(com.google.android.gms.internal.x) -> a
    int a(com.google.ads.AdRequest$Gender) -> a
    com.google.ads.AdRequest$Gender e(int) -> a
    int a(com.google.ads.AdRequest$ErrorCode) -> a
    com.google.ads.AdRequest$ErrorCode f(int) -> b
    com.google.ads.mediation.MediationAdRequest e(com.google.android.gms.internal.v) -> a
com.google.android.gms.internal.bb$1 -> com.google.android.gms.internal.ch:
    int[] fw -> a
    int[] fx -> b
com.google.android.gms.internal.bc -> com.google.android.gms.internal.ci:
    boolean a(android.content.Context,com.google.android.gms.internal.be,com.google.android.gms.internal.bl) -> a
com.google.android.gms.internal.bd -> com.google.android.gms.internal.cj:
    com.google.android.gms.internal.be c(android.os.Parcel) -> a
    com.google.android.gms.internal.be[] g(int) -> a
    void a(com.google.android.gms.internal.be,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.be -> com.google.android.gms.internal.be:
    com.google.android.gms.internal.bd CREATOR -> a
    int versionCode -> b
    java.lang.String fy -> c
    java.lang.String fz -> d
    java.lang.String mimeType -> e
    java.lang.String packageName -> f
    java.lang.String fA -> g
    java.lang.String fB -> h
    java.lang.String fC -> i
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.bf -> com.google.android.gms.internal.ck:
    android.app.Activity fD -> a
    com.google.android.gms.internal.bh fE -> b
    com.google.android.gms.internal.bj fF -> c
    com.google.android.gms.internal.cq fG -> d
    com.google.android.gms.internal.bf$b fH -> e
    com.google.android.gms.internal.bk fI -> f
    android.widget.FrameLayout fJ -> g
    android.webkit.WebChromeClient$CustomViewCallback fK -> h
    boolean fL -> i
    boolean fM -> j
    android.widget.RelativeLayout fN -> k
    void a(android.content.Context,com.google.android.gms.internal.bh) -> a
    android.widget.RelativeLayout$LayoutParams a(int,int,int,int) -> c
    void close() -> a
    com.google.android.gms.internal.bj Q() -> b
    void R() -> c
    void b(int,int,int,int) -> a
    void c(int,int,int,int) -> b
    void onCreate(android.os.Bundle) -> a
    void onRestart() -> d
    void onStart() -> e
    void onResume() -> f
    void onPause() -> g
    void onSaveInstanceState(android.os.Bundle) -> b
    void onStop() -> h
    void onDestroy() -> i
    void c(boolean) -> a
    void d(boolean) -> b
    void S() -> j
    void setRequestedOrientation(int) -> a
    void a(android.view.View,android.webkit.WebChromeClient$CustomViewCallback) -> a
    void e(boolean) -> c
    void T() -> k
com.google.android.gms.internal.bf$1 -> com.google.android.gms.internal.cl:
    com.google.android.gms.internal.bf fO -> a
    void a(com.google.android.gms.internal.cq) -> a
com.google.android.gms.internal.bf$a -> com.google.android.gms.internal.cm:
com.google.android.gms.internal.bf$b -> com.google.android.gms.internal.cn:
    int index -> a
    android.view.ViewGroup$LayoutParams fP -> b
    android.view.ViewGroup fQ -> c
com.google.android.gms.internal.bg -> com.google.android.gms.internal.cp:
    com.google.android.gms.internal.bh d(android.os.Parcel) -> a
    com.google.android.gms.internal.bh[] h(int) -> a
    void a(com.google.android.gms.internal.bh,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.bh -> com.google.android.gms.internal.bh:
    com.google.android.gms.internal.bg CREATOR -> a
    int versionCode -> b
    com.google.android.gms.internal.be fR -> c
    com.google.android.gms.internal.q fS -> d
    com.google.android.gms.internal.bi fT -> e
    com.google.android.gms.internal.cq fU -> f
    com.google.android.gms.internal.ag fV -> g
    java.lang.String fW -> h
    boolean fX -> i
    java.lang.String fY -> j
    com.google.android.gms.internal.bl fZ -> k
    int orientation -> l
    int ga -> m
    java.lang.String fz -> n
    com.google.android.gms.internal.co eg -> o
    void a(android.content.Intent,com.google.android.gms.internal.bh) -> a
    com.google.android.gms.internal.bh a(android.content.Intent) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    android.os.IBinder U() -> a
    android.os.IBinder V() -> b
    android.os.IBinder W() -> c
    android.os.IBinder X() -> d
    android.os.IBinder Y() -> e
com.google.android.gms.internal.bi -> com.google.android.gms.internal.cq:
    void B() -> m
    void C() -> n
com.google.android.gms.internal.bj -> com.google.android.gms.internal.cr:
    com.google.android.gms.internal.cq fG -> a
    android.widget.MediaController gb -> b
    com.google.android.gms.internal.bj$a gc -> c
    android.widget.VideoView gd -> d
    long ge -> e
    java.lang.String gf -> f
    void a(com.google.android.gms.internal.cq,java.lang.String,java.lang.String) -> a
    void a(com.google.android.gms.internal.cq,java.lang.String) -> a
    void a(com.google.android.gms.internal.cq,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(com.google.android.gms.internal.cq,java.lang.String,java.util.Map) -> a
    void destroy() -> a
    void Z() -> b
    void onCompletion(android.media.MediaPlayer) -> onCompletion
    boolean onError(android.media.MediaPlayer,int,int) -> onError
    void onPrepared(android.media.MediaPlayer) -> onPrepared
    void pause() -> c
    void play() -> d
    void seekTo(int) -> a
    void b(android.view.MotionEvent) -> a
    void f(boolean) -> a
    void i(java.lang.String) -> a
    void aa() -> e
com.google.android.gms.internal.bj$a -> com.google.android.gms.internal.cs:
    java.lang.Runnable el -> a
    boolean gg -> b
    void cancel() -> a
    void ab() -> b
    boolean a(com.google.android.gms.internal.bj$a) -> a
com.google.android.gms.internal.bj$a$1 -> com.google.android.gms.internal.ct:
    java.lang.ref.WeakReference gh -> c
    com.google.android.gms.internal.bj gi -> a
    com.google.android.gms.internal.bj$a gj -> b
    void run() -> run
com.google.android.gms.internal.bk -> com.google.android.gms.internal.cu:
    android.app.Activity fD -> a
    android.widget.ImageButton gk -> b
    void onClick(android.view.View) -> onClick
    void d(boolean) -> a
com.google.android.gms.internal.bl -> com.google.android.gms.internal.cv:
    void A() -> o
com.google.android.gms.internal.bm -> com.google.android.gms.internal.cw:
    com.google.android.gms.internal.bm gl -> a
    com.google.android.gms.internal.bn a(android.app.Activity) -> a
    boolean b(android.app.Activity) -> b
    com.google.android.gms.internal.bn c(android.app.Activity) -> c
    com.google.android.gms.internal.bo l(android.os.IBinder) -> b
    java.lang.Object d(android.os.IBinder) -> a
com.google.android.gms.internal.bm$a -> com.google.android.gms.internal.cx:
com.google.android.gms.internal.bn -> com.google.android.gms.internal.cy:
    void onCreate(android.os.Bundle) -> a
    void onRestart() -> d
    void onStart() -> e
    void onResume() -> f
    void onPause() -> g
    void onSaveInstanceState(android.os.Bundle) -> b
    void onStop() -> h
    void onDestroy() -> i
com.google.android.gms.internal.bn$a -> com.google.android.gms.internal.cz:
    com.google.android.gms.internal.bn m(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.bn$a$a -> com.google.android.gms.internal.da:
    android.os.IBinder dG -> a
    android.os.IBinder asBinder() -> asBinder
    void onCreate(android.os.Bundle) -> a
    void onRestart() -> d
    void onStart() -> e
    void onResume() -> f
    void onPause() -> g
    void onSaveInstanceState(android.os.Bundle) -> b
    void onStop() -> h
    void onDestroy() -> i
com.google.android.gms.internal.bo -> com.google.android.gms.internal.db:
    android.os.IBinder a(com.google.android.gms.dynamic.b) -> a
com.google.android.gms.internal.bo$a -> com.google.android.gms.internal.dc:
    com.google.android.gms.internal.bo n(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.bo$a$a -> com.google.android.gms.internal.de:
    android.os.IBinder dG -> a
    android.os.IBinder asBinder() -> asBinder
    android.os.IBinder a(com.google.android.gms.dynamic.b) -> a
com.google.android.gms.internal.bp -> com.google.android.gms.internal.df:
    com.google.android.gms.internal.cg a(android.content.Context,com.google.android.gms.internal.bu$a,com.google.android.gms.internal.h,com.google.android.gms.internal.cq,com.google.android.gms.internal.aw,com.google.android.gms.internal.bp$a) -> a
com.google.android.gms.internal.bp$a -> com.google.android.gms.internal.dg:
    void a(com.google.android.gms.internal.ce) -> a
com.google.android.gms.internal.bq -> com.google.android.gms.internal.dh:
    com.google.android.gms.internal.aw dZ -> a
    com.google.android.gms.internal.bp$a gm -> b
    com.google.android.gms.internal.cq fG -> c
    android.content.Context mContext -> d
    java.lang.Object eJ -> e
    com.google.android.gms.internal.bu$a gn -> f
    com.google.android.gms.internal.h go -> g
    com.google.android.gms.internal.cg gp -> h
    com.google.android.gms.internal.bw gq -> i
    boolean gr -> j
    com.google.android.gms.internal.an gs -> k
    com.google.android.gms.internal.ap eK -> l
    com.google.android.gms.internal.at gt -> m
    void a(com.google.android.gms.internal.bw) -> a
    void a(com.google.android.gms.internal.cq) -> a
    void ac() -> a
    void b(long) -> a
    void a(com.google.android.gms.internal.bu,long) -> a
    void onStop() -> b
    void ad() -> c
    void c(long) -> b
    void d(long) -> c
    boolean e(long) -> d
    java.lang.Object a(com.google.android.gms.internal.bq) -> a
    com.google.android.gms.internal.bp$a b(com.google.android.gms.internal.bq) -> b
    com.google.android.gms.internal.bw c(com.google.android.gms.internal.bq) -> c
    com.google.android.gms.internal.cq d(com.google.android.gms.internal.bq) -> d
com.google.android.gms.internal.bq$1 -> com.google.android.gms.internal.di:
    com.google.android.gms.internal.bq gu -> a
    void run() -> run
com.google.android.gms.internal.bq$2 -> com.google.android.gms.internal.dj:
    com.google.android.gms.internal.ce gv -> a
    com.google.android.gms.internal.bq gu -> b
    void run() -> run
com.google.android.gms.internal.bq$3 -> com.google.android.gms.internal.dk:
    com.google.android.gms.internal.bq gu -> a
    void run() -> run
com.google.android.gms.internal.bq$a -> com.google.android.gms.internal.dl:
    int gw -> a
    int getErrorCode() -> a
com.google.android.gms.internal.br -> com.google.android.gms.internal.dm:
    com.google.android.gms.internal.cg a(android.content.Context,com.google.android.gms.internal.bu,com.google.android.gms.internal.br$a) -> a
    com.google.android.gms.internal.cg b(android.content.Context,com.google.android.gms.internal.bu,com.google.android.gms.internal.br$a) -> b
    com.google.android.gms.internal.cg c(android.content.Context,com.google.android.gms.internal.bu,com.google.android.gms.internal.br$a) -> c
com.google.android.gms.internal.br$a -> com.google.android.gms.internal.dn:
    void a(com.google.android.gms.internal.bw) -> a
com.google.android.gms.internal.bs -> com.google.android.gms.internal.do:
    com.google.android.gms.internal.bu eI -> a
    com.google.android.gms.internal.br$a gx -> b
    void ae() -> c
    com.google.android.gms.internal.by af() -> d
    void ac() -> a
    void onStop() -> b
    com.google.android.gms.internal.bw a(com.google.android.gms.internal.by,com.google.android.gms.internal.bu) -> a
com.google.android.gms.internal.bs$a -> com.google.android.gms.internal.dp:
    android.content.Context mContext -> a
    com.google.android.gms.internal.by af() -> d
    void ae() -> c
com.google.android.gms.internal.bs$b -> com.google.android.gms.internal.dq:
    com.google.android.gms.internal.br$a gx -> a
    com.google.android.gms.internal.bt gy -> b
    java.lang.Object eJ -> c
    com.google.android.gms.internal.by af() -> d
    void ae() -> c
    void onConnectionFailed(com.google.android.gms.common.ConnectionResult) -> a
    void onConnected(android.os.Bundle) -> a
    void onDisconnected() -> m
com.google.android.gms.internal.bt -> com.google.android.gms.internal.ds:
    int gz -> f
    java.lang.String ag() -> a
    java.lang.String ah() -> b
    com.google.android.gms.internal.by o(android.os.IBinder) -> a
    void a(com.google.android.gms.internal.dj,com.google.android.gms.internal.de$d) -> a
    com.google.android.gms.internal.by ai() -> c
    android.os.IInterface p(android.os.IBinder) -> b
com.google.android.gms.internal.bu -> com.google.android.gms.internal.bu:
    com.google.android.gms.internal.bv CREATOR -> a
    int versionCode -> b
    android.os.Bundle gA -> c
    com.google.android.gms.internal.v gB -> d
    com.google.android.gms.internal.x ed -> e
    java.lang.String adUnitId -> f
    android.content.pm.ApplicationInfo applicationInfo -> g
    android.content.pm.PackageInfo gC -> h
    java.lang.String gD -> i
    java.lang.String gE -> j
    java.lang.String gF -> k
    com.google.android.gms.internal.co eg -> l
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.bu$a -> com.google.android.gms.internal.du:
    android.os.Bundle gA -> a
    com.google.android.gms.internal.v gB -> b
    com.google.android.gms.internal.x ed -> c
    java.lang.String adUnitId -> d
    android.content.pm.ApplicationInfo applicationInfo -> e
    android.content.pm.PackageInfo gC -> f
    java.lang.String gE -> g
    java.lang.String gF -> h
    com.google.android.gms.internal.co eg -> i
com.google.android.gms.internal.bv -> com.google.android.gms.internal.dv:
    com.google.android.gms.internal.bu e(android.os.Parcel) -> a
    com.google.android.gms.internal.bu[] i(int) -> a
    void a(com.google.android.gms.internal.bu,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.bw -> com.google.android.gms.internal.bw:
    com.google.android.gms.internal.bx CREATOR -> a
    int versionCode -> b
    java.lang.String fW -> c
    java.lang.String gG -> d
    java.util.List eW -> e
    int errorCode -> f
    java.util.List eX -> g
    long gH -> h
    boolean gI -> i
    long gJ -> j
    java.util.List gK -> k
    long fa -> l
    int orientation -> m
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.bx -> com.google.android.gms.internal.dx:
    com.google.android.gms.internal.bw f(android.os.Parcel) -> a
    com.google.android.gms.internal.bw[] j(int) -> a
    void a(com.google.android.gms.internal.bw,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.by -> com.google.android.gms.internal.dy:
    com.google.android.gms.internal.bw a(com.google.android.gms.internal.bu) -> a
com.google.android.gms.internal.by$a -> com.google.android.gms.internal.ea:
    com.google.android.gms.internal.by q(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.by$a$a -> com.google.android.gms.internal.eb:
    android.os.IBinder dG -> a
    android.os.IBinder asBinder() -> asBinder
    com.google.android.gms.internal.bw a(com.google.android.gms.internal.bu) -> a
com.google.android.gms.internal.bz -> com.google.android.gms.internal.ed:
    java.lang.Object gL -> a
    com.google.android.gms.internal.bz gM -> b
    android.content.Context mContext -> c
    com.google.android.gms.internal.al gN -> d
    com.google.android.gms.internal.bz a(android.content.Context,com.google.android.gms.internal.al) -> a
    com.google.android.gms.internal.bw a(android.content.Context,com.google.android.gms.internal.al,com.google.android.gms.internal.bu) -> a
    void a(java.lang.String,java.util.Map,java.lang.String,int) -> a
    com.google.android.gms.internal.bw a(android.content.Context,java.lang.String,java.lang.String) -> a
    com.google.android.gms.internal.bw a(com.google.android.gms.internal.bu) -> a
com.google.android.gms.internal.bz$1 -> com.google.android.gms.internal.ee:
    android.content.Context gO -> a
    com.google.android.gms.internal.bu gP -> b
    com.google.android.gms.internal.cb gQ -> c
    java.lang.String gR -> d
    void run() -> run
com.google.android.gms.internal.c -> com.google.android.gms.internal.ef:
com.google.android.gms.internal.ca -> com.google.android.gms.internal.eg:
    java.text.SimpleDateFormat gS -> a
    java.lang.String a(com.google.android.gms.internal.bu,com.google.android.gms.internal.cd,android.location.Location) -> a
    void a(java.util.HashMap,com.google.android.gms.internal.v) -> a
    void a(java.util.HashMap,com.google.android.gms.internal.cd) -> a
    void a(java.util.HashMap,android.location.Location) -> a
    java.lang.Integer g(boolean) -> a
com.google.android.gms.internal.cb -> com.google.android.gms.internal.eh:
    java.lang.Object eJ -> c
    com.google.android.gms.internal.cq fG -> d
    int gw -> e
    java.lang.String gT -> f
    com.google.android.gms.internal.ai gU -> a
    com.google.android.gms.internal.ai gV -> b
    int getErrorCode() -> a
    void b(com.google.android.gms.internal.cq) -> a
    java.lang.String aj() -> b
    java.lang.Object a(com.google.android.gms.internal.cb) -> a
    int a(com.google.android.gms.internal.cb,int) -> a
    java.lang.String a(com.google.android.gms.internal.cb,java.lang.String) -> a
com.google.android.gms.internal.cb$1 -> com.google.android.gms.internal.ei:
    com.google.android.gms.internal.cb gW -> a
    void a(com.google.android.gms.internal.cq,java.util.Map) -> a
com.google.android.gms.internal.cb$2 -> com.google.android.gms.internal.ej:
    com.google.android.gms.internal.cb gW -> a
    void a(com.google.android.gms.internal.cq,java.util.Map) -> a
com.google.android.gms.internal.cc -> com.google.android.gms.internal.ek:
    java.lang.String gX -> a
    java.lang.String gY -> b
    java.util.List gZ -> c
    java.util.List ha -> d
    long hb -> e
    boolean hc -> f
    long hd -> g
    java.util.List he -> h
    long hf -> i
    int hg -> j
    long a(java.util.Map,java.lang.String) -> a
    java.util.List b(java.util.Map,java.lang.String) -> b
    com.google.android.gms.internal.bw ak() -> a
    void a(java.lang.String,java.util.Map,java.lang.String) -> a
    void d(java.util.Map) -> a
    void e(java.util.Map) -> b
    void f(java.util.Map) -> c
    void g(java.util.Map) -> d
    void h(java.util.Map) -> e
    void i(java.util.Map) -> f
    void j(java.util.Map) -> g
    void k(java.util.Map) -> h
com.google.android.gms.internal.cd -> com.google.android.gms.internal.el:
    int hh -> a
    boolean hi -> b
    boolean hj -> c
    java.lang.String hk -> d
    java.lang.String hl -> e
    boolean hm -> f
    boolean hn -> g
    boolean ho -> h
    java.lang.String hp -> i
    java.lang.String hq -> j
    int hr -> k
    int hs -> l
    int ht -> m
    int hu -> n
    int hv -> o
    int hw -> p
    float hx -> q
    int hy -> r
    int hz -> s
    java.lang.String a(android.content.pm.PackageManager) -> a
    int a(android.content.Context,android.net.ConnectivityManager,android.content.pm.PackageManager) -> a
    android.content.pm.ResolveInfo a(android.content.pm.PackageManager,java.lang.String) -> a
com.google.android.gms.internal.ce -> com.google.android.gms.internal.em:
    com.google.android.gms.internal.v gB -> a
    com.google.android.gms.internal.cq fU -> b
    java.util.List eW -> c
    int errorCode -> d
    java.util.List eX -> e
    java.util.List gK -> f
    int orientation -> g
    long fa -> h
    java.lang.String gE -> i
    boolean gI -> j
    com.google.android.gms.internal.ao fm -> k
    com.google.android.gms.internal.ax fn -> l
    java.lang.String fo -> m
    com.google.android.gms.internal.ap hA -> n
    com.google.android.gms.internal.ar fp -> o
    long gJ -> p
    long gH -> q
com.google.android.gms.internal.cf -> com.google.android.gms.internal.eo:
    java.lang.String hB -> a
    java.lang.Object gL -> b
    java.math.BigInteger hC -> c
    java.lang.String al() -> a
com.google.android.gms.internal.cg -> com.google.android.gms.internal.ep:
    java.lang.Runnable el -> a
    java.lang.Thread hD -> b
    void start() -> e
    void cancel() -> f
    void onStop() -> b
    void ac() -> a
    java.lang.Thread a(com.google.android.gms.internal.cg,java.lang.Thread) -> a
com.google.android.gms.internal.cg$1 -> com.google.android.gms.internal.eq:
    com.google.android.gms.internal.cg hE -> a
    void run() -> run
com.google.android.gms.internal.ch -> com.google.android.gms.internal.er:
    java.util.concurrent.ThreadFactory hF -> a
    java.util.concurrent.ThreadPoolExecutor hG -> b
    void execute(java.lang.Runnable) -> a
com.google.android.gms.internal.ch$1 -> com.google.android.gms.internal.es:
    java.lang.Runnable hH -> a
    void run() -> run
com.google.android.gms.internal.ch$2 -> com.google.android.gms.internal.et:
    java.util.concurrent.atomic.AtomicInteger hI -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.google.android.gms.internal.ci -> com.google.android.gms.internal.eu:
    java.lang.Object gL -> a
    boolean hJ -> b
    java.lang.String hK -> c
    boolean hL -> d
    void a(android.content.Context,java.lang.String,boolean,java.net.HttpURLConnection) -> a
    boolean h(android.content.Context) -> a
    boolean a(android.content.pm.PackageManager,java.lang.String,java.lang.String) -> a
    boolean am() -> a
    int an() -> b
    int ao() -> c
    void a(android.content.Context,java.lang.String,java.util.List) -> a
    java.lang.String a(java.lang.Readable) -> a
    void i(android.content.Context) -> b
    void a(android.content.Context,java.lang.String,android.webkit.WebSettings) -> a
    java.lang.String b(android.content.Context,java.lang.String) -> a
    java.lang.String j(android.content.Context) -> d
    java.lang.String j(java.lang.String) -> a
    org.json.JSONObject l(java.util.Map) -> a
    org.json.JSONObject a(android.os.Bundle) -> a
    org.json.JSONArray a(java.util.Collection) -> a
    org.json.JSONArray a(java.lang.Object[]) -> a
    void a(org.json.JSONArray,java.lang.Object) -> a
    void a(org.json.JSONObject,java.lang.String,java.lang.Object) -> a
    void a(android.webkit.WebView) -> a
    void b(android.webkit.WebView) -> b
    boolean h(boolean) -> a
    java.lang.Object ap() -> d
    java.lang.String k(java.lang.String) -> b
    java.lang.String k(android.content.Context) -> c
com.google.android.gms.internal.ci$1 -> com.google.android.gms.internal.ev:
    android.content.Context gO -> a
    void run() -> run
com.google.android.gms.internal.ci$a -> com.google.android.gms.internal.ew:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.google.android.gms.internal.cj -> com.google.android.gms.internal.ex:
    void a(android.content.Context,android.webkit.WebSettings) -> a
    void c(android.view.View) -> a
    void d(android.view.View) -> b
    void a(android.view.Window) -> a
    void a(android.webkit.WebView) -> a
    void b(android.webkit.WebView) -> b
com.google.android.gms.internal.ck -> com.google.android.gms.internal.ey:
    void a(android.content.Context,android.webkit.WebSettings) -> a
    java.lang.String getDefaultUserAgent(android.content.Context) -> a
com.google.android.gms.internal.cl -> com.google.android.gms.internal.ez:
    java.lang.String hM -> a
    android.content.Context mContext -> b
    java.lang.String hN -> c
    void onStop() -> b
    void ac() -> a
com.google.android.gms.internal.cm -> com.google.android.gms.internal.fb:
    android.os.Handler hO -> a
    int a(android.content.Context,int) -> a
    int a(android.util.DisplayMetrics,int) -> a
    void a(android.view.ViewGroup,com.google.android.gms.internal.x,java.lang.String) -> a
    void b(android.view.ViewGroup,com.google.android.gms.internal.x,java.lang.String) -> b
    void a(android.view.ViewGroup,com.google.android.gms.internal.x,java.lang.String,int,int) -> a
    java.lang.String l(android.content.Context) -> a
    boolean aq() -> a
    boolean ar() -> b
    java.lang.String l(java.lang.String) -> a
com.google.android.gms.internal.cn -> com.google.android.gms.internal.fc:
    void m(java.lang.String) -> a
    void a(java.lang.String,java.lang.Throwable) -> a
    void n(java.lang.String) -> b
    void o(java.lang.String) -> c
    void p(java.lang.String) -> d
    void q(java.lang.String) -> e
    void b(java.lang.String,java.lang.Throwable) -> b
    boolean k(int) -> a
com.google.android.gms.internal.co -> com.google.android.gms.internal.co:
    com.google.android.gms.internal.cp CREATOR -> a
    int versionCode -> b
    java.lang.String hP -> c
    int hQ -> d
    int hR -> e
    boolean hS -> f
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.cp -> com.google.android.gms.internal.fd:
    com.google.android.gms.internal.co g(android.os.Parcel) -> a
    com.google.android.gms.internal.co[] l(int) -> a
    void a(com.google.android.gms.internal.co,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.cq -> com.google.android.gms.internal.fe:
    com.google.android.gms.internal.cr hT -> a
    android.content.MutableContextWrapper hU -> b
    java.lang.Object eJ -> c
    com.google.android.gms.internal.h go -> d
    com.google.android.gms.internal.co hV -> e
    com.google.android.gms.internal.bf hW -> f
    com.google.android.gms.internal.x fg -> g
    boolean hX -> h
    boolean hY -> i
    com.google.android.gms.internal.cq a(android.content.Context,com.google.android.gms.internal.x,boolean,boolean,com.google.android.gms.internal.h,com.google.android.gms.internal.co) -> a
    void a(java.lang.String,java.util.Map) -> a
    void as() -> a
    void at() -> b
    com.google.android.gms.internal.bf au() -> c
    com.google.android.gms.internal.x av() -> d
    com.google.android.gms.internal.cr aw() -> e
    com.google.android.gms.internal.h ax() -> f
    com.google.android.gms.internal.co ay() -> g
    boolean az() -> h
    void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> onDownloadStart
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onMeasure(int,int) -> onMeasure
    void a(android.content.Context,com.google.android.gms.internal.x) -> a
    void a(com.google.android.gms.internal.bf) -> a
    void i(boolean) -> a
    void setContext(android.content.Context) -> setContext
    void aA() -> i
    void aB() -> j
    void aC() -> k
com.google.android.gms.internal.cr -> com.google.android.gms.internal.ff:
    com.google.android.gms.internal.cq fG -> a
    java.util.HashMap hZ -> b
    java.lang.Object eJ -> c
    com.google.android.gms.internal.q ia -> d
    com.google.android.gms.internal.bi ib -> e
    com.google.android.gms.internal.cr$a ic -> f
    com.google.android.gms.internal.ag ey -> g
    boolean id -> h
    boolean ie -> i
    com.google.android.gms.internal.bl if -> j
    boolean b(android.net.Uri) -> a
    void a(com.google.android.gms.internal.q,com.google.android.gms.internal.bi,com.google.android.gms.internal.ag,com.google.android.gms.internal.bl,boolean) -> a
    boolean aD() -> a
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void a(com.google.android.gms.internal.be) -> a
    void a(boolean,int) -> a
    void a(boolean,int,java.lang.String) -> a
    void a(boolean,int,java.lang.String,java.lang.String) -> a
    void a(com.google.android.gms.internal.bh) -> a
    void a(java.lang.String,com.google.android.gms.internal.ai) -> a
    void reset() -> b
    void a(com.google.android.gms.internal.cr$a) -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void j(boolean) -> a
    void S() -> c
    void c(android.net.Uri) -> b
com.google.android.gms.internal.cr$1 -> com.google.android.gms.internal.fg:
    com.google.android.gms.internal.bf ig -> a
    com.google.android.gms.internal.cr ih -> b
    void run() -> run
com.google.android.gms.internal.cr$a -> com.google.android.gms.internal.fh:
    void a(com.google.android.gms.internal.cq) -> a
com.google.android.gms.internal.cs -> com.google.android.gms.internal.fi:
    com.google.android.gms.internal.cq fG -> a
    boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsResult,android.webkit.JsPromptResult,boolean) -> a
    void a(android.app.AlertDialog$Builder,java.lang.String,android.webkit.JsResult) -> a
    void a(android.content.Context,android.app.AlertDialog$Builder,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> a
    void onCloseWindow(android.webkit.WebView) -> onCloseWindow
    boolean onConsoleMessage(android.webkit.ConsoleMessage) -> onConsoleMessage
    void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater) -> onExceededDatabaseQuota
    void onHideCustomView() -> onHideCustomView
    boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
    boolean onJsBeforeUnload(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsBeforeUnload
    boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
    boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
    void onReachedMaxAppCacheSize(long,long,android.webkit.WebStorage$QuotaUpdater) -> onReachedMaxAppCacheSize
    void onShowCustomView(android.view.View,android.webkit.WebChromeClient$CustomViewCallback) -> onShowCustomView
    void a(android.view.View,int,android.webkit.WebChromeClient$CustomViewCallback) -> a
com.google.android.gms.internal.cs$1 -> com.google.android.gms.internal.fj:
    android.webkit.JsResult ii -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.google.android.gms.internal.cs$2 -> com.google.android.gms.internal.fk:
    android.webkit.JsResult ii -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.android.gms.internal.cs$3 -> com.google.android.gms.internal.fl:
    android.webkit.JsResult ii -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.android.gms.internal.cs$4 -> com.google.android.gms.internal.fm:
    android.webkit.JsPromptResult ij -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.google.android.gms.internal.cs$5 -> com.google.android.gms.internal.fo:
    android.webkit.JsPromptResult ij -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.android.gms.internal.cs$6 -> com.google.android.gms.internal.fp:
    android.webkit.JsPromptResult ij -> a
    android.widget.EditText ik -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.android.gms.internal.cs$7 -> com.google.android.gms.internal.fr:
    int[] il -> a
com.google.android.gms.internal.ct -> com.google.android.gms.internal.ft:
    android.webkit.WebResourceResponse b(android.content.Context,java.lang.String,java.lang.String) -> a
    android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,java.lang.String) -> shouldInterceptRequest
com.google.android.gms.internal.cu -> com.google.android.gms.internal.fu:
    void onShowCustomView(android.view.View,int,android.webkit.WebChromeClient$CustomViewCallback) -> onShowCustomView
com.google.android.gms.internal.cw -> com.google.android.gms.internal.fw:
    java.lang.String it -> f
    void a(java.lang.String[]) -> a
    java.lang.String ag() -> a
    java.lang.String ah() -> b
    com.google.android.gms.internal.cy r(android.os.IBinder) -> a
    void a(com.google.android.gms.internal.dj,com.google.android.gms.internal.de$d) -> a
    android.os.IInterface p(android.os.IBinder) -> b
com.google.android.gms.internal.cx -> com.google.android.gms.internal.fx:
    void a(int,com.google.android.gms.common.data.d) -> a
    void a(com.google.android.gms.common.data.d) -> a
    void onStateDeleted(int,int) -> a
    void onSignOutComplete() -> a
    void m(int) -> a
com.google.android.gms.internal.cx$a -> com.google.android.gms.internal.fy:
    com.google.android.gms.internal.cx s(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.cx$a$a -> com.google.android.gms.internal.fz:
    android.os.IBinder dG -> a
    android.os.IBinder asBinder() -> asBinder
    void a(int,com.google.android.gms.common.data.d) -> a
    void a(com.google.android.gms.common.data.d) -> a
    void onStateDeleted(int,int) -> a
    void onSignOutComplete() -> a
    void m(int) -> a
com.google.android.gms.internal.cy -> com.google.android.gms.internal.ga:
    int getMaxStateSize() -> a
    int getMaxNumKeys() -> b
    void a(com.google.android.gms.internal.cx,int,byte[]) -> a
    void a(com.google.android.gms.internal.cx,int) -> a
    void a(com.google.android.gms.internal.cx) -> a
    void a(com.google.android.gms.internal.cx,int,java.lang.String,byte[]) -> a
    void b(com.google.android.gms.internal.cx,int) -> b
    void b(com.google.android.gms.internal.cx) -> b
    void c(com.google.android.gms.internal.cx) -> c
com.google.android.gms.internal.cy$a -> com.google.android.gms.internal.gb:
    com.google.android.gms.internal.cy t(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.cy$a$a -> com.google.android.gms.internal.gc:
    android.os.IBinder dG -> a
    android.os.IBinder asBinder() -> asBinder
    int getMaxStateSize() -> a
    int getMaxNumKeys() -> b
    void a(com.google.android.gms.internal.cx,int,byte[]) -> a
    void a(com.google.android.gms.internal.cx,int) -> a
    void a(com.google.android.gms.internal.cx) -> a
    void a(com.google.android.gms.internal.cx,int,java.lang.String,byte[]) -> a
    void b(com.google.android.gms.internal.cx,int) -> b
    void b(com.google.android.gms.internal.cx) -> b
    void c(com.google.android.gms.internal.cx) -> c
com.google.android.gms.internal.cz -> com.google.android.gms.internal.gd:
    int kd -> a
    long ke -> b
    int kf -> c
    int kg -> d
    int kh -> e
    int ki -> f
    int kj -> g
    boolean kb -> h
    boolean kk -> i
    com.google.android.gms.internal.cz$b kl -> j
    android.graphics.drawable.Drawable km -> k
    android.graphics.drawable.Drawable kn -> l
    boolean ko -> m
    boolean kp -> n
    boolean kq -> o
    int kr -> p
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    int getChangingConfigurations() -> getChangingConfigurations
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    int getOpacity() -> getOpacity
    boolean canConstantState() -> a
    android.graphics.drawable.Drawable mutate() -> mutate
    android.graphics.drawable.Drawable aS() -> b
    void startTransition(int) -> a
    void draw(android.graphics.Canvas) -> draw
com.google.android.gms.internal.cz$1 -> com.google.android.gms.internal.ge:
com.google.android.gms.internal.cz$a -> com.google.android.gms.internal.gf:
    com.google.android.gms.internal.cz$a ks -> a
    com.google.android.gms.internal.cz$a$a kt -> b
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getOpacity() -> getOpacity
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    com.google.android.gms.internal.cz$a aT() -> a
com.google.android.gms.internal.cz$a$a -> com.google.android.gms.internal.gg:
    android.graphics.drawable.Drawable newDrawable() -> newDrawable
    int getChangingConfigurations() -> getChangingConfigurations
com.google.android.gms.internal.cz$b -> com.google.android.gms.internal.gh:
    int ku -> a
    int kv -> b
    android.graphics.drawable.Drawable newDrawable() -> newDrawable
    int getChangingConfigurations() -> getChangingConfigurations
com.google.android.gms.internal.d -> com.google.android.gms.internal.gi:
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    void a(android.view.MotionEvent) -> a
    void a(int,int,int) -> a
com.google.android.gms.internal.da -> com.google.android.gms.internal.gj:
    android.net.Uri kw -> a
    int kx -> b
    void d(android.net.Uri) -> a
    int aU() -> a
    void w(int) -> a
com.google.android.gms.internal.db -> com.google.android.gms.internal.gk:
    void c(java.lang.Object) -> a
    void k(boolean) -> a
    void a(boolean,java.lang.Object) -> a
    void w(java.lang.String) -> a
    void x(java.lang.String) -> b
com.google.android.gms.internal.dc -> com.google.android.gms.internal.gl:
    android.app.Activity fD -> a
    android.content.Intent mIntent -> b
    int ky -> c
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.android.gms.internal.dd -> com.google.android.gms.internal.dd:
    java.lang.Object kz -> a
    java.lang.ClassLoader kA -> b
    java.lang.Integer kB -> c
    boolean kC -> d
    java.lang.ClassLoader aV() -> t
    java.lang.Integer aW() -> u
    boolean aX() -> v
    boolean y(java.lang.String) -> b
    boolean a(java.lang.Class) -> a
com.google.android.gms.internal.de -> com.google.android.gms.internal.gm:
    android.content.Context mContext -> f
    android.os.Handler mHandler -> a
    android.os.IInterface kD -> g
    java.util.ArrayList kE -> h
    java.util.ArrayList kF -> b
    boolean kG -> i
    java.util.ArrayList kH -> j
    boolean kI -> k
    java.util.ArrayList kJ -> l
    com.google.android.gms.internal.de$e kK -> m
    java.lang.String[] is -> n
    boolean kL -> c
    boolean kM -> d
    java.lang.Object kN -> o
    java.lang.String[] kO -> e
    void a(java.lang.String[]) -> a
    java.lang.String ag() -> a
    java.lang.String ah() -> b
    android.os.IInterface p(android.os.IBinder) -> b
    void connect() -> d
    boolean isConnected() -> e
    boolean isConnecting() -> f
    void disconnect() -> g
    android.content.Context getContext() -> h
    java.lang.String[] aY() -> i
    void u(android.os.IBinder) -> c
    void a(com.google.android.gms.internal.dj,com.google.android.gms.internal.de$d) -> a
    void aZ() -> j
    android.os.Bundle ba() -> k
    void a(int,android.os.IBinder,android.os.Bundle) -> a
    void bb() -> l
    void a(com.google.android.gms.common.ConnectionResult) -> a
    void bc() -> m
    android.os.IInterface bd() -> n
    void a(com.google.android.gms.internal.de$b) -> a
    android.os.IInterface a(com.google.android.gms.internal.de,android.os.IInterface) -> a
    java.lang.Object a(com.google.android.gms.internal.de) -> a
    java.util.ArrayList b(com.google.android.gms.internal.de) -> b
    java.util.ArrayList c(com.google.android.gms.internal.de) -> c
    android.os.IInterface d(com.google.android.gms.internal.de) -> d
    com.google.android.gms.internal.de$e e(com.google.android.gms.internal.de) -> e
    android.content.Context f(com.google.android.gms.internal.de) -> f
    com.google.android.gms.internal.de$e a(com.google.android.gms.internal.de,com.google.android.gms.internal.de$e) -> a
com.google.android.gms.internal.de$a -> com.google.android.gms.internal.gn:
    com.google.android.gms.internal.de kP -> a
    void handleMessage(android.os.Message) -> handleMessage
com.google.android.gms.internal.de$b -> com.google.android.gms.internal.go:
    java.lang.Object mListener -> b
    boolean kQ -> c
    com.google.android.gms.internal.de kP -> a
    void a(java.lang.Object) -> a
    void aF() -> a
    void be() -> b
    void unregister() -> c
    void bf() -> d
com.google.android.gms.internal.de$d -> com.google.android.gms.internal.gp:
    com.google.android.gms.internal.de kR -> a
    void b(int,android.os.IBinder,android.os.Bundle) -> a
com.google.android.gms.internal.de$e -> com.google.android.gms.internal.gq:
    com.google.android.gms.internal.de kP -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.google.android.gms.internal.de$f -> com.google.android.gms.internal.gr:
    int statusCode -> b
    android.os.Bundle kS -> c
    android.os.IBinder kT -> d
    com.google.android.gms.internal.de kP -> e
    void a(java.lang.Boolean) -> a
    void aF() -> a
    void a(java.lang.Object) -> a
com.google.android.gms.internal.df -> com.google.android.gms.internal.gs:
    java.lang.Object kU -> a
    com.google.android.gms.internal.df kV -> b
    android.content.Context kW -> c
    java.util.HashMap kX -> d
    android.os.Handler mHandler -> e
    com.google.android.gms.internal.df s(android.content.Context) -> a
    boolean a(java.lang.String,com.google.android.gms.internal.de$e) -> a
    void b(java.lang.String,com.google.android.gms.internal.de$e) -> b
    boolean handleMessage(android.os.Message) -> handleMessage
    java.util.HashMap a(com.google.android.gms.internal.df) -> a
com.google.android.gms.internal.df$a -> com.google.android.gms.internal.gt:
    java.lang.String kY -> b
    com.google.android.gms.internal.df$a$a kZ -> c
    java.util.HashSet la -> d
    int mState -> e
    boolean lb -> f
    android.os.IBinder lc -> g
    android.content.ComponentName ld -> h
    com.google.android.gms.internal.df le -> a
    void a(com.google.android.gms.internal.de$e) -> a
    void b(com.google.android.gms.internal.de$e) -> b
    com.google.android.gms.internal.df$a$a bg() -> a
    java.lang.String bh() -> b
    void l(boolean) -> a
    boolean isBound() -> c
    int getState() -> d
    boolean c(com.google.android.gms.internal.de$e) -> c
    boolean bi() -> e
    android.os.IBinder getBinder() -> f
    android.content.ComponentName getComponentName() -> g
    android.os.IBinder a(com.google.android.gms.internal.df$a,android.os.IBinder) -> a
    android.content.ComponentName a(com.google.android.gms.internal.df$a,android.content.ComponentName) -> a
    java.util.HashSet a(com.google.android.gms.internal.df$a) -> a
    int a(com.google.android.gms.internal.df$a,int) -> a
com.google.android.gms.internal.df$a$a -> com.google.android.gms.internal.gu:
    com.google.android.gms.internal.df$a lf -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.google.android.gms.internal.dg -> com.google.android.gms.internal.gv:
    android.net.Uri lg -> a
    android.net.Uri lh -> b
    android.content.Intent z(java.lang.String) -> a
    android.content.Intent bj() -> a
    android.net.Uri A(java.lang.String) -> d
    android.content.Intent B(java.lang.String) -> b
    android.content.Intent C(java.lang.String) -> c
com.google.android.gms.internal.dh -> com.google.android.gms.internal.gw:
    java.lang.String li -> a
    boolean x(int) -> a
    void c(java.lang.String,java.lang.String) -> a
    void d(java.lang.String,java.lang.String) -> b
    void a(java.lang.String,java.lang.String,java.lang.Throwable) -> a
com.google.android.gms.internal.di -> com.google.android.gms.internal.gx:
    void b(int,android.os.IBinder,android.os.Bundle) -> a
com.google.android.gms.internal.di$a -> com.google.android.gms.internal.gy:
    com.google.android.gms.internal.di v(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.di$a$a -> com.google.android.gms.internal.gz:
    android.os.IBinder dG -> a
    android.os.IBinder asBinder() -> asBinder
    void b(int,android.os.IBinder,android.os.Bundle) -> a
com.google.android.gms.internal.dj -> com.google.android.gms.internal.ha:
    void a(com.google.android.gms.internal.di,int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,android.os.Bundle) -> a
    void a(com.google.android.gms.internal.di,int,java.lang.String,android.os.Bundle) -> a
    void a(com.google.android.gms.internal.di,int,java.lang.String) -> a
    void a(com.google.android.gms.internal.di,int) -> a
    void b(com.google.android.gms.internal.di,int,java.lang.String,android.os.Bundle) -> b
    void c(com.google.android.gms.internal.di,int,java.lang.String,android.os.Bundle) -> c
    void d(com.google.android.gms.internal.di,int,java.lang.String,android.os.Bundle) -> d
    void e(com.google.android.gms.internal.di,int,java.lang.String,android.os.Bundle) -> e
    void a(com.google.android.gms.internal.di,int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,android.os.IBinder,java.lang.String,android.os.Bundle) -> a
    void a(com.google.android.gms.internal.di,int,java.lang.String,java.lang.String,java.lang.String[]) -> a
    void f(com.google.android.gms.internal.di,int,java.lang.String,android.os.Bundle) -> f
    void g(com.google.android.gms.internal.di,int,java.lang.String,android.os.Bundle) -> g
    void h(com.google.android.gms.internal.di,int,java.lang.String,android.os.Bundle) -> h
    void i(com.google.android.gms.internal.di,int,java.lang.String,android.os.Bundle) -> i
    void j(com.google.android.gms.internal.di,int,java.lang.String,android.os.Bundle) -> j
com.google.android.gms.internal.dj$a -> com.google.android.gms.internal.hb:
    com.google.android.gms.internal.dj w(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.dj$a$a -> com.google.android.gms.internal.hc:
    android.os.IBinder dG -> a
    android.os.IBinder asBinder() -> asBinder
    void a(com.google.android.gms.internal.di,int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,android.os.Bundle) -> a
    void a(com.google.android.gms.internal.di,int,java.lang.String,android.os.Bundle) -> a
    void a(com.google.android.gms.internal.di,int,java.lang.String) -> a
    void a(com.google.android.gms.internal.di,int) -> a
    void b(com.google.android.gms.internal.di,int,java.lang.String,android.os.Bundle) -> b
    void c(com.google.android.gms.internal.di,int,java.lang.String,android.os.Bundle) -> c
    void d(com.google.android.gms.internal.di,int,java.lang.String,android.os.Bundle) -> d
    void e(com.google.android.gms.internal.di,int,java.lang.String,android.os.Bundle) -> e
    void a(com.google.android.gms.internal.di,int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,android.os.IBinder,java.lang.String,android.os.Bundle) -> a
    void a(com.google.android.gms.internal.di,int,java.lang.String,java.lang.String,java.lang.String[]) -> a
    void f(com.google.android.gms.internal.di,int,java.lang.String,android.os.Bundle) -> f
    void g(com.google.android.gms.internal.di,int,java.lang.String,android.os.Bundle) -> g
    void h(com.google.android.gms.internal.di,int,java.lang.String,android.os.Bundle) -> h
    void i(com.google.android.gms.internal.di,int,java.lang.String,android.os.Bundle) -> i
    void j(com.google.android.gms.internal.di,int,java.lang.String,android.os.Bundle) -> j
com.google.android.gms.internal.dk -> com.google.android.gms.internal.hd:
    com.google.android.gms.dynamic.b a(com.google.android.gms.dynamic.b,int,int) -> a
com.google.android.gms.internal.dk$a -> com.google.android.gms.internal.he:
    com.google.android.gms.internal.dk x(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.dk$a$a -> com.google.android.gms.internal.hf:
    android.os.IBinder dG -> a
    android.os.IBinder asBinder() -> asBinder
    com.google.android.gms.dynamic.b a(com.google.android.gms.dynamic.b,int,int) -> a
com.google.android.gms.internal.dl -> com.google.android.gms.internal.hg:
    boolean equal(java.lang.Object,java.lang.Object) -> a
    int hashCode(java.lang.Object[]) -> a
    com.google.android.gms.internal.dl$a d(java.lang.Object) -> a
com.google.android.gms.internal.dl$1 -> com.google.android.gms.internal.hh:
com.google.android.gms.internal.dl$a -> com.google.android.gms.internal.hi:
    java.util.List lj -> a
    java.lang.Object lk -> b
    com.google.android.gms.internal.dl$a a(java.lang.String,java.lang.Object) -> a
    java.lang.String toString() -> toString
com.google.android.gms.internal.dm -> com.google.android.gms.internal.hj:
    java.lang.Object e(java.lang.Object) -> a
    java.lang.Object a(java.lang.Object,java.lang.Object) -> a
    void k(boolean) -> a
    void a(boolean,java.lang.Object) -> a
    void b(boolean,java.lang.Object) -> b
    void a(boolean,java.lang.String,java.lang.Object[]) -> a
    void m(boolean) -> b
    void w(java.lang.String) -> a
    void x(java.lang.String) -> b
com.google.android.gms.internal.dn -> com.google.android.gms.internal.hk:
    com.google.android.gms.internal.dn ll -> a
    android.view.View d(android.content.Context,int,int) -> a
    android.view.View e(android.content.Context,int,int) -> b
    com.google.android.gms.internal.dk y(android.os.IBinder) -> b
    java.lang.Object d(android.os.IBinder) -> a
com.google.android.gms.internal.do -> com.google.android.gms.internal.hl:
    void a(android.content.res.Resources,int,int) -> a
    void c(android.content.res.Resources) -> a
    void b(android.content.res.Resources,int,int) -> b
    void c(android.content.res.Resources,int,int) -> c
    int b(int,int,int) -> a
com.google.android.gms.internal.dq -> com.google.android.gms.internal.hm:
    java.util.LinkedHashMap lm -> a
    int size -> b
    int ln -> c
    int lo -> d
    int lp -> e
    int lq -> f
    int lr -> g
    int ls -> h
    java.lang.Object get(java.lang.Object) -> a
    java.lang.Object put(java.lang.Object,java.lang.Object) -> b
    void trimToSize(int) -> a
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    java.lang.Object create(java.lang.Object) -> b
    int b(java.lang.Object,java.lang.Object) -> c
    int sizeOf(java.lang.Object,java.lang.Object) -> a
    void evictAll() -> a
    int size() -> b
    java.lang.String toString() -> toString
com.google.android.gms.internal.dr -> com.google.android.gms.internal.dr:
    com.google.android.gms.internal.ds CREATOR -> a
    int iM -> b
    com.google.android.gms.internal.dt lt -> c
    int getVersionCode() -> a
    com.google.android.gms.internal.dt bk() -> b
    com.google.android.gms.internal.dr a(com.google.android.gms.internal.dw$b) -> a
    com.google.android.gms.internal.dw$b bl() -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.ds -> com.google.android.gms.internal.hn:
    com.google.android.gms.internal.dr l(android.os.Parcel) -> a
    com.google.android.gms.internal.dr[] z(int) -> a
    void a(com.google.android.gms.internal.dr,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.dt -> com.google.android.gms.internal.dt:
    com.google.android.gms.internal.du CREATOR -> a
    int iM -> b
    java.util.HashMap lu -> c
    java.util.HashMap lv -> d
    java.util.ArrayList lw -> e
    void a(java.util.ArrayList) -> a
    int getVersionCode() -> a
    java.util.ArrayList bm() -> b
    com.google.android.gms.internal.dt c(java.lang.String,int) -> a
    int bn() -> c
    int bo() -> d
    java.lang.String a(java.lang.Integer) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object f(java.lang.Object) -> a
com.google.android.gms.internal.dt$a -> com.google.android.gms.internal.dt$a:
    com.google.android.gms.internal.dv CREATOR -> a
    int versionCode -> b
    java.lang.String lx -> c
    int ly -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.du -> com.google.android.gms.internal.ho:
    com.google.android.gms.internal.dt m(android.os.Parcel) -> a
    com.google.android.gms.internal.dt[] A(int) -> a
    void a(com.google.android.gms.internal.dt,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.dv -> com.google.android.gms.internal.hp:
    com.google.android.gms.internal.dt$a n(android.os.Parcel) -> a
    com.google.android.gms.internal.dt$a[] B(int) -> a
    void a(com.google.android.gms.internal.dt$a,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.dw -> com.google.android.gms.internal.dw:
    java.util.HashMap bp() -> b
    java.lang.Object D(java.lang.String) -> a
    boolean a(com.google.android.gms.internal.dw$a) -> a
    boolean E(java.lang.String) -> b
    boolean F(java.lang.String) -> c
    boolean G(java.lang.String) -> d
    java.lang.Object a(com.google.android.gms.internal.dw$a,java.lang.Object) -> a
    java.util.HashMap bq() -> c
    java.util.HashMap br() -> d
    java.lang.String toString() -> toString
    java.lang.Object b(com.google.android.gms.internal.dw$a) -> b
    void a(java.lang.StringBuilder,com.google.android.gms.internal.dw$a,java.lang.Object) -> a
    void a(java.lang.StringBuilder,com.google.android.gms.internal.dw$a,java.util.ArrayList) -> a
com.google.android.gms.internal.dw$a -> com.google.android.gms.internal.dw$a:
    int iM -> j
    int lz -> a
    boolean lA -> b
    int lB -> c
    boolean lC -> d
    java.lang.String lD -> e
    int lE -> f
    java.lang.Class lF -> g
    java.lang.String lG -> h
    com.google.android.gms.internal.dz lH -> k
    com.google.android.gms.internal.dw$b lI -> l
    com.google.android.gms.internal.dx CREATOR -> i
    int getVersionCode() -> a
    int bn() -> b
    boolean bt() -> c
    int bo() -> d
    boolean bu() -> e
    java.lang.String bv() -> f
    int bw() -> g
    java.lang.Class bx() -> h
    java.lang.String by() -> i
    boolean bz() -> j
    void a(com.google.android.gms.internal.dz) -> a
    com.google.android.gms.internal.dr bA() -> k
    java.util.HashMap bB() -> l
    java.lang.Object f(java.lang.Object) -> a
    com.google.android.gms.internal.dw$a d(java.lang.String,int) -> a
    com.google.android.gms.internal.dw$a e(java.lang.String,int) -> b
    com.google.android.gms.internal.dw$a f(java.lang.String,int) -> c
    com.google.android.gms.internal.dw$a g(java.lang.String,int) -> d
    com.google.android.gms.internal.dw$a h(java.lang.String,int) -> e
    com.google.android.gms.internal.dw$a a(java.lang.String,int,java.lang.Class) -> a
    com.google.android.gms.internal.dw$a b(java.lang.String,int,java.lang.Class) -> b
    com.google.android.gms.internal.dw$a a(java.lang.String,int,com.google.android.gms.internal.dw$b,boolean) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
    com.google.android.gms.internal.dw$b c(com.google.android.gms.internal.dw$a) -> a
com.google.android.gms.internal.dw$b -> com.google.android.gms.internal.hq:
    int bn() -> c
    int bo() -> d
    java.lang.Object f(java.lang.Object) -> a
com.google.android.gms.internal.dx -> com.google.android.gms.internal.hr:
    com.google.android.gms.internal.dw$a o(android.os.Parcel) -> a
    com.google.android.gms.internal.dw$a[] C(int) -> a
    void a(com.google.android.gms.internal.dw$a,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.dy -> com.google.android.gms.internal.hs:
    com.google.android.gms.internal.dz$b p(android.os.Parcel) -> a
    com.google.android.gms.internal.dz$b[] D(int) -> a
    void a(com.google.android.gms.internal.dz$b,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.dz -> com.google.android.gms.internal.dz:
    com.google.android.gms.internal.ea CREATOR -> a
    int iM -> b
    java.util.HashMap lJ -> c
    java.util.ArrayList lK -> d
    java.lang.String lL -> e
    void bC() -> a
    java.util.HashMap b(java.util.ArrayList) -> a
    int getVersionCode() -> b
    java.util.ArrayList bE() -> c
    java.util.HashMap H(java.lang.String) -> a
    java.lang.String bF() -> d
    int describeContents() -> describeContents
    java.lang.String toString() -> toString
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.dz$a -> com.google.android.gms.internal.dz$a:
    com.google.android.gms.internal.eb CREATOR -> a
    int versionCode -> b
    java.lang.String className -> c
    java.util.ArrayList lM -> d
    java.util.ArrayList a(java.util.HashMap) -> a
    java.util.HashMap bG() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.dz$b -> com.google.android.gms.internal.dz$b:
    com.google.android.gms.internal.dy CREATOR -> a
    int versionCode -> b
    java.lang.String lN -> c
    com.google.android.gms.internal.dw$a lO -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.e -> com.google.android.gms.internal.ht:
    android.view.MotionEvent dg -> a
    android.util.DisplayMetrics dh -> b
    com.google.android.gms.internal.j di -> c
    com.google.android.gms.internal.k dj -> d
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    void a(android.view.MotionEvent) -> a
    void a(int,int,int) -> a
    java.lang.String a(android.content.Context,java.lang.String,boolean) -> a
    void a(int,long) -> a
    void a(int,java.lang.String) -> a
    void b() -> a
    byte[] c() -> b
    java.lang.String a(byte[],java.lang.String) -> a
    void a(java.lang.String,byte[]) -> a
com.google.android.gms.internal.ea -> com.google.android.gms.internal.hu:
    com.google.android.gms.internal.dz q(android.os.Parcel) -> a
    com.google.android.gms.internal.dz[] E(int) -> a
    void a(com.google.android.gms.internal.dz,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.eb -> com.google.android.gms.internal.hv:
    com.google.android.gms.internal.dz$a r(android.os.Parcel) -> a
    com.google.android.gms.internal.dz$a[] F(int) -> a
    void a(com.google.android.gms.internal.dz$a,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.ec -> com.google.android.gms.internal.ec:
    int iM -> b
    android.os.Parcel lP -> c
    int lQ -> d
    com.google.android.gms.internal.dz lH -> e
    java.lang.String mClassName -> f
    int lR -> g
    int lS -> h
    com.google.android.gms.internal.ed CREATOR -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int getVersionCode() -> a
    android.os.Parcel bH() -> e
    com.google.android.gms.internal.dz bI() -> f
    java.util.HashMap bp() -> b
    java.lang.Object D(java.lang.String) -> a
    boolean E(java.lang.String) -> b
    java.lang.String toString() -> toString
    void a(java.lang.StringBuilder,java.util.HashMap,android.os.Parcel) -> a
    java.util.HashMap b(java.util.HashMap) -> a
    void a(java.lang.StringBuilder,java.lang.String,com.google.android.gms.internal.dw$a,android.os.Parcel,int) -> a
    void a(java.lang.StringBuilder,com.google.android.gms.internal.dw$a,android.os.Parcel,int) -> a
    void b(java.lang.StringBuilder,com.google.android.gms.internal.dw$a,android.os.Parcel,int) -> b
    void b(java.lang.StringBuilder,com.google.android.gms.internal.dw$a,java.lang.Object) -> a
    void b(java.lang.StringBuilder,com.google.android.gms.internal.dw$a,java.util.ArrayList) -> a
    void a(java.lang.StringBuilder,int,java.lang.Object) -> a
    java.util.HashMap b(android.os.Bundle) -> a
com.google.android.gms.internal.ed -> com.google.android.gms.internal.hw:
    com.google.android.gms.internal.ec s(android.os.Parcel) -> a
    com.google.android.gms.internal.ec[] G(int) -> a
    void a(com.google.android.gms.internal.ec,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.ee -> com.google.android.gms.internal.hx:
    void a(java.lang.StringBuilder,java.lang.Object[]) -> a
    void a(java.lang.StringBuilder,int[]) -> a
    void a(java.lang.StringBuilder,long[]) -> a
    void a(java.lang.StringBuilder,float[]) -> a
    void a(java.lang.StringBuilder,double[]) -> a
    void a(java.lang.StringBuilder,boolean[]) -> a
    void a(java.lang.StringBuilder,java.lang.String[]) -> a
com.google.android.gms.internal.ef -> com.google.android.gms.internal.hy:
    java.lang.String b(byte[]) -> a
    java.lang.String c(byte[]) -> b
com.google.android.gms.internal.eh -> com.google.android.gms.internal.hz:
    boolean H(int) -> a
com.google.android.gms.internal.ei -> com.google.android.gms.internal.ia:
    java.util.regex.Pattern lT -> a
    java.util.regex.Pattern lU -> b
    java.lang.String I(java.lang.String) -> a
com.google.android.gms.internal.ej -> com.google.android.gms.internal.ib:
    void a(java.lang.StringBuilder,java.util.HashMap) -> a
com.google.android.gms.internal.ek -> com.google.android.gms.internal.ic:
    boolean bJ() -> a
    boolean bK() -> b
    boolean bL() -> c
    boolean bM() -> d
    boolean bN() -> e
    boolean bO() -> f
    boolean I(int) -> a
com.google.android.gms.internal.el -> com.google.android.gms.internal.id:
    void c(int,java.lang.String) -> a
    void b(com.google.android.gms.common.data.d) -> a
    void onAchievementUpdated(int,java.lang.String) -> b
    void c(com.google.android.gms.common.data.d) -> b
    void a(com.google.android.gms.common.data.d,com.google.android.gms.common.data.d) -> a
    void d(com.google.android.gms.common.data.d) -> c
    void e(com.google.android.gms.common.data.d) -> d
    void f(com.google.android.gms.common.data.d) -> e
    void g(com.google.android.gms.common.data.d) -> f
    void h(com.google.android.gms.common.data.d) -> g
    void i(com.google.android.gms.common.data.d) -> h
    void j(com.google.android.gms.common.data.d) -> i
    void k(com.google.android.gms.common.data.d) -> j
    void l(com.google.android.gms.common.data.d) -> k
    void M(int) -> a
    void m(com.google.android.gms.common.data.d) -> l
    void N(int) -> b
    void n(com.google.android.gms.common.data.d) -> m
    void o(com.google.android.gms.common.data.d) -> n
    void onLeftRoom(int,java.lang.String) -> c
    void p(com.google.android.gms.common.data.d) -> o
    void q(com.google.android.gms.common.data.d) -> p
    void r(com.google.android.gms.common.data.d) -> q
    void s(com.google.android.gms.common.data.d) -> r
    void t(com.google.android.gms.common.data.d) -> s
    void a(com.google.android.gms.common.data.d,java.lang.String[]) -> a
    void b(com.google.android.gms.common.data.d,java.lang.String[]) -> b
    void c(com.google.android.gms.common.data.d,java.lang.String[]) -> c
    void d(com.google.android.gms.common.data.d,java.lang.String[]) -> d
    void e(com.google.android.gms.common.data.d,java.lang.String[]) -> e
    void f(com.google.android.gms.common.data.d,java.lang.String[]) -> f
    void onP2PConnected(java.lang.String) -> a
    void onP2PDisconnected(java.lang.String) -> b
    void onRealTimeMessageReceived(com.google.android.gms.games.multiplayer.realtime.RealTimeMessage) -> a
    void a(int,int,java.lang.String) -> a
    void onSignOutComplete() -> a
    void a(int,java.lang.String,boolean) -> a
    void u(com.google.android.gms.common.data.d) -> t
    void v(com.google.android.gms.common.data.d) -> u
    void O(int) -> c
    void w(com.google.android.gms.common.data.d) -> v
    void P(int) -> d
com.google.android.gms.internal.em -> com.google.android.gms.internal.ie:
    java.lang.String mF -> f
    java.lang.String it -> g
    java.util.Map mG -> h
    com.google.android.gms.games.PlayerEntity mH -> i
    com.google.android.gms.internal.es mJ -> j
    boolean mK -> k
    android.os.Binder mL -> l
    long mM -> m
    boolean mN -> n
    void setViewForPopups(android.view.View) -> a
    void a(java.lang.String[]) -> a
    void connect() -> d
    void disconnect() -> g
    java.lang.String ag() -> a
    java.lang.String ah() -> b
    com.google.android.gms.internal.er A(android.os.IBinder) -> a
    android.os.Bundle ba() -> k
    void bR() -> r
    void a(com.google.android.gms.internal.dj,com.google.android.gms.internal.de$d) -> a
    void aZ() -> j
    void a(com.google.android.gms.common.ConnectionResult) -> a
    com.google.android.gms.games.Player getCurrentPlayer() -> c
    android.content.Intent getAllLeaderboardsIntent() -> o
    void a(com.google.android.gms.games.leaderboard.OnScoreSubmittedListener,java.lang.String,long,java.lang.String) -> a
    android.content.Intent getAchievementsIntent() -> p
    void b(com.google.android.gms.games.achievement.OnAchievementUpdatedListener,java.lang.String) -> a
    void a(com.google.android.gms.games.achievement.OnAchievementUpdatedListener,java.lang.String,int) -> a
    void signOut(com.google.android.gms.games.OnSignOutCompleteListener) -> a
    void bS() -> s
    void a(android.os.IBinder,android.os.Bundle) -> a
    void bT() -> q
    void a(int,android.os.IBinder,android.os.Bundle) -> a
    android.os.IInterface p(android.os.IBinder) -> b
com.google.android.gms.internal.em$an -> com.google.android.gms.internal.if:
    com.google.android.gms.games.OnSignOutCompleteListener nl -> b
    com.google.android.gms.internal.em mP -> a
    void onSignOutComplete() -> a
com.google.android.gms.internal.em$ao -> com.google.android.gms.internal.ig:
    com.google.android.gms.internal.em mP -> b
    void a(com.google.android.gms.games.OnSignOutCompleteListener) -> a
    void aF() -> a
    void a(java.lang.Object) -> a
com.google.android.gms.internal.em$ap -> com.google.android.gms.internal.ih:
    com.google.android.gms.games.leaderboard.OnScoreSubmittedListener nm -> b
    com.google.android.gms.internal.em mP -> a
    void d(com.google.android.gms.common.data.d) -> c
com.google.android.gms.internal.em$aq -> com.google.android.gms.internal.ii:
    com.google.android.gms.games.leaderboard.SubmitScoreResult nn -> c
    com.google.android.gms.internal.em mP -> b
    void a(com.google.android.gms.games.leaderboard.OnScoreSubmittedListener) -> a
    void aF() -> a
    void a(java.lang.Object) -> a
com.google.android.gms.internal.em$d -> com.google.android.gms.internal.ij:
    com.google.android.gms.games.achievement.OnAchievementUpdatedListener mQ -> b
    com.google.android.gms.internal.em mP -> a
    void onAchievementUpdated(int,java.lang.String) -> b
com.google.android.gms.internal.em$e -> com.google.android.gms.internal.ik:
    int iC -> c
    java.lang.String mR -> d
    com.google.android.gms.internal.em mP -> b
    void a(com.google.android.gms.games.achievement.OnAchievementUpdatedListener) -> a
    void aF() -> a
    void a(java.lang.Object) -> a
com.google.android.gms.internal.en -> com.google.android.gms.internal.en:
    boolean c(java.lang.Integer) -> b
com.google.android.gms.internal.eo -> com.google.android.gms.internal.il:
    android.content.Intent c(android.content.Intent) -> a
com.google.android.gms.internal.ep -> com.google.android.gms.internal.im:
    com.google.android.gms.internal.dh no -> a
    void c(java.lang.String,java.lang.String) -> a
    void d(java.lang.String,java.lang.String) -> b
    void a(java.lang.String,java.lang.String,java.lang.Throwable) -> a
com.google.android.gms.internal.eq -> com.google.android.gms.internal.in:
    void c(int,java.lang.String) -> a
    void b(com.google.android.gms.common.data.d) -> a
    void onAchievementUpdated(int,java.lang.String) -> b
    void c(com.google.android.gms.common.data.d) -> b
    void a(com.google.android.gms.common.data.d,com.google.android.gms.common.data.d) -> a
    void d(com.google.android.gms.common.data.d) -> c
    void e(com.google.android.gms.common.data.d) -> d
    void f(com.google.android.gms.common.data.d) -> e
    void g(com.google.android.gms.common.data.d) -> f
    void h(com.google.android.gms.common.data.d) -> g
    void i(com.google.android.gms.common.data.d) -> h
    void l(com.google.android.gms.common.data.d) -> k
    void M(int) -> a
    void m(com.google.android.gms.common.data.d) -> l
    void N(int) -> b
    void onSignOutComplete() -> a
    void j(com.google.android.gms.common.data.d) -> i
    void k(com.google.android.gms.common.data.d) -> j
    void n(com.google.android.gms.common.data.d) -> m
    void o(com.google.android.gms.common.data.d) -> n
    void onLeftRoom(int,java.lang.String) -> c
    void p(com.google.android.gms.common.data.d) -> o
    void q(com.google.android.gms.common.data.d) -> p
    void r(com.google.android.gms.common.data.d) -> q
    void s(com.google.android.gms.common.data.d) -> r
    void t(com.google.android.gms.common.data.d) -> s
    void a(com.google.android.gms.common.data.d,java.lang.String[]) -> a
    void b(com.google.android.gms.common.data.d,java.lang.String[]) -> b
    void c(com.google.android.gms.common.data.d,java.lang.String[]) -> c
    void d(com.google.android.gms.common.data.d,java.lang.String[]) -> d
    void e(com.google.android.gms.common.data.d,java.lang.String[]) -> e
    void f(com.google.android.gms.common.data.d,java.lang.String[]) -> f
    void onRealTimeMessageReceived(com.google.android.gms.games.multiplayer.realtime.RealTimeMessage) -> a
    void a(int,int,java.lang.String) -> a
    void a(int,java.lang.String,boolean) -> a
    void u(com.google.android.gms.common.data.d) -> t
    void v(com.google.android.gms.common.data.d) -> u
    void O(int) -> c
    void w(com.google.android.gms.common.data.d) -> v
    void P(int) -> d
    void onP2PConnected(java.lang.String) -> a
    void onP2PDisconnected(java.lang.String) -> b
com.google.android.gms.internal.eq$a -> com.google.android.gms.internal.io:
    com.google.android.gms.internal.eq B(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.eq$a$a -> com.google.android.gms.internal.ip:
    android.os.IBinder dG -> a
    android.os.IBinder asBinder() -> asBinder
    void c(int,java.lang.String) -> a
    void b(com.google.android.gms.common.data.d) -> a
    void onAchievementUpdated(int,java.lang.String) -> b
    void c(com.google.android.gms.common.data.d) -> b
    void a(com.google.android.gms.common.data.d,com.google.android.gms.common.data.d) -> a
    void d(com.google.android.gms.common.data.d) -> c
    void e(com.google.android.gms.common.data.d) -> d
    void f(com.google.android.gms.common.data.d) -> e
    void g(com.google.android.gms.common.data.d) -> f
    void h(com.google.android.gms.common.data.d) -> g
    void i(com.google.android.gms.common.data.d) -> h
    void l(com.google.android.gms.common.data.d) -> k
    void M(int) -> a
    void m(com.google.android.gms.common.data.d) -> l
    void N(int) -> b
    void onSignOutComplete() -> a
    void j(com.google.android.gms.common.data.d) -> i
    void k(com.google.android.gms.common.data.d) -> j
    void n(com.google.android.gms.common.data.d) -> m
    void o(com.google.android.gms.common.data.d) -> n
    void onLeftRoom(int,java.lang.String) -> c
    void p(com.google.android.gms.common.data.d) -> o
    void q(com.google.android.gms.common.data.d) -> p
    void r(com.google.android.gms.common.data.d) -> q
    void s(com.google.android.gms.common.data.d) -> r
    void t(com.google.android.gms.common.data.d) -> s
    void a(com.google.android.gms.common.data.d,java.lang.String[]) -> a
    void b(com.google.android.gms.common.data.d,java.lang.String[]) -> b
    void c(com.google.android.gms.common.data.d,java.lang.String[]) -> c
    void d(com.google.android.gms.common.data.d,java.lang.String[]) -> d
    void e(com.google.android.gms.common.data.d,java.lang.String[]) -> e
    void f(com.google.android.gms.common.data.d,java.lang.String[]) -> f
    void onRealTimeMessageReceived(com.google.android.gms.games.multiplayer.realtime.RealTimeMessage) -> a
    void a(int,int,java.lang.String) -> a
    void a(int,java.lang.String,boolean) -> a
    void u(com.google.android.gms.common.data.d) -> t
    void v(com.google.android.gms.common.data.d) -> u
    void O(int) -> c
    void w(com.google.android.gms.common.data.d) -> v
    void P(int) -> d
    void onP2PConnected(java.lang.String) -> a
    void onP2PDisconnected(java.lang.String) -> b
com.google.android.gms.internal.er -> com.google.android.gms.internal.iq:
    void f(long) -> a
    void a(com.google.android.gms.internal.eq) -> a
    java.lang.String getAppId() -> a
    android.os.Bundle ba() -> b
    void a(android.os.IBinder,android.os.Bundle) -> a
    void bT() -> c
    java.lang.String getCurrentAccountName() -> d
    java.lang.String L(java.lang.String) -> a
    void f(java.lang.String,java.lang.String) -> a
    void a(com.google.android.gms.internal.eq,java.lang.String) -> a
    void a(com.google.android.gms.internal.eq,java.lang.String,java.lang.String) -> a
    void b(com.google.android.gms.internal.eq,java.lang.String) -> b
    void a(com.google.android.gms.internal.eq,java.lang.String,boolean,long[]) -> a
    java.lang.String getCurrentPlayerId() -> e
    com.google.android.gms.common.data.d bU() -> f
    void c(com.google.android.gms.internal.eq,java.lang.String) -> c
    void a(com.google.android.gms.internal.eq,int,boolean,boolean) -> a
    void a(com.google.android.gms.internal.eq,java.lang.String,long) -> a
    void b(com.google.android.gms.internal.eq) -> b
    void d(com.google.android.gms.internal.eq,java.lang.String) -> d
    void a(com.google.android.gms.internal.eq,java.lang.String,int,int,int,boolean) -> a
    void b(com.google.android.gms.internal.eq,java.lang.String,int,int,int,boolean) -> b
    void a(com.google.android.gms.internal.eq,android.os.Bundle,int,int) -> a
    void c(com.google.android.gms.internal.eq) -> c
    void a(com.google.android.gms.internal.eq,java.lang.String,android.os.IBinder,android.os.Bundle) -> a
    void b(com.google.android.gms.internal.eq,java.lang.String,android.os.IBinder,android.os.Bundle) -> b
    void a(com.google.android.gms.internal.eq,java.lang.String,int,android.os.IBinder,android.os.Bundle) -> a
    void d(com.google.android.gms.internal.eq) -> d
    void e(com.google.android.gms.internal.eq) -> e
    void j(java.lang.String,int) -> a
    void i(java.lang.String,int) -> b
    void a(com.google.android.gms.internal.eq,long) -> a
    void g(long) -> b
    void a(com.google.android.gms.internal.eq,android.os.IBinder,int,java.lang.String[],android.os.Bundle,boolean,long) -> a
    void a(com.google.android.gms.internal.eq,android.os.IBinder,java.lang.String,boolean,long) -> a
    void e(com.google.android.gms.internal.eq,java.lang.String) -> e
    int a(com.google.android.gms.internal.eq,byte[],java.lang.String,java.lang.String) -> a
    int b(byte[],java.lang.String,java.lang.String[]) -> a
    java.lang.String M(java.lang.String) -> b
    void clearNotifications(int) -> a
    void f(com.google.android.gms.internal.eq,java.lang.String) -> f
    void b(com.google.android.gms.internal.eq,java.lang.String,java.lang.String) -> b
    void a(com.google.android.gms.internal.eq,java.lang.String,java.lang.String,int,int,int,boolean) -> a
    void b(com.google.android.gms.internal.eq,java.lang.String,java.lang.String,int,int,int,boolean) -> b
    void c(com.google.android.gms.internal.eq,java.lang.String,java.lang.String) -> c
    void g(com.google.android.gms.internal.eq,java.lang.String) -> g
    void h(com.google.android.gms.internal.eq,java.lang.String) -> h
    void a(com.google.android.gms.internal.eq,int,int,boolean,boolean) -> a
    void a(com.google.android.gms.internal.eq,java.lang.String,int,boolean,boolean) -> a
    void b(com.google.android.gms.internal.eq,int,boolean,boolean) -> b
    void f(com.google.android.gms.internal.eq) -> f
    void c(com.google.android.gms.internal.eq,int,boolean,boolean) -> c
    void g(com.google.android.gms.internal.eq) -> g
    void N(java.lang.String) -> c
    void a(java.lang.String,java.lang.String,int) -> a
    void i(com.google.android.gms.internal.eq,java.lang.String) -> i
    int j(com.google.android.gms.internal.eq,java.lang.String) -> j
    int O(java.lang.String) -> d
    void a(com.google.android.gms.internal.eq,java.lang.String,boolean) -> a
    void k(com.google.android.gms.internal.eq,java.lang.String) -> k
    void k(java.lang.String,int) -> c
    boolean bV() -> g
    void setUseNewPlayerNotificationsFirstParty(boolean) -> a
    void h(com.google.android.gms.internal.eq) -> h
    void l(com.google.android.gms.internal.eq,java.lang.String) -> l
    void i(com.google.android.gms.internal.eq) -> i
    void a(com.google.android.gms.internal.eq,boolean) -> a
    android.net.Uri P(java.lang.String) -> e
    void b(com.google.android.gms.internal.eq,java.lang.String,int,boolean,boolean) -> b
    com.google.android.gms.common.data.d bW() -> h
    void b(com.google.android.gms.internal.eq,boolean) -> b
    void a(com.google.android.gms.internal.eq,java.lang.String,java.lang.String,boolean) -> a
    void d(com.google.android.gms.internal.eq,int,boolean,boolean) -> d
    void e(com.google.android.gms.internal.eq,int,boolean,boolean) -> e
    void a(com.google.android.gms.internal.eq,java.lang.String,int,boolean,boolean,boolean,boolean) -> a
    void b(com.google.android.gms.internal.eq,java.lang.String,boolean) -> b
    void c(com.google.android.gms.internal.eq,boolean) -> c
    void c(com.google.android.gms.internal.eq,java.lang.String,boolean) -> c
    void d(com.google.android.gms.internal.eq,java.lang.String,boolean) -> d
    void b(com.google.android.gms.internal.eq,java.lang.String,java.lang.String,boolean) -> b
    android.os.ParcelFileDescriptor e(android.net.Uri) -> a
    void m(com.google.android.gms.internal.eq,java.lang.String) -> m
    void a(com.google.android.gms.internal.eq,java.lang.String,long,java.lang.String) -> a
    void b(com.google.android.gms.internal.eq,java.lang.String,int,android.os.IBinder,android.os.Bundle) -> b
com.google.android.gms.internal.er$a -> com.google.android.gms.internal.ir:
    com.google.android.gms.internal.er C(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.er$a$a -> com.google.android.gms.internal.is:
    android.os.IBinder dG -> a
    android.os.IBinder asBinder() -> asBinder
    void f(long) -> a
    void a(com.google.android.gms.internal.eq) -> a
    java.lang.String getAppId() -> a
    android.os.Bundle ba() -> b
    void a(android.os.IBinder,android.os.Bundle) -> a
    void bT() -> c
    java.lang.String getCurrentAccountName() -> d
    java.lang.String L(java.lang.String) -> a
    void f(java.lang.String,java.lang.String) -> a
    void a(com.google.android.gms.internal.eq,java.lang.String) -> a
    void a(com.google.android.gms.internal.eq,java.lang.String,java.lang.String) -> a
    void b(com.google.android.gms.internal.eq,java.lang.String) -> b
    void a(com.google.android.gms.internal.eq,java.lang.String,boolean,long[]) -> a
    java.lang.String getCurrentPlayerId() -> e
    com.google.android.gms.common.data.d bU() -> f
    void c(com.google.android.gms.internal.eq,java.lang.String) -> c
    void a(com.google.android.gms.internal.eq,int,boolean,boolean) -> a
    void a(com.google.android.gms.internal.eq,java.lang.String,long) -> a
    void b(com.google.android.gms.internal.eq) -> b
    void d(com.google.android.gms.internal.eq,java.lang.String) -> d
    void a(com.google.android.gms.internal.eq,java.lang.String,int,int,int,boolean) -> a
    void b(com.google.android.gms.internal.eq,java.lang.String,int,int,int,boolean) -> b
    void a(com.google.android.gms.internal.eq,android.os.Bundle,int,int) -> a
    void c(com.google.android.gms.internal.eq) -> c
    void a(com.google.android.gms.internal.eq,java.lang.String,android.os.IBinder,android.os.Bundle) -> a
    void b(com.google.android.gms.internal.eq,java.lang.String,android.os.IBinder,android.os.Bundle) -> b
    void a(com.google.android.gms.internal.eq,java.lang.String,int,android.os.IBinder,android.os.Bundle) -> a
    void d(com.google.android.gms.internal.eq) -> d
    void e(com.google.android.gms.internal.eq) -> e
    void j(java.lang.String,int) -> a
    void i(java.lang.String,int) -> b
    void a(com.google.android.gms.internal.eq,long) -> a
    void g(long) -> b
    void a(com.google.android.gms.internal.eq,android.os.IBinder,int,java.lang.String[],android.os.Bundle,boolean,long) -> a
    void a(com.google.android.gms.internal.eq,android.os.IBinder,java.lang.String,boolean,long) -> a
    void e(com.google.android.gms.internal.eq,java.lang.String) -> e
    int a(com.google.android.gms.internal.eq,byte[],java.lang.String,java.lang.String) -> a
    int b(byte[],java.lang.String,java.lang.String[]) -> a
    java.lang.String M(java.lang.String) -> b
    void clearNotifications(int) -> a
    void f(com.google.android.gms.internal.eq,java.lang.String) -> f
    void b(com.google.android.gms.internal.eq,java.lang.String,java.lang.String) -> b
    void a(com.google.android.gms.internal.eq,java.lang.String,java.lang.String,int,int,int,boolean) -> a
    void b(com.google.android.gms.internal.eq,java.lang.String,java.lang.String,int,int,int,boolean) -> b
    void c(com.google.android.gms.internal.eq,java.lang.String,java.lang.String) -> c
    void g(com.google.android.gms.internal.eq,java.lang.String) -> g
    void h(com.google.android.gms.internal.eq,java.lang.String) -> h
    void a(com.google.android.gms.internal.eq,int,int,boolean,boolean) -> a
    void a(com.google.android.gms.internal.eq,java.lang.String,int,boolean,boolean) -> a
    void b(com.google.android.gms.internal.eq,int,boolean,boolean) -> b
    void f(com.google.android.gms.internal.eq) -> f
    void c(com.google.android.gms.internal.eq,int,boolean,boolean) -> c
    void g(com.google.android.gms.internal.eq) -> g
    void N(java.lang.String) -> c
    void a(java.lang.String,java.lang.String,int) -> a
    void i(com.google.android.gms.internal.eq,java.lang.String) -> i
    int j(com.google.android.gms.internal.eq,java.lang.String) -> j
    int O(java.lang.String) -> d
    void a(com.google.android.gms.internal.eq,java.lang.String,boolean) -> a
    void k(com.google.android.gms.internal.eq,java.lang.String) -> k
    void k(java.lang.String,int) -> c
    boolean bV() -> g
    void setUseNewPlayerNotificationsFirstParty(boolean) -> a
    void h(com.google.android.gms.internal.eq) -> h
    void l(com.google.android.gms.internal.eq,java.lang.String) -> l
    void i(com.google.android.gms.internal.eq) -> i
    void a(com.google.android.gms.internal.eq,boolean) -> a
    android.net.Uri P(java.lang.String) -> e
    void b(com.google.android.gms.internal.eq,java.lang.String,int,boolean,boolean) -> b
    com.google.android.gms.common.data.d bW() -> h
    void b(com.google.android.gms.internal.eq,boolean) -> b
    void a(com.google.android.gms.internal.eq,java.lang.String,java.lang.String,boolean) -> a
    void d(com.google.android.gms.internal.eq,int,boolean,boolean) -> d
    void e(com.google.android.gms.internal.eq,int,boolean,boolean) -> e
    void a(com.google.android.gms.internal.eq,java.lang.String,int,boolean,boolean,boolean,boolean) -> a
    void b(com.google.android.gms.internal.eq,java.lang.String,boolean) -> b
    void c(com.google.android.gms.internal.eq,boolean) -> c
    void c(com.google.android.gms.internal.eq,java.lang.String,boolean) -> c
    void d(com.google.android.gms.internal.eq,java.lang.String,boolean) -> d
    void b(com.google.android.gms.internal.eq,java.lang.String,java.lang.String,boolean) -> b
    android.os.ParcelFileDescriptor e(android.net.Uri) -> a
    void m(com.google.android.gms.internal.eq,java.lang.String) -> m
    void a(com.google.android.gms.internal.eq,java.lang.String,long,java.lang.String) -> a
    void b(com.google.android.gms.internal.eq,java.lang.String,int,android.os.IBinder,android.os.Bundle) -> b
com.google.android.gms.internal.es -> com.google.android.gms.internal.it:
    com.google.android.gms.internal.em mz -> a
    com.google.android.gms.internal.es$a np -> b
    com.google.android.gms.internal.es a(com.google.android.gms.internal.em,int) -> a
    void Q(int) -> a
    void e(android.view.View) -> a
    void bX() -> a
    android.os.Bundle bY() -> b
    android.os.IBinder bZ() -> c
com.google.android.gms.internal.es$1 -> com.google.android.gms.internal.iu:
com.google.android.gms.internal.es$a -> com.google.android.gms.internal.iv:
    android.os.IBinder nq -> a
    int gravity -> b
    int nr -> c
    int left -> d
    int top -> e
    int right -> f
    int bottom -> g
    android.os.Bundle ca() -> a
com.google.android.gms.internal.es$b -> com.google.android.gms.internal.iw:
    java.lang.ref.WeakReference ns -> c
    boolean mK -> d
    void Q(int) -> a
    void e(android.view.View) -> a
    void bX() -> a
    void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    void onGlobalLayout() -> onGlobalLayout
    void f(android.view.View) -> b
com.google.android.gms.internal.et -> com.google.android.gms.internal.ix:
    android.net.LocalSocket nt -> a
    void close() -> a
com.google.android.gms.internal.ev -> com.google.android.gms.internal.iy:
    java.lang.String R(int) -> a
com.google.android.gms.internal.f -> com.google.android.gms.internal.iz:
    java.lang.reflect.Method dk -> e
    java.lang.reflect.Method dl -> f
    java.lang.reflect.Method dm -> g
    java.lang.reflect.Method dn -> h
    java.lang.reflect.Method do -> i
    java.lang.reflect.Method dp -> j
    java.lang.String dq -> k
    long startTime -> l
    com.google.android.gms.internal.l dr -> m
    boolean ds -> d
    void a(java.lang.String,android.content.Context,com.google.android.gms.internal.j) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    java.lang.String d() -> a
    java.lang.Long e() -> b
    java.lang.String d(android.content.Context) -> d
    java.lang.String f() -> c
    java.util.ArrayList a(android.view.MotionEvent,android.util.DisplayMetrics) -> a
    java.lang.String a(android.content.Context,com.google.android.gms.internal.j) -> a
    java.lang.String b(android.content.Context,com.google.android.gms.internal.j) -> b
    java.lang.String b(byte[],java.lang.String) -> b
    void e(android.content.Context) -> e
com.google.android.gms.internal.f$a -> com.google.android.gms.internal.ja:
com.google.android.gms.internal.fa -> com.google.android.gms.internal.fa:
    int iM -> b
    java.lang.String oA -> c
    long pc -> d
    short oD -> e
    double oE -> f
    double oF -> g
    float oG -> h
    int oB -> i
    int oH -> j
    int oI -> k
    com.google.android.gms.internal.fb CREATOR -> a
    int getVersionCode() -> a
    short co() -> b
    double getLatitude() -> c
    double getLongitude() -> d
    float cp() -> e
    java.lang.String getRequestId() -> f
    long getExpirationTime() -> g
    int cq() -> h
    int getNotificationResponsiveness() -> i
    int cr() -> j
    void R(java.lang.String) -> a
    void b(float) -> a
    void a(double,double) -> a
    int aa(int) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String ab(int) -> b
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.android.gms.internal.fb -> com.google.android.gms.internal.jb:
    com.google.android.gms.internal.fa z(android.os.Parcel) -> a
    com.google.android.gms.internal.fa[] ac(int) -> a
    void a(com.google.android.gms.internal.fa,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.fh -> com.google.android.gms.internal.jc:
    void a(int,android.os.Bundle,android.os.Bundle) -> a
    void a(int,android.os.Bundle,android.os.ParcelFileDescriptor) -> a
    void W(java.lang.String) -> a
    void a(com.google.android.gms.common.data.d,java.lang.String) -> a
    void a(int,android.os.Bundle,com.google.android.gms.internal.ec) -> a
    void a(com.google.android.gms.common.data.d,java.lang.String,java.lang.String) -> a
    void b(int,android.os.Bundle) -> a
    void X(java.lang.String) -> b
com.google.android.gms.internal.fh$a -> com.google.android.gms.internal.jd:
    com.google.android.gms.internal.fh an(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.fh$a$a -> com.google.android.gms.internal.je:
    android.os.IBinder dG -> a
    android.os.IBinder asBinder() -> asBinder
    void a(int,android.os.Bundle,android.os.Bundle) -> a
    void a(int,android.os.Bundle,android.os.ParcelFileDescriptor) -> a
    void W(java.lang.String) -> a
    void a(com.google.android.gms.common.data.d,java.lang.String) -> a
    void a(int,android.os.Bundle,com.google.android.gms.internal.ec) -> a
    void a(com.google.android.gms.common.data.d,java.lang.String,java.lang.String) -> a
    void b(int,android.os.Bundle) -> a
    void X(java.lang.String) -> b
com.google.android.gms.internal.fk -> com.google.android.gms.internal.jf:
    void a(com.google.android.gms.internal.fh,java.lang.String) -> a
    void a(com.google.android.gms.internal.fh,java.lang.String,java.lang.String) -> a
    void b(com.google.android.gms.internal.fh,java.lang.String) -> b
    void a(com.google.android.gms.internal.ec) -> a
    java.lang.String getAccountName() -> a
    void clearDefaultAccount() -> b
    void a(com.google.android.gms.internal.fh) -> a
    void a(com.google.android.gms.internal.fh,android.net.Uri,android.os.Bundle) -> a
    void a(com.google.android.gms.internal.fh,int,java.lang.String,android.net.Uri,java.lang.String,java.lang.String) -> a
    void a(com.google.android.gms.internal.fh,int,int,int,java.lang.String) -> a
    void removeMoment(java.lang.String) -> a
    void c(com.google.android.gms.internal.fh,java.lang.String) -> c
    void b(com.google.android.gms.internal.fh) -> b
    void a(com.google.android.gms.internal.fh,java.util.List) -> a
    void d(com.google.android.gms.internal.fh,java.lang.String) -> d
    java.lang.String cW() -> c
    boolean cX() -> d
    java.lang.String cY() -> e
com.google.android.gms.internal.fk$a -> com.google.android.gms.internal.jg:
    com.google.android.gms.internal.fk aq(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.fk$a$a -> com.google.android.gms.internal.jh:
    android.os.IBinder dG -> a
    android.os.IBinder asBinder() -> asBinder
    void a(com.google.android.gms.internal.fh,java.lang.String) -> a
    void a(com.google.android.gms.internal.fh,java.lang.String,java.lang.String) -> a
    void b(com.google.android.gms.internal.fh,java.lang.String) -> b
    void a(com.google.android.gms.internal.ec) -> a
    java.lang.String getAccountName() -> a
    void clearDefaultAccount() -> b
    void a(com.google.android.gms.internal.fh) -> a
    void a(com.google.android.gms.internal.fh,android.net.Uri,android.os.Bundle) -> a
    void a(com.google.android.gms.internal.fh,int,java.lang.String,android.net.Uri,java.lang.String,java.lang.String) -> a
    void a(com.google.android.gms.internal.fh,int,int,int,java.lang.String) -> a
    void removeMoment(java.lang.String) -> a
    void c(com.google.android.gms.internal.fh,java.lang.String) -> c
    void b(com.google.android.gms.internal.fh) -> b
    void a(com.google.android.gms.internal.fh,java.util.List) -> a
    void d(com.google.android.gms.internal.fh,java.lang.String) -> d
    java.lang.String cW() -> c
    boolean cX() -> d
    java.lang.String cY() -> e
com.google.android.gms.internal.fl -> com.google.android.gms.internal.ji:
    com.google.android.gms.plus.model.people.Person ro -> f
    com.google.android.gms.internal.fn rp -> g
    void clearDefaultAccount() -> c
    com.google.android.gms.internal.fk ar(android.os.IBinder) -> a
    java.lang.String ah() -> b
    java.lang.String ag() -> a
    void a(com.google.android.gms.internal.dj,com.google.android.gms.internal.de$d) -> a
    void a(int,android.os.IBinder,android.os.Bundle) -> a
    android.os.IInterface p(android.os.IBinder) -> b
com.google.android.gms.internal.fn -> com.google.android.gms.internal.fn:
    com.google.android.gms.internal.fp CREATOR -> a
    int iM -> b
    java.lang.String it -> c
    java.lang.String[] ry -> d
    java.lang.String[] rz -> e
    java.lang.String[] rA -> f
    java.lang.String rB -> g
    java.lang.String rC -> h
    java.lang.String rD -> i
    java.lang.String rE -> j
    int getVersionCode() -> a
    java.lang.String getAccountName() -> b
    java.lang.String[] cZ() -> c
    java.lang.String[] da() -> d
    java.lang.String[] db() -> e
    java.lang.String dc() -> f
    java.lang.String dd() -> g
    java.lang.String de() -> h
    java.lang.String df() -> i
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.fo -> com.google.android.gms.internal.jj:
    java.lang.String it -> a
    java.util.ArrayList rF -> b
    java.lang.String[] rG -> c
    java.lang.String rB -> d
    java.lang.String rC -> e
    java.lang.String[] rA -> f
    java.lang.String rD -> g
    java.lang.String rE -> h
    com.google.android.gms.internal.fo d(java.lang.String[]) -> a
    com.google.android.gms.internal.fn dh() -> a
com.google.android.gms.internal.fp -> com.google.android.gms.internal.jk:
    com.google.android.gms.internal.fn A(android.os.Parcel) -> a
    com.google.android.gms.internal.fn[] af(int) -> a
    void a(com.google.android.gms.internal.fn,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.fq -> com.google.android.gms.internal.fq:
    com.google.android.gms.internal.fr CREATOR -> a
    java.util.HashMap rH -> b
    java.util.Set rI -> c
    int iM -> d
    com.google.android.gms.internal.fq rJ -> e
    java.util.List rK -> f
    com.google.android.gms.internal.fq rL -> g
    java.lang.String rM -> h
    java.lang.String rN -> i
    java.lang.String rO -> j
    java.util.List rP -> k
    int rQ -> l
    java.util.List rR -> m
    com.google.android.gms.internal.fq rS -> n
    java.util.List rT -> o
    java.lang.String rU -> p
    java.lang.String rV -> q
    com.google.android.gms.internal.fq rW -> r
    java.lang.String rX -> s
    java.lang.String rY -> t
    java.lang.String rZ -> u
    java.util.List sa -> v
    java.lang.String sb -> w
    java.lang.String sc -> x
    java.lang.String sd -> y
    java.lang.String mo -> z
    java.lang.String se -> A
    java.lang.String sf -> B
    java.lang.String sg -> C
    java.lang.String sh -> D
    java.lang.String si -> E
    com.google.android.gms.internal.fq sj -> F
    java.lang.String sk -> G
    java.lang.String sl -> H
    java.lang.String sm -> I
    java.lang.String sn -> J
    com.google.android.gms.internal.fq so -> K
    double oE -> L
    com.google.android.gms.internal.fq sp -> M
    double oF -> N
    java.lang.String mName -> O
    com.google.android.gms.internal.fq sq -> P
    java.util.List sr -> Q
    java.lang.String ss -> R
    java.lang.String st -> S
    java.lang.String su -> T
    java.lang.String sv -> U
    com.google.android.gms.internal.fq sw -> V
    java.lang.String sx -> W
    java.lang.String sy -> X
    java.lang.String sz -> Y
    com.google.android.gms.internal.fq sA -> Z
    java.lang.String sB -> aa
    java.lang.String sC -> ab
    java.lang.String sD -> ac
    java.lang.String hN -> ad
    java.lang.String sE -> ae
    java.lang.String sF -> af
    java.util.HashMap bp() -> b
    java.util.Set di() -> e
    int getVersionCode() -> f
    com.google.android.gms.internal.fq dj() -> g
    java.util.List getAdditionalName() -> h
    com.google.android.gms.internal.fq dk() -> i
    java.lang.String getAddressCountry() -> j
    java.lang.String getAddressLocality() -> k
    java.lang.String getAddressRegion() -> l
    java.util.List dl() -> m
    int getAttendeeCount() -> n
    java.util.List dm() -> o
    com.google.android.gms.internal.fq dn() -> p
    java.util.List do() -> q
    java.lang.String getBestRating() -> r
    java.lang.String getBirthDate() -> s
    com.google.android.gms.internal.fq dp() -> t
    java.lang.String getCaption() -> u
    java.lang.String getContentSize() -> v
    java.lang.String getContentUrl() -> w
    java.util.List dq() -> x
    java.lang.String getDateCreated() -> y
    java.lang.String getDateModified() -> z
    java.lang.String getDatePublished() -> A
    java.lang.String getDescription() -> B
    java.lang.String getDuration() -> C
    java.lang.String getEmbedUrl() -> D
    java.lang.String getEndDate() -> E
    java.lang.String getFamilyName() -> F
    java.lang.String getGender() -> G
    com.google.android.gms.internal.fq dr() -> H
    java.lang.String getGivenName() -> I
    java.lang.String getHeight() -> J
    java.lang.String getId() -> K
    java.lang.String getImage() -> L
    com.google.android.gms.internal.fq ds() -> M
    double getLatitude() -> N
    com.google.android.gms.internal.fq dt() -> O
    double getLongitude() -> P
    java.lang.String getName() -> Q
    com.google.android.gms.internal.fq du() -> R
    java.util.List dv() -> S
    java.lang.String getPlayerType() -> T
    java.lang.String getPostOfficeBoxNumber() -> U
    java.lang.String getPostalCode() -> V
    java.lang.String getRatingValue() -> W
    com.google.android.gms.internal.fq dw() -> X
    java.lang.String getStartDate() -> Y
    java.lang.String getStreetAddress() -> Z
    java.lang.String getText() -> aa
    com.google.android.gms.internal.fq dx() -> ab
    java.lang.String getThumbnailUrl() -> ac
    java.lang.String getTickerSymbol() -> ad
    java.lang.String getType() -> ae
    java.lang.String getUrl() -> af
    java.lang.String getWidth() -> ag
    java.lang.String getWorstRating() -> ah
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object D(java.lang.String) -> a
    boolean E(java.lang.String) -> b
    boolean a(com.google.android.gms.internal.dw$a) -> a
    java.lang.Object b(com.google.android.gms.internal.dw$a) -> b
    com.google.android.gms.internal.fq dy() -> ai
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> a
com.google.android.gms.internal.fr -> com.google.android.gms.internal.jl:
    com.google.android.gms.internal.fq B(android.os.Parcel) -> a
    com.google.android.gms.internal.fq[] ag(int) -> a
    void a(com.google.android.gms.internal.fq,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.fs -> com.google.android.gms.internal.fs:
    com.google.android.gms.internal.ft CREATOR -> a
    java.util.HashMap rH -> b
    java.util.Set rI -> c
    int iM -> d
    java.lang.String sm -> e
    com.google.android.gms.internal.fq sG -> f
    java.lang.String sx -> g
    com.google.android.gms.internal.fq sH -> h
    java.lang.String sD -> i
    java.util.HashMap bp() -> b
    java.util.Set di() -> e
    int getVersionCode() -> f
    java.lang.String getId() -> g
    com.google.android.gms.internal.fq dz() -> h
    java.lang.String getStartDate() -> i
    com.google.android.gms.internal.fq dA() -> j
    java.lang.String getType() -> k
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object D(java.lang.String) -> a
    boolean E(java.lang.String) -> b
    boolean a(com.google.android.gms.internal.dw$a) -> a
    java.lang.Object b(com.google.android.gms.internal.dw$a) -> b
    com.google.android.gms.internal.fs dB() -> l
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> a
com.google.android.gms.internal.ft -> com.google.android.gms.internal.jm:
    com.google.android.gms.internal.fs C(android.os.Parcel) -> a
    com.google.android.gms.internal.fs[] ah(int) -> a
    void a(com.google.android.gms.internal.fs,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.fv -> com.google.android.gms.internal.fv:
    com.google.android.gms.internal.fw CREATOR -> a
    java.util.HashMap rH -> b
    java.util.Set rI -> c
    int iM -> d
    java.lang.String sJ -> e
    com.google.android.gms.internal.fv$a sK -> f
    java.lang.String sL -> g
    java.lang.String sM -> h
    int sN -> i
    com.google.android.gms.internal.fv$b sO -> j
    java.lang.String sP -> k
    java.lang.String ml -> l
    int dI -> m
    java.lang.String sm -> n
    com.google.android.gms.internal.fv$c sQ -> o
    boolean sR -> p
    java.lang.String sS -> q
    com.google.android.gms.internal.fv$d sT -> r
    java.lang.String sU -> s
    int sV -> t
    java.util.List sW -> u
    java.util.List sX -> v
    int sY -> w
    int sZ -> x
    java.lang.String ta -> y
    java.lang.String hN -> z
    java.util.List tb -> A
    boolean tc -> B
    java.util.HashMap bp() -> b
    java.util.Set di() -> e
    int getVersionCode() -> f
    java.lang.String getAboutMe() -> g
    com.google.android.gms.internal.fv$a dD() -> h
    java.lang.String getBirthday() -> i
    java.lang.String getBraggingRights() -> j
    int getCircledByCount() -> k
    com.google.android.gms.internal.fv$b dE() -> l
    java.lang.String getCurrentLocation() -> m
    java.lang.String getDisplayName() -> n
    int getGender() -> o
    java.lang.String getId() -> p
    com.google.android.gms.internal.fv$c dF() -> q
    boolean isPlusUser() -> r
    java.lang.String getLanguage() -> s
    com.google.android.gms.internal.fv$d dG() -> t
    java.lang.String getNickname() -> u
    int getObjectType() -> v
    java.util.List dH() -> w
    java.util.List dI() -> x
    int getPlusOneCount() -> y
    int getRelationshipStatus() -> z
    java.lang.String getTagline() -> A
    java.lang.String getUrl() -> B
    java.util.List dJ() -> C
    boolean isVerified() -> D
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object D(java.lang.String) -> a
    boolean E(java.lang.String) -> b
    boolean a(com.google.android.gms.internal.dw$a) -> a
    java.lang.Object b(com.google.android.gms.internal.dw$a) -> b
    com.google.android.gms.internal.fv e(byte[]) -> a
    com.google.android.gms.internal.fv dK() -> E
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> a
com.google.android.gms.internal.fv$a -> com.google.android.gms.internal.fv$a:
    com.google.android.gms.internal.fx CREATOR -> a
    java.util.HashMap rH -> b
    java.util.Set rI -> c
    int iM -> d
    int td -> e
    int te -> f
    java.util.HashMap bp() -> b
    java.util.Set di() -> e
    int getVersionCode() -> f
    int getMax() -> g
    int getMin() -> h
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object D(java.lang.String) -> a
    boolean E(java.lang.String) -> b
    boolean a(com.google.android.gms.internal.dw$a) -> a
    java.lang.Object b(com.google.android.gms.internal.dw$a) -> b
    com.google.android.gms.internal.fv$a dL() -> i
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> a
com.google.android.gms.internal.fv$b -> com.google.android.gms.internal.fv$b:
    com.google.android.gms.internal.fy CREATOR -> a
    java.util.HashMap rH -> b
    java.util.Set rI -> c
    int iM -> d
    com.google.android.gms.internal.fv$b$a tf -> e
    com.google.android.gms.internal.fv$b$b tg -> f
    int th -> g
    java.util.HashMap bp() -> b
    java.util.Set di() -> e
    int getVersionCode() -> f
    com.google.android.gms.internal.fv$b$a dM() -> g
    com.google.android.gms.internal.fv$b$b dN() -> h
    int getLayout() -> i
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object D(java.lang.String) -> a
    boolean E(java.lang.String) -> b
    boolean a(com.google.android.gms.internal.dw$a) -> a
    java.lang.Object b(com.google.android.gms.internal.dw$a) -> b
    com.google.android.gms.internal.fv$b dO() -> j
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> a
com.google.android.gms.internal.fv$b$a -> com.google.android.gms.internal.fv$b$a:
    com.google.android.gms.internal.fz CREATOR -> a
    java.util.HashMap rH -> b
    java.util.Set rI -> c
    int iM -> d
    int ti -> e
    int tj -> f
    java.util.HashMap bp() -> b
    java.util.Set di() -> e
    int getVersionCode() -> f
    int getLeftImageOffset() -> g
    int getTopImageOffset() -> h
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object D(java.lang.String) -> a
    boolean E(java.lang.String) -> b
    boolean a(com.google.android.gms.internal.dw$a) -> a
    java.lang.Object b(com.google.android.gms.internal.dw$a) -> b
    com.google.android.gms.internal.fv$b$a dP() -> i
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> a
com.google.android.gms.internal.fv$b$b -> com.google.android.gms.internal.fv$b$b:
    com.google.android.gms.internal.ga CREATOR -> a
    java.util.HashMap rH -> b
    java.util.Set rI -> c
    int iM -> d
    int dQ -> e
    java.lang.String hN -> f
    int dP -> g
    java.util.HashMap bp() -> b
    java.util.Set di() -> e
    int getVersionCode() -> f
    int getHeight() -> g
    java.lang.String getUrl() -> h
    int getWidth() -> i
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object D(java.lang.String) -> a
    boolean E(java.lang.String) -> b
    boolean a(com.google.android.gms.internal.dw$a) -> a
    java.lang.Object b(com.google.android.gms.internal.dw$a) -> b
    com.google.android.gms.internal.fv$b$b dQ() -> j
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> a
com.google.android.gms.internal.fv$c -> com.google.android.gms.internal.fv$c:
    com.google.android.gms.internal.gb CREATOR -> a
    java.util.HashMap rH -> b
    java.util.Set rI -> c
    int iM -> d
    java.lang.String hN -> e
    java.util.HashMap bp() -> b
    java.util.Set di() -> e
    int getVersionCode() -> f
    java.lang.String getUrl() -> g
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object D(java.lang.String) -> a
    boolean E(java.lang.String) -> b
    boolean a(com.google.android.gms.internal.dw$a) -> a
    java.lang.Object b(com.google.android.gms.internal.dw$a) -> b
    com.google.android.gms.internal.fv$c dR() -> h
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> a
com.google.android.gms.internal.fv$d -> com.google.android.gms.internal.fv$d:
    com.google.android.gms.internal.gc CREATOR -> a
    java.util.HashMap rH -> b
    java.util.Set rI -> c
    int iM -> d
    java.lang.String sh -> e
    java.lang.String tk -> f
    java.lang.String sk -> g
    java.lang.String tl -> h
    java.lang.String tm -> i
    java.lang.String tn -> j
    java.util.HashMap bp() -> b
    java.util.Set di() -> e
    int getVersionCode() -> f
    java.lang.String getFamilyName() -> g
    java.lang.String getFormatted() -> h
    java.lang.String getGivenName() -> i
    java.lang.String getHonorificPrefix() -> j
    java.lang.String getHonorificSuffix() -> k
    java.lang.String getMiddleName() -> l
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object D(java.lang.String) -> a
    boolean E(java.lang.String) -> b
    boolean a(com.google.android.gms.internal.dw$a) -> a
    java.lang.Object b(com.google.android.gms.internal.dw$a) -> b
    com.google.android.gms.internal.fv$d dS() -> m
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> a
com.google.android.gms.internal.fv$f -> com.google.android.gms.internal.fv$f:
    com.google.android.gms.internal.gd CREATOR -> a
    java.util.HashMap rH -> b
    java.util.Set rI -> c
    int iM -> d
    java.lang.String to -> e
    java.lang.String mo -> f
    java.lang.String sg -> g
    java.lang.String tp -> h
    java.lang.String mName -> i
    boolean tq -> j
    java.lang.String sx -> k
    java.lang.String qB -> l
    int jV -> m
    java.util.HashMap bp() -> b
    java.util.Set di() -> e
    int getVersionCode() -> f
    java.lang.String getDepartment() -> g
    java.lang.String getDescription() -> h
    java.lang.String getEndDate() -> i
    java.lang.String getLocation() -> j
    java.lang.String getName() -> k
    boolean isPrimary() -> l
    java.lang.String getStartDate() -> m
    java.lang.String getTitle() -> n
    int getType() -> o
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object D(java.lang.String) -> a
    boolean E(java.lang.String) -> b
    boolean a(com.google.android.gms.internal.dw$a) -> a
    java.lang.Object b(com.google.android.gms.internal.dw$a) -> b
    com.google.android.gms.internal.fv$f dT() -> p
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> a
com.google.android.gms.internal.fv$g -> com.google.android.gms.internal.fv$g:
    com.google.android.gms.internal.ge CREATOR -> a
    java.util.HashMap rH -> b
    java.util.Set rI -> c
    int iM -> d
    boolean tq -> e
    java.lang.String mValue -> f
    java.util.HashMap bp() -> b
    java.util.Set di() -> e
    int getVersionCode() -> f
    boolean isPrimary() -> g
    java.lang.String getValue() -> h
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object D(java.lang.String) -> a
    boolean E(java.lang.String) -> b
    boolean a(com.google.android.gms.internal.dw$a) -> a
    java.lang.Object b(com.google.android.gms.internal.dw$a) -> b
    com.google.android.gms.internal.fv$g dU() -> i
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> a
com.google.android.gms.internal.fv$h -> com.google.android.gms.internal.fv$h:
    com.google.android.gms.internal.gf CREATOR -> a
    java.util.HashMap rH -> b
    java.util.Set rI -> c
    int iM -> d
    java.lang.String tr -> e
    int ts -> f
    int jV -> g
    java.lang.String mValue -> h
    java.util.HashMap bp() -> b
    java.util.Set di() -> e
    int getVersionCode() -> f
    java.lang.String getLabel() -> g
    int dV() -> h
    int getType() -> i
    java.lang.String getValue() -> j
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object D(java.lang.String) -> a
    boolean E(java.lang.String) -> b
    boolean a(com.google.android.gms.internal.dw$a) -> a
    java.lang.Object b(com.google.android.gms.internal.dw$a) -> b
    com.google.android.gms.internal.fv$h dW() -> k
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> a
com.google.android.gms.internal.fw -> com.google.android.gms.internal.jn:
    com.google.android.gms.internal.fv D(android.os.Parcel) -> a
    com.google.android.gms.internal.fv[] ai(int) -> a
    void a(com.google.android.gms.internal.fv,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.fx -> com.google.android.gms.internal.jo:
    com.google.android.gms.internal.fv$a E(android.os.Parcel) -> a
    com.google.android.gms.internal.fv$a[] aj(int) -> a
    void a(com.google.android.gms.internal.fv$a,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.fy -> com.google.android.gms.internal.jp:
    com.google.android.gms.internal.fv$b F(android.os.Parcel) -> a
    com.google.android.gms.internal.fv$b[] ak(int) -> a
    void a(com.google.android.gms.internal.fv$b,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.fz -> com.google.android.gms.internal.jq:
    com.google.android.gms.internal.fv$b$a G(android.os.Parcel) -> a
    com.google.android.gms.internal.fv$b$a[] al(int) -> a
    void a(com.google.android.gms.internal.fv$b$a,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.g -> com.google.android.gms.internal.jr:
    com.google.android.gms.internal.g a(java.lang.String,android.content.Context) -> a
    com.google.android.gms.internal.g$a f(android.content.Context) -> e
    void b(android.content.Context) -> b
com.google.android.gms.internal.g$a -> com.google.android.gms.internal.js:
    java.lang.String dt -> b
    boolean du -> c
    com.google.android.gms.internal.g dv -> a
    java.lang.String getId() -> a
    boolean isLimitAdTrackingEnabled() -> b
com.google.android.gms.internal.ga -> com.google.android.gms.internal.jt:
    com.google.android.gms.internal.fv$b$b H(android.os.Parcel) -> a
    com.google.android.gms.internal.fv$b$b[] am(int) -> a
    void a(com.google.android.gms.internal.fv$b$b,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.gb -> com.google.android.gms.internal.ju:
    com.google.android.gms.internal.fv$c I(android.os.Parcel) -> a
    com.google.android.gms.internal.fv$c[] an(int) -> a
    void a(com.google.android.gms.internal.fv$c,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.gc -> com.google.android.gms.internal.jv:
    com.google.android.gms.internal.fv$d J(android.os.Parcel) -> a
    com.google.android.gms.internal.fv$d[] ao(int) -> a
    void a(com.google.android.gms.internal.fv$d,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.gd -> com.google.android.gms.internal.jw:
    com.google.android.gms.internal.fv$f K(android.os.Parcel) -> a
    com.google.android.gms.internal.fv$f[] ap(int) -> a
    void a(com.google.android.gms.internal.fv$f,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.ge -> com.google.android.gms.internal.jx:
    com.google.android.gms.internal.fv$g L(android.os.Parcel) -> a
    com.google.android.gms.internal.fv$g[] aq(int) -> a
    void a(com.google.android.gms.internal.fv$g,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.gf -> com.google.android.gms.internal.jy:
    com.google.android.gms.internal.fv$h M(android.os.Parcel) -> a
    com.google.android.gms.internal.fv$h[] ar(int) -> a
    void a(com.google.android.gms.internal.fv$h,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.gk -> com.google.android.gms.internal.jz:
    byte[] uu -> a
    int uv -> b
    int uw -> c
    void f(byte[]) -> a
com.google.android.gms.internal.gl -> com.google.android.gms.internal.ka:
    byte[] buffer -> a
    int ux -> b
    int position -> c
    com.google.android.gms.internal.gl g(byte[]) -> a
    com.google.android.gms.internal.gl a(byte[],int,int) -> a
    void b(int,long) -> a
    void b(int,java.lang.String) -> a
    void i(long) -> a
    void ab(java.lang.String) -> a
    int ec() -> a
    void b(byte) -> a
    void aD(int) -> a
    void h(byte[]) -> b
    void b(byte[],int,int) -> b
    void d(int,int) -> a
    void aE(int) -> b
    void j(long) -> b
com.google.android.gms.internal.gl$a -> com.google.android.gms.internal.kb:
com.google.android.gms.internal.gm -> com.google.android.gms.internal.kc:
    int uy -> a
    int uz -> b
    int uA -> c
    int uB -> d
    int[] uC -> e
    long[] uD -> f
    float[] uE -> g
    double[] uF -> h
    boolean[] uG -> i
    java.lang.String[] uH -> j
    byte[][] uI -> k
    byte[] uJ -> l
    int e(int,int) -> a
com.google.android.gms.internal.h -> com.google.android.gms.internal.kd:
    java.lang.String dw -> a
    java.lang.String dx -> b
    java.lang.String[] dy -> c
    com.google.android.gms.internal.d dz -> d
    com.google.android.gms.internal.c dA -> e
    boolean a(android.net.Uri) -> a
    com.google.android.gms.internal.d g() -> a
    void a(android.view.MotionEvent) -> a
    android.net.Uri a(android.net.Uri,android.content.Context) -> a
    android.net.Uri a(android.net.Uri,java.lang.String,java.lang.String) -> a
    android.net.Uri a(android.net.Uri,android.content.Context,java.lang.String,boolean) -> a
com.google.android.gms.internal.i -> com.google.android.gms.internal.ke:
com.google.android.gms.internal.j -> com.google.android.gms.internal.kf:
    java.lang.String a(byte[],boolean) -> a
    byte[] a(java.lang.String,boolean) -> a
com.google.android.gms.internal.k -> com.google.android.gms.internal.kg:
    void reset() -> a
    void b(int,long) -> a
    void b(int,java.lang.String) -> a
    byte[] h() -> b
com.google.android.gms.internal.l -> com.google.android.gms.internal.kh:
    com.google.android.gms.internal.j di -> a
    java.security.SecureRandom dB -> b
    void a(byte[]) -> a
    byte[] b(java.lang.String) -> a
    byte[] c(byte[],java.lang.String) -> a
com.google.android.gms.internal.l$a -> com.google.android.gms.internal.ki:
    com.google.android.gms.internal.l dC -> a
com.google.android.gms.internal.m -> com.google.android.gms.internal.kj:
    com.google.android.gms.internal.gl dD -> a
    byte[] dE -> b
    int dF -> c
    void reset() -> a
    void b(int,long) -> a
    void b(int,java.lang.String) -> a
    byte[] h() -> b
com.google.android.gms.internal.n -> com.google.android.gms.internal.kk:
    java.lang.String getKey() -> a
    java.lang.String i() -> b
    java.lang.String j() -> c
    java.lang.String k() -> d
    java.lang.String l() -> e
    java.lang.String m() -> f
    java.lang.String n() -> g
    java.lang.String o() -> h
    java.lang.String p() -> i
    java.lang.String q() -> j
    java.lang.String r() -> k
    java.lang.String s() -> l
    java.lang.String t() -> m
    java.lang.String u() -> n
com.google.android.gms.internal.p -> com.google.android.gms.internal.kl:
    java.lang.String getId() -> a
    boolean a(boolean) -> a
    java.lang.String e(java.lang.String) -> a
    void b(java.lang.String,boolean) -> a
com.google.android.gms.internal.p$a -> com.google.android.gms.internal.km:
    com.google.android.gms.internal.p b(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.p$a$a -> com.google.android.gms.internal.kn:
    android.os.IBinder dG -> a
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getId() -> a
    boolean a(boolean) -> a
    java.lang.String e(java.lang.String) -> a
    void b(java.lang.String,boolean) -> a
com.google.android.gms.internal.q -> com.google.android.gms.internal.ko:
    void y() -> p
com.google.android.gms.internal.r -> com.google.android.gms.internal.kp:
    com.google.android.gms.internal.aw dZ -> a
    com.google.android.gms.internal.r$a ea -> b
    com.google.android.gms.internal.s eb -> c
    void destroy() -> b
    com.google.android.gms.dynamic.b z() -> a
    boolean isReady() -> c
    boolean a(com.google.android.gms.internal.v) -> a
    void a(com.google.android.gms.internal.ce) -> a
    void y() -> p
    void A() -> o
    void B() -> m
    void C() -> n
    void a(java.lang.String,java.lang.String) -> a
    void D() -> h
    void E() -> i
    void F() -> j
    void G() -> k
    void H() -> l
    void pause() -> d
    void resume() -> e
    void b(com.google.android.gms.internal.v) -> b
    void a(com.google.android.gms.internal.ab) -> a
    void a(com.google.android.gms.internal.ae) -> a
    void showInterstitial() -> f
    void stopLoading() -> g
    void b(android.view.View) -> a
    void I() -> q
    void a(int) -> a
    void J() -> r
    void K() -> s
    void L() -> t
    boolean M() -> u
    com.google.android.gms.internal.bu$a c(com.google.android.gms.internal.v) -> c
    void N() -> v
    void b(boolean) -> a
    void O() -> w
    boolean b(com.google.android.gms.internal.ce) -> b
com.google.android.gms.internal.r$a -> com.google.android.gms.internal.kq:
    android.widget.ViewSwitcher ec -> a
    com.google.android.gms.internal.x ed -> b
    java.lang.String adUnitId -> c
    android.content.Context ee -> d
    com.google.android.gms.internal.h ef -> e
    com.google.android.gms.internal.co eg -> f
    com.google.android.gms.internal.ab eh -> g
    com.google.android.gms.internal.cg ei -> h
    com.google.android.gms.internal.ce ej -> i
    com.google.android.gms.internal.ae ek -> j
com.google.android.gms.internal.s -> com.google.android.gms.internal.kr:
    java.lang.Runnable el -> a
    com.google.android.gms.internal.v em -> b
    boolean en -> c
    void cancel() -> a
    void d(com.google.android.gms.internal.v) -> a
    void a(com.google.android.gms.internal.v,long) -> a
    boolean a(com.google.android.gms.internal.s,boolean) -> a
    com.google.android.gms.internal.v a(com.google.android.gms.internal.s) -> a
com.google.android.gms.internal.s$1 -> com.google.android.gms.internal.ks:
    java.lang.ref.WeakReference eo -> c
    com.google.android.gms.internal.r ep -> a
    com.google.android.gms.internal.s eq -> b
    void run() -> run
com.google.android.gms.internal.t -> com.google.android.gms.internal.kt:
    com.google.android.gms.ads.AdListener dT -> a
    void onAdClosed() -> a
    void onAdFailedToLoad(int) -> a
    void onAdLeftApplication() -> b
    void onAdLoaded() -> c
    void onAdOpened() -> d
com.google.android.gms.internal.u -> com.google.android.gms.internal.ku:
    com.google.android.gms.internal.u er -> a
    com.google.android.gms.internal.ac a(android.content.Context,com.google.android.gms.internal.x,java.lang.String,com.google.android.gms.internal.av) -> a
    com.google.android.gms.internal.ac b(android.content.Context,com.google.android.gms.internal.x,java.lang.String,com.google.android.gms.internal.av) -> b
    com.google.android.gms.internal.ad c(android.os.IBinder) -> b
    java.lang.Object d(android.os.IBinder) -> a
com.google.android.gms.internal.v -> com.google.android.gms.internal.v:
    com.google.android.gms.internal.w CREATOR -> a
    int versionCode -> b
    long es -> c
    android.os.Bundle extras -> d
    int et -> e
    java.util.List eu -> f
    boolean ev -> g
    int tagForChildDirectedTreatment -> h
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.w -> com.google.android.gms.internal.kv:
    com.google.android.gms.internal.v a(android.os.Parcel) -> a
    com.google.android.gms.internal.v[] b(int) -> a
    void a(com.google.android.gms.internal.v,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.x -> com.google.android.gms.internal.x:
    com.google.android.gms.internal.y CREATOR -> a
    int versionCode -> b
    java.lang.String ew -> c
    int height -> d
    int heightPixels -> e
    boolean ex -> f
    int width -> g
    int widthPixels -> h
    int a(android.util.DisplayMetrics) -> a
    int b(android.util.DisplayMetrics) -> b
    int c(android.util.DisplayMetrics) -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.y -> com.google.android.gms.internal.kw:
    com.google.android.gms.internal.x b(android.os.Parcel) -> a
    com.google.android.gms.internal.x[] c(int) -> a
    void a(com.google.android.gms.internal.x,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.z -> com.google.android.gms.internal.kx:
    com.google.android.gms.ads.a dW -> a
    void a(java.lang.String,java.lang.String) -> a
com.google.android.gms.location.ActivityRecognitionResult -> com.google.android.gms.location.ActivityRecognitionResult:
    com.google.android.gms.location.ActivityRecognitionResultCreator CREATOR -> a
    int iM -> e
    java.util.List ov -> b
    long ow -> c
    long ox -> d
    java.lang.String toString() -> toString
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.location.ActivityRecognitionResultCreator -> com.google.android.gms.location.a:
    com.google.android.gms.location.ActivityRecognitionResult createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.location.ActivityRecognitionResult[] newArray(int) -> a
    void a(com.google.android.gms.location.ActivityRecognitionResult,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.location.DetectedActivity -> com.google.android.gms.location.DetectedActivity:
    com.google.android.gms.location.DetectedActivityCreator CREATOR -> a
    int iM -> d
    int oy -> b
    int oz -> c
    int getType() -> a
    int W(int) -> a
    int getVersionCode() -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
com.google.android.gms.location.DetectedActivityCreator -> com.google.android.gms.location.b:
    com.google.android.gms.location.DetectedActivity createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.location.DetectedActivity[] newArray(int) -> a
    void a(com.google.android.gms.location.DetectedActivity,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.location.LocationRequest -> com.google.android.gms.location.LocationRequest:
    int iM -> i
    int mPriority -> a
    long oJ -> b
    long oK -> c
    boolean oL -> d
    long oC -> e
    int oM -> f
    float oN -> g
    com.google.android.gms.location.LocationRequestCreator CREATOR -> h
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String Y(int) -> a
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int getVersionCode() -> a
com.google.android.gms.location.LocationRequestCreator -> com.google.android.gms.location.c:
    com.google.android.gms.location.LocationRequest createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.location.LocationRequest[] newArray(int) -> a
    void a(com.google.android.gms.location.LocationRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.GoogleMapOptions -> com.google.android.gms.maps.GoogleMapOptions:
    com.google.android.gms.maps.GoogleMapOptionsCreator CREATOR -> a
    int iM -> b
    java.lang.Boolean px -> c
    java.lang.Boolean py -> d
    int pz -> e
    com.google.android.gms.maps.model.CameraPosition pA -> f
    java.lang.Boolean pB -> g
    java.lang.Boolean pC -> h
    java.lang.Boolean pD -> i
    java.lang.Boolean pE -> j
    java.lang.Boolean pF -> k
    java.lang.Boolean pG -> l
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int getVersionCode() -> a
    byte cv() -> b
    byte cw() -> c
    byte cx() -> d
    byte cy() -> e
    byte cz() -> f
    byte cA() -> g
    byte cB() -> h
    byte cC() -> i
    int getMapType() -> j
    com.google.android.gms.maps.model.CameraPosition getCamera() -> k
com.google.android.gms.maps.GoogleMapOptionsCreator -> com.google.android.gms.maps.a:
    com.google.android.gms.maps.GoogleMapOptions createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.maps.GoogleMapOptions[] newArray(int) -> a
    void a(com.google.android.gms.maps.GoogleMapOptions,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.a -> com.google.android.gms.maps.b:
    void a(com.google.android.gms.maps.GoogleMapOptions,android.os.Parcel,int) -> a
com.google.android.gms.maps.internal.a -> com.google.android.gms.maps.a.a:
    java.lang.Boolean a(byte) -> a
    byte b(java.lang.Boolean) -> a
com.google.android.gms.maps.internal.r -> com.google.android.gms.maps.a.b:
    boolean pY -> a
    boolean cK() -> a
com.google.android.gms.maps.model.BitmapDescriptor -> com.google.android.gms.maps.model.a:
    com.google.android.gms.dynamic.b pd -> a
    com.google.android.gms.dynamic.b cs() -> a
com.google.android.gms.maps.model.CameraPosition -> com.google.android.gms.maps.model.CameraPosition:
    com.google.android.gms.maps.model.CameraPositionCreator CREATOR -> a
    int iM -> f
    com.google.android.gms.maps.model.LatLng target -> b
    float zoom -> c
    float tilt -> d
    float bearing -> e
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int hashCode() -> hashCode
    int getVersionCode() -> a
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.android.gms.maps.model.CameraPositionCreator -> com.google.android.gms.maps.model.b:
    com.google.android.gms.maps.model.CameraPosition createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.maps.model.CameraPosition[] newArray(int) -> a
    void a(com.google.android.gms.maps.model.CameraPosition,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.CircleOptions -> com.google.android.gms.maps.model.CircleOptions:
    com.google.android.gms.maps.model.CircleOptionsCreator CREATOR -> a
    int iM -> b
    com.google.android.gms.maps.model.LatLng qf -> c
    double qg -> d
    float qh -> e
    int qi -> f
    int qj -> g
    float qk -> h
    boolean ql -> i
    int getVersionCode() -> a
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    com.google.android.gms.maps.model.LatLng getCenter() -> b
    double getRadius() -> c
    float getStrokeWidth() -> d
    int getStrokeColor() -> e
    int getFillColor() -> f
    float getZIndex() -> g
    boolean isVisible() -> h
com.google.android.gms.maps.model.CircleOptionsCreator -> com.google.android.gms.maps.model.c:
    com.google.android.gms.maps.model.CircleOptions createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.maps.model.CircleOptions[] newArray(int) -> a
    void a(com.google.android.gms.maps.model.CircleOptions,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.GroundOverlayOptions -> com.google.android.gms.maps.model.GroundOverlayOptions:
    com.google.android.gms.maps.model.GroundOverlayOptionsCreator CREATOR -> a
    int iM -> b
    com.google.android.gms.maps.model.BitmapDescriptor qn -> c
    com.google.android.gms.maps.model.LatLng qo -> d
    float qp -> e
    float qq -> f
    com.google.android.gms.maps.model.LatLngBounds qr -> g
    float qd -> h
    float qk -> i
    boolean ql -> j
    float qs -> k
    float qt -> l
    float qu -> m
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    android.os.IBinder cM() -> a
    int getVersionCode() -> b
    com.google.android.gms.maps.model.LatLng getLocation() -> c
    float getWidth() -> d
    float getHeight() -> e
    com.google.android.gms.maps.model.LatLngBounds getBounds() -> f
    float getBearing() -> g
    float getZIndex() -> h
    float getTransparency() -> i
    float getAnchorU() -> j
    float getAnchorV() -> k
    boolean isVisible() -> l
com.google.android.gms.maps.model.GroundOverlayOptionsCreator -> com.google.android.gms.maps.model.d:
    com.google.android.gms.maps.model.GroundOverlayOptions createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.maps.model.GroundOverlayOptions[] newArray(int) -> a
    void a(com.google.android.gms.maps.model.GroundOverlayOptions,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.LatLng -> com.google.android.gms.maps.model.LatLng:
    com.google.android.gms.maps.model.LatLngCreator CREATOR -> a
    int iM -> d
    double latitude -> b
    double longitude -> c
    int getVersionCode() -> a
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.android.gms.maps.model.LatLngBounds -> com.google.android.gms.maps.model.LatLngBounds:
    com.google.android.gms.maps.model.LatLngBoundsCreator CREATOR -> a
    int iM -> d
    com.google.android.gms.maps.model.LatLng southwest -> b
    com.google.android.gms.maps.model.LatLng northeast -> c
    int getVersionCode() -> a
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.android.gms.maps.model.LatLngBoundsCreator -> com.google.android.gms.maps.model.e:
    com.google.android.gms.maps.model.LatLngBounds createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.maps.model.LatLngBounds[] newArray(int) -> a
    void a(com.google.android.gms.maps.model.LatLngBounds,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.LatLngCreator -> com.google.android.gms.maps.model.f:
    com.google.android.gms.maps.model.LatLng createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.maps.model.LatLng[] newArray(int) -> a
    void a(com.google.android.gms.maps.model.LatLng,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.MarkerOptions -> com.google.android.gms.maps.model.MarkerOptions:
    com.google.android.gms.maps.model.MarkerOptionsCreator CREATOR -> a
    int iM -> b
    com.google.android.gms.maps.model.LatLng qA -> c
    java.lang.String qB -> d
    java.lang.String qC -> e
    com.google.android.gms.maps.model.BitmapDescriptor qD -> f
    float qt -> g
    float qu -> h
    boolean qE -> i
    boolean ql -> j
    boolean qF -> k
    float qG -> l
    float qH -> m
    float qI -> n
    float mAlpha -> o
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int getVersionCode() -> a
    android.os.IBinder cN() -> b
    com.google.android.gms.maps.model.LatLng getPosition() -> c
    java.lang.String getTitle() -> d
    java.lang.String getSnippet() -> e
    float getAnchorU() -> f
    float getAnchorV() -> g
    boolean isDraggable() -> h
    boolean isVisible() -> i
    boolean isFlat() -> j
    float getRotation() -> k
    float getInfoWindowAnchorU() -> l
    float getInfoWindowAnchorV() -> m
    float getAlpha() -> n
com.google.android.gms.maps.model.MarkerOptionsCreator -> com.google.android.gms.maps.model.g:
    com.google.android.gms.maps.model.MarkerOptions createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.maps.model.MarkerOptions[] newArray(int) -> a
    void a(com.google.android.gms.maps.model.MarkerOptions,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.PolygonOptions -> com.google.android.gms.maps.model.PolygonOptions:
    com.google.android.gms.maps.model.PolygonOptionsCreator CREATOR -> a
    int iM -> b
    java.util.List qK -> c
    java.util.List qL -> d
    float qh -> e
    int qi -> f
    int qj -> g
    float qk -> h
    boolean ql -> i
    boolean qM -> j
    int getVersionCode() -> a
    java.util.List cO() -> b
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    java.util.List getPoints() -> c
    float getStrokeWidth() -> d
    int getStrokeColor() -> e
    int getFillColor() -> f
    float getZIndex() -> g
    boolean isVisible() -> h
    boolean isGeodesic() -> i
com.google.android.gms.maps.model.PolygonOptionsCreator -> com.google.android.gms.maps.model.h:
    com.google.android.gms.maps.model.PolygonOptions createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.maps.model.PolygonOptions[] newArray(int) -> a
    void a(com.google.android.gms.maps.model.PolygonOptions,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.PolylineOptions -> com.google.android.gms.maps.model.PolylineOptions:
    com.google.android.gms.maps.model.PolylineOptionsCreator CREATOR -> a
    int iM -> b
    java.util.List qK -> c
    float qp -> d
    int jc -> e
    float qk -> f
    boolean ql -> g
    boolean qM -> h
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int getVersionCode() -> a
    java.util.List getPoints() -> b
    float getWidth() -> c
    int getColor() -> d
    float getZIndex() -> e
    boolean isVisible() -> f
    boolean isGeodesic() -> g
com.google.android.gms.maps.model.PolylineOptionsCreator -> com.google.android.gms.maps.model.i:
    com.google.android.gms.maps.model.PolylineOptions createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.maps.model.PolylineOptions[] newArray(int) -> a
    void a(com.google.android.gms.maps.model.PolylineOptions,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.Tile -> com.google.android.gms.maps.model.Tile:
    com.google.android.gms.maps.model.TileCreator CREATOR -> a
    int iM -> e
    int width -> b
    int height -> c
    byte[] data -> d
    int getVersionCode() -> a
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
com.google.android.gms.maps.model.TileCreator -> com.google.android.gms.maps.model.j:
    com.google.android.gms.maps.model.Tile createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.maps.model.Tile[] newArray(int) -> a
    void a(com.google.android.gms.maps.model.Tile,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.TileOverlayOptions -> com.google.android.gms.maps.model.TileOverlayOptions:
    com.google.android.gms.maps.model.TileOverlayOptionsCreator CREATOR -> a
    int iM -> b
    com.google.android.gms.maps.model.internal.g qP -> c
    com.google.android.gms.maps.model.TileProvider qQ -> d
    boolean ql -> e
    float qk -> f
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int getVersionCode() -> a
    android.os.IBinder cP() -> b
    float getZIndex() -> c
    boolean isVisible() -> d
    com.google.android.gms.maps.model.internal.g a(com.google.android.gms.maps.model.TileOverlayOptions) -> a
com.google.android.gms.maps.model.TileOverlayOptions$1 -> com.google.android.gms.maps.model.k:
    com.google.android.gms.maps.model.internal.g qR -> c
    com.google.android.gms.maps.model.TileOverlayOptions qS -> a
com.google.android.gms.maps.model.TileOverlayOptionsCreator -> com.google.android.gms.maps.model.l:
    com.google.android.gms.maps.model.TileOverlayOptions createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.maps.model.TileOverlayOptions[] newArray(int) -> a
    void a(com.google.android.gms.maps.model.TileOverlayOptions,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.TileProvider -> com.google.android.gms.maps.model.m:
    com.google.android.gms.maps.model.Tile NO_TILE -> b
com.google.android.gms.maps.model.VisibleRegion -> com.google.android.gms.maps.model.VisibleRegion:
    com.google.android.gms.maps.model.VisibleRegionCreator CREATOR -> a
    int iM -> g
    com.google.android.gms.maps.model.LatLng nearLeft -> b
    com.google.android.gms.maps.model.LatLng nearRight -> c
    com.google.android.gms.maps.model.LatLng farLeft -> d
    com.google.android.gms.maps.model.LatLng farRight -> e
    com.google.android.gms.maps.model.LatLngBounds latLngBounds -> f
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int hashCode() -> hashCode
    int getVersionCode() -> a
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.android.gms.maps.model.VisibleRegionCreator -> com.google.android.gms.maps.model.n:
    com.google.android.gms.maps.model.VisibleRegion createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.maps.model.VisibleRegion[] newArray(int) -> a
    void a(com.google.android.gms.maps.model.VisibleRegion,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.a -> com.google.android.gms.maps.model.o:
    void a(com.google.android.gms.maps.model.CameraPosition,android.os.Parcel,int) -> a
com.google.android.gms.maps.model.b -> com.google.android.gms.maps.model.p:
    void a(com.google.android.gms.maps.model.CircleOptions,android.os.Parcel,int) -> a
com.google.android.gms.maps.model.c -> com.google.android.gms.maps.model.q:
    void a(com.google.android.gms.maps.model.GroundOverlayOptions,android.os.Parcel,int) -> a
com.google.android.gms.maps.model.d -> com.google.android.gms.maps.model.r:
    void a(com.google.android.gms.maps.model.LatLngBounds,android.os.Parcel,int) -> a
com.google.android.gms.maps.model.e -> com.google.android.gms.maps.model.s:
    void a(com.google.android.gms.maps.model.LatLng,android.os.Parcel,int) -> a
com.google.android.gms.maps.model.f -> com.google.android.gms.maps.model.t:
    void a(com.google.android.gms.maps.model.MarkerOptions,android.os.Parcel,int) -> a
com.google.android.gms.maps.model.g -> com.google.android.gms.maps.model.u:
    void a(com.google.android.gms.maps.model.PolygonOptions,android.os.Parcel,int) -> a
com.google.android.gms.maps.model.h -> com.google.android.gms.maps.model.v:
    void a(com.google.android.gms.maps.model.PolylineOptions,android.os.Parcel,int) -> a
com.google.android.gms.maps.model.i -> com.google.android.gms.maps.model.w:
    void a(com.google.android.gms.maps.model.Tile,android.os.Parcel,int) -> a
com.google.android.gms.maps.model.internal.g -> com.google.android.gms.maps.model.a.a:
    com.google.android.gms.maps.model.Tile getTile(int,int,int) -> a
com.google.android.gms.maps.model.internal.g$a -> com.google.android.gms.maps.model.a.b:
    com.google.android.gms.maps.model.internal.g aj(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.model.internal.g$a$a -> com.google.android.gms.maps.model.a.c:
    android.os.IBinder dG -> a
    android.os.IBinder asBinder() -> asBinder
    com.google.android.gms.maps.model.Tile getTile(int,int,int) -> a
com.google.android.gms.maps.model.j -> com.google.android.gms.maps.model.x:
    void a(com.google.android.gms.maps.model.TileOverlayOptions,android.os.Parcel,int) -> a
com.google.android.gms.maps.model.k -> com.google.android.gms.maps.model.y:
    void a(com.google.android.gms.maps.model.VisibleRegion,android.os.Parcel,int) -> a
com.google.android.gms.plus.PlusClient -> com.google.android.gms.c.a:
    com.google.android.gms.internal.fl rb -> a
    void clearDefaultAccount() -> a
    void connect() -> b
    boolean isConnected() -> c
    void disconnect() -> d
com.google.android.gms.plus.PlusClient$Builder -> com.google.android.gms.c.b:
    android.content.Context mContext -> a
    com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks rc -> b
    com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener ir -> c
    com.google.android.gms.internal.fo rd -> d
    com.google.android.gms.plus.PlusClient$Builder setScopes(java.lang.String[]) -> a
    com.google.android.gms.plus.PlusClient build() -> a
com.google.android.gms.plus.model.moments.ItemScope -> com.google.android.gms.c.a.a.a:
com.google.android.gms.plus.model.moments.Moment -> com.google.android.gms.c.a.a.b:
com.google.android.gms.plus.model.people.Person -> com.google.android.gms.c.a.b.a:
com.google.android.gms.plus.model.people.Person$AgeRange -> com.google.android.gms.c.a.b.b:
com.google.android.gms.plus.model.people.Person$Cover -> com.google.android.gms.c.a.b.c:
com.google.android.gms.plus.model.people.Person$Cover$CoverInfo -> com.google.android.gms.c.a.b.d:
com.google.android.gms.plus.model.people.Person$Cover$CoverPhoto -> com.google.android.gms.c.a.b.e:
com.google.android.gms.plus.model.people.Person$Image -> com.google.android.gms.c.a.b.f:
com.google.android.gms.plus.model.people.Person$Name -> com.google.android.gms.c.a.b.g:
com.google.android.gms.plus.model.people.Person$Organizations -> com.google.android.gms.c.a.b.h:
com.google.android.gms.plus.model.people.Person$PlacesLived -> com.google.android.gms.c.a.b.i:
com.google.android.gms.plus.model.people.Person$Urls -> com.google.android.gms.c.a.b.j:
com.google.android.gms.wallet.Address -> com.google.android.gms.wallet.Address:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int iM -> l
    java.lang.String name -> a
    java.lang.String tu -> b
    java.lang.String tv -> c
    java.lang.String tw -> d
    java.lang.String hl -> e
    java.lang.String tx -> f
    java.lang.String ty -> g
    java.lang.String tz -> h
    java.lang.String tA -> i
    boolean tB -> j
    java.lang.String tC -> k
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.Cart -> com.google.android.gms.wallet.Cart:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int iM -> d
    java.lang.String tD -> a
    java.lang.String tE -> b
    java.util.ArrayList tF -> c
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.FullWallet -> com.google.android.gms.wallet.FullWallet:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int iM -> h
    java.lang.String tH -> a
    java.lang.String tI -> b
    com.google.android.gms.wallet.ProxyCard tJ -> c
    java.lang.String tK -> d
    com.google.android.gms.wallet.Address tL -> e
    com.google.android.gms.wallet.Address tM -> f
    java.lang.String[] tN -> g
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.FullWalletRequest -> com.google.android.gms.wallet.FullWalletRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int iM -> d
    java.lang.String tH -> a
    java.lang.String tI -> b
    com.google.android.gms.wallet.Cart tO -> c
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.LineItem -> com.google.android.gms.wallet.LineItem:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int iM -> g
    java.lang.String description -> a
    java.lang.String tQ -> b
    java.lang.String tR -> c
    java.lang.String tD -> d
    int tS -> e
    java.lang.String tE -> f
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.LoyaltyWalletObject -> com.google.android.gms.wallet.LoyaltyWalletObject:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int iM -> f
    java.lang.String tU -> a
    java.lang.String tV -> b
    java.lang.String tW -> c
    java.lang.String tX -> d
    java.lang.String tY -> e
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.MaskedWallet -> com.google.android.gms.wallet.MaskedWallet:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int iM -> i
    java.lang.String tH -> a
    java.lang.String tI -> b
    java.lang.String[] tN -> c
    java.lang.String tK -> d
    com.google.android.gms.wallet.Address tL -> e
    com.google.android.gms.wallet.Address tM -> f
    com.google.android.gms.wallet.LoyaltyWalletObject[] tZ -> g
    com.google.android.gms.wallet.OfferWalletObject[] ua -> h
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.MaskedWalletRequest -> com.google.android.gms.wallet.MaskedWalletRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int iM -> k
    java.lang.String tI -> a
    boolean ub -> b
    boolean uc -> c
    boolean ud -> d
    java.lang.String ue -> e
    java.lang.String tE -> f
    java.lang.String uf -> g
    com.google.android.gms.wallet.Cart tO -> h
    boolean ug -> i
    boolean uh -> j
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.NotifyTransactionStatusRequest -> com.google.android.gms.wallet.NotifyTransactionStatusRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int iM -> a
    java.lang.String tH -> b
    int status -> c
    java.lang.String uj -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.OfferWalletObject -> com.google.android.gms.wallet.OfferWalletObject:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int iM -> c
    java.lang.String tU -> a
    java.lang.String ul -> b
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.ProxyCard -> com.google.android.gms.wallet.ProxyCard:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int iM -> e
    java.lang.String um -> a
    java.lang.String un -> b
    int uo -> c
    int up -> d
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.a -> com.google.android.gms.wallet.a:
    com.google.android.gms.wallet.Address N(android.os.Parcel) -> a
    com.google.android.gms.wallet.Address[] as(int) -> a
    void a(com.google.android.gms.wallet.Address,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.b -> com.google.android.gms.wallet.b:
    com.google.android.gms.wallet.Cart O(android.os.Parcel) -> a
    com.google.android.gms.wallet.Cart[] at(int) -> a
    void a(com.google.android.gms.wallet.Cart,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.c -> com.google.android.gms.wallet.c:
    com.google.android.gms.wallet.FullWallet P(android.os.Parcel) -> a
    com.google.android.gms.wallet.FullWallet[] au(int) -> a
    void a(com.google.android.gms.wallet.FullWallet,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.d -> com.google.android.gms.wallet.d:
    com.google.android.gms.wallet.FullWalletRequest Q(android.os.Parcel) -> a
    com.google.android.gms.wallet.FullWalletRequest[] av(int) -> a
    void a(com.google.android.gms.wallet.FullWalletRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.e -> com.google.android.gms.wallet.e:
    com.google.android.gms.wallet.LineItem R(android.os.Parcel) -> a
    com.google.android.gms.wallet.LineItem[] aw(int) -> a
    void a(com.google.android.gms.wallet.LineItem,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.f -> com.google.android.gms.wallet.f:
    com.google.android.gms.wallet.LoyaltyWalletObject S(android.os.Parcel) -> a
    com.google.android.gms.wallet.LoyaltyWalletObject[] ax(int) -> a
    void a(com.google.android.gms.wallet.LoyaltyWalletObject,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.g -> com.google.android.gms.wallet.g:
    com.google.android.gms.wallet.MaskedWallet T(android.os.Parcel) -> a
    com.google.android.gms.wallet.MaskedWallet[] ay(int) -> a
    void a(com.google.android.gms.wallet.MaskedWallet,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.h -> com.google.android.gms.wallet.h:
    com.google.android.gms.wallet.MaskedWalletRequest U(android.os.Parcel) -> a
    com.google.android.gms.wallet.MaskedWalletRequest[] az(int) -> a
    void a(com.google.android.gms.wallet.MaskedWalletRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.i -> com.google.android.gms.wallet.i:
    com.google.android.gms.wallet.NotifyTransactionStatusRequest V(android.os.Parcel) -> a
    com.google.android.gms.wallet.NotifyTransactionStatusRequest[] aA(int) -> a
    void a(com.google.android.gms.wallet.NotifyTransactionStatusRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.j -> com.google.android.gms.wallet.j:
    com.google.android.gms.wallet.OfferWalletObject W(android.os.Parcel) -> a
    com.google.android.gms.wallet.OfferWalletObject[] aB(int) -> a
    void a(com.google.android.gms.wallet.OfferWalletObject,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.k -> com.google.android.gms.wallet.k:
    com.google.android.gms.wallet.ProxyCard X(android.os.Parcel) -> a
    com.google.android.gms.wallet.ProxyCard[] aC(int) -> a
    void a(com.google.android.gms.wallet.ProxyCard,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.gson.ExclusionStrategy -> com.google.a.a:
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> a
    boolean shouldSkipClass(java.lang.Class) -> a
com.google.gson.FieldAttributes -> com.google.a.b:
    java.lang.reflect.Field field -> a
com.google.gson.FieldNamingPolicy -> com.google.a.c:
    com.google.gson.FieldNamingPolicy IDENTITY -> a
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE -> b
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES -> c
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES -> d
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DASHES -> e
    com.google.gson.FieldNamingPolicy[] $VALUES -> f
    com.google.gson.FieldNamingPolicy[] values() -> values
    com.google.gson.FieldNamingPolicy valueOf(java.lang.String) -> valueOf
    java.lang.String separateCamelCase(java.lang.String,java.lang.String) -> b
    java.lang.String upperCaseFirstLetter(java.lang.String) -> b
    java.lang.String modifyString(char,java.lang.String,int) -> a
    java.lang.String access$100(java.lang.String) -> a
    java.lang.String access$200(java.lang.String,java.lang.String) -> a
com.google.gson.FieldNamingPolicy$1 -> com.google.a.d:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.FieldNamingPolicy$2 -> com.google.a.e:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.FieldNamingPolicy$3 -> com.google.a.f:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.FieldNamingPolicy$4 -> com.google.a.g:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.FieldNamingPolicy$5 -> com.google.a.h:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.FieldNamingStrategy -> com.google.a.i:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.Gson -> com.google.a.j:
    java.lang.ThreadLocal calls -> c
    java.util.Map typeTokenCache -> d
    java.util.List factories -> e
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> f
    boolean serializeNulls -> g
    boolean htmlSafe -> h
    boolean generateNonExecutableJson -> i
    boolean prettyPrinting -> j
    com.google.gson.JsonDeserializationContext deserializationContext -> a
    com.google.gson.JsonSerializationContext serializationContext -> b
    com.google.gson.TypeAdapter doubleAdapter(boolean) -> a
    com.google.gson.TypeAdapter floatAdapter(boolean) -> b
    void checkValidFloatingPoint(double) -> a
    com.google.gson.TypeAdapter longAdapter(com.google.gson.LongSerializationPolicy) -> a
    com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> a
    com.google.gson.TypeAdapter getAdapter(java.lang.Class) -> a
    java.lang.String toJson(java.lang.Object) -> a
    java.lang.String toJson(java.lang.Object,java.lang.reflect.Type) -> a
    void toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable) -> a
    void toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter) -> a
    java.lang.String toJson(com.google.gson.JsonElement) -> a
    void toJson(com.google.gson.JsonElement,java.lang.Appendable) -> a
    com.google.gson.stream.JsonWriter newJsonWriter(java.io.Writer) -> a
    void toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> a
    java.lang.Object fromJson(java.lang.String,java.lang.Class) -> a
    java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type) -> a
    java.lang.Object fromJson(java.io.Reader,java.lang.reflect.Type) -> a
    void assertFullConsumption(java.lang.Object,com.google.gson.stream.JsonReader) -> a
    java.lang.Object fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type) -> a
    java.lang.String toString() -> toString
    void access$000(com.google.gson.Gson,double) -> a
    java.util.List access$100(com.google.gson.Gson) -> a
com.google.gson.Gson$1 -> com.google.a.k:
    com.google.gson.Gson this$0 -> a
    java.util.Map initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.google.gson.Gson$2 -> com.google.a.l:
    com.google.gson.Gson this$0 -> a
com.google.gson.Gson$3 -> com.google.a.m:
    com.google.gson.Gson this$0 -> a
com.google.gson.Gson$4 -> com.google.a.n:
    com.google.gson.Gson this$0 -> a
    java.lang.Double read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.Gson$5 -> com.google.a.o:
    com.google.gson.Gson this$0 -> a
    java.lang.Float read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.Gson$6 -> com.google.a.p:
    com.google.gson.Gson this$0 -> a
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.Gson$7 -> com.google.a.q:
    com.google.gson.TypeAdapter getNextAdapter(com.google.gson.Gson,com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken) -> a
com.google.gson.Gson$FutureTypeAdapter -> com.google.a.r:
    com.google.gson.TypeAdapter delegate -> a
    void setDelegate(com.google.gson.TypeAdapter) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.InstanceCreator -> com.google.a.s:
    java.lang.Object createInstance(java.lang.reflect.Type) -> a
com.google.gson.JsonArray -> com.google.a.t:
    java.util.List elements -> a
    void add(com.google.gson.JsonElement) -> a
    java.util.Iterator iterator() -> iterator
    java.lang.Number getAsNumber() -> a
    java.lang.String getAsString() -> b
    double getAsDouble() -> c
    long getAsLong() -> d
    int getAsInt() -> e
    boolean getAsBoolean() -> f
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.gson.JsonDeserializationContext -> com.google.a.u:
com.google.gson.JsonElement -> com.google.a.v:
    boolean isJsonArray() -> g
    boolean isJsonObject() -> h
    boolean isJsonPrimitive() -> i
    boolean isJsonNull() -> j
    com.google.gson.JsonObject getAsJsonObject() -> k
    com.google.gson.JsonArray getAsJsonArray() -> l
    com.google.gson.JsonPrimitive getAsJsonPrimitive() -> m
    boolean getAsBoolean() -> f
    java.lang.Boolean getAsBooleanWrapper() -> n
    java.lang.Number getAsNumber() -> a
    java.lang.String getAsString() -> b
    double getAsDouble() -> c
    long getAsLong() -> d
    int getAsInt() -> e
    java.lang.String toString() -> toString
com.google.gson.JsonIOException -> com.google.a.w:
com.google.gson.JsonNull -> com.google.a.x:
    com.google.gson.JsonNull INSTANCE -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.gson.JsonObject -> com.google.a.y:
    java.util.Map members -> a
    void add(java.lang.String,com.google.gson.JsonElement) -> a
    java.util.Set entrySet() -> o
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.gson.JsonParseException -> com.google.a.z:
com.google.gson.JsonPrimitive -> com.google.a.aa:
    java.lang.Class[] PRIMITIVE_TYPES -> a
    java.lang.Object value -> b
    void setValue(java.lang.Object) -> a
    boolean isBoolean() -> o
    java.lang.Boolean getAsBooleanWrapper() -> n
    boolean getAsBoolean() -> f
    boolean isNumber() -> p
    java.lang.Number getAsNumber() -> a
    boolean isString() -> q
    java.lang.String getAsString() -> b
    double getAsDouble() -> c
    long getAsLong() -> d
    int getAsInt() -> e
    boolean isPrimitiveOrString(java.lang.Object) -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean isIntegral(com.google.gson.JsonPrimitive) -> a
com.google.gson.JsonSerializationContext -> com.google.a.ab:
com.google.gson.JsonSyntaxException -> com.google.a.ac:
com.google.gson.LongSerializationPolicy -> com.google.a.ad:
    com.google.gson.LongSerializationPolicy DEFAULT -> a
    com.google.gson.LongSerializationPolicy STRING -> b
    com.google.gson.LongSerializationPolicy[] $VALUES -> c
    com.google.gson.LongSerializationPolicy[] values() -> values
    com.google.gson.LongSerializationPolicy valueOf(java.lang.String) -> valueOf
com.google.gson.LongSerializationPolicy$1 -> com.google.a.ae:
com.google.gson.LongSerializationPolicy$2 -> com.google.a.af:
com.google.gson.TypeAdapter -> com.google.a.ag:
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
com.google.gson.TypeAdapterFactory -> com.google.a.ah:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.annotations.Expose -> com.google.a.a.a:
    boolean serialize() -> a
    boolean deserialize() -> b
com.google.gson.annotations.SerializedName -> com.google.a.a.b:
    java.lang.String value() -> a
com.google.gson.annotations.Since -> com.google.a.a.c:
    double value() -> a
com.google.gson.annotations.Until -> com.google.a.a.d:
    double value() -> a
com.google.gson.internal.$Gson$Preconditions -> com.google.a.b.a:
    java.lang.Object checkNotNull(java.lang.Object) -> a
    void checkArgument(boolean) -> a
com.google.gson.internal.$Gson$Types -> com.google.a.b.b:
    java.lang.reflect.Type[] EMPTY_TYPE_ARRAY -> a
    java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> a
    java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type) -> a
    java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type) -> b
    java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type) -> c
    java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> d
    java.lang.Class getRawType(java.lang.reflect.Type) -> e
    boolean equal(java.lang.Object,java.lang.Object) -> a
    boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> a
    int hashCodeOrZero(java.lang.Object) -> b
    java.lang.String typeToString(java.lang.reflect.Type) -> f
    java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> a
    java.lang.reflect.Type getSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> b
    java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> g
    java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class) -> a
    java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> b
    java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> a
    java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> a
    int indexOf(java.lang.Object[],java.lang.Object) -> a
    java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable) -> a
    void checkNotPrimitive(java.lang.reflect.Type) -> i
    void access$000(java.lang.reflect.Type) -> h
    int access$100(java.lang.Object) -> a
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl -> com.google.a.b.c:
    java.lang.reflect.Type componentType -> a
    java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl -> com.google.a.b.d:
    java.lang.reflect.Type ownerType -> a
    java.lang.reflect.Type rawType -> b
    java.lang.reflect.Type[] typeArguments -> c
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.reflect.Type getRawType() -> getRawType
    java.lang.reflect.Type getOwnerType() -> getOwnerType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$WildcardTypeImpl -> com.google.a.b.e:
    java.lang.reflect.Type upperBound -> a
    java.lang.reflect.Type lowerBound -> b
    java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor -> com.google.a.b.f:
    java.util.Map instanceCreators -> a
    com.google.gson.internal.ObjectConstructor getConstructor(com.google.gson.reflect.TypeToken) -> a
    com.google.gson.internal.ObjectConstructor newDefaultConstructor(java.lang.Class) -> a
    com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.Class) -> b
    com.google.gson.internal.ObjectConstructor newUnsafeAllocator(java.lang.reflect.Type,java.lang.Class) -> a
    java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor$1 -> com.google.a.b.g:
    com.google.gson.InstanceCreator val$creator -> a
    java.lang.reflect.Type val$type -> b
    com.google.gson.internal.ConstructorConstructor this$0 -> c
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$2 -> com.google.a.b.h:
    java.lang.reflect.Constructor val$constructor -> a
    com.google.gson.internal.ConstructorConstructor this$0 -> b
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$3 -> com.google.a.b.i:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$4 -> com.google.a.b.j:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$5 -> com.google.a.b.k:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$6 -> com.google.a.b.l:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$7 -> com.google.a.b.m:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$8 -> com.google.a.b.n:
    com.google.gson.internal.UnsafeAllocator unsafeAllocator -> d
    java.lang.Class val$rawType -> a
    java.lang.reflect.Type val$type -> b
    com.google.gson.internal.ConstructorConstructor this$0 -> c
    java.lang.Object construct() -> a
com.google.gson.internal.Excluder -> com.google.a.b.o:
    com.google.gson.internal.Excluder DEFAULT -> a
    double version -> b
    int modifiers -> c
    boolean serializeInnerClasses -> d
    boolean requireExpose -> e
    java.util.List serializationStrategies -> f
    java.util.List deserializationStrategies -> g
    com.google.gson.internal.Excluder clone() -> a
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    boolean excludeField(java.lang.reflect.Field,boolean) -> a
    boolean excludeClass(java.lang.Class,boolean) -> a
    boolean isAnonymousOrLocal(java.lang.Class) -> a
    boolean isInnerClass(java.lang.Class) -> b
    boolean isStatic(java.lang.Class) -> c
    boolean isValidVersion(com.google.gson.annotations.Since,com.google.gson.annotations.Until) -> a
    boolean isValidSince(com.google.gson.annotations.Since) -> a
    boolean isValidUntil(com.google.gson.annotations.Until) -> a
    java.lang.Object clone() -> clone
com.google.gson.internal.Excluder$1 -> com.google.a.b.p:
    com.google.gson.TypeAdapter delegate -> f
    boolean val$skipDeserialize -> a
    boolean val$skipSerialize -> b
    com.google.gson.Gson val$gson -> c
    com.google.gson.reflect.TypeToken val$type -> d
    com.google.gson.internal.Excluder this$0 -> e
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    com.google.gson.TypeAdapter delegate() -> a
com.google.gson.internal.GsonInternalAccess -> com.google.a.b.q:
    com.google.gson.internal.GsonInternalAccess INSTANCE -> a
    com.google.gson.TypeAdapter getNextAdapter(com.google.gson.Gson,com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.JsonReaderInternalAccess -> com.google.a.b.r:
    com.google.gson.internal.JsonReaderInternalAccess INSTANCE -> a
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> a
com.google.gson.internal.LazilyParsedNumber -> com.google.a.b.s:
    java.lang.String value -> a
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.String toString() -> toString
com.google.gson.internal.ObjectConstructor -> com.google.a.b.t:
    java.lang.Object construct() -> a
com.google.gson.internal.Primitives -> com.google.a.b.u:
    java.util.Map PRIMITIVE_TO_WRAPPER_TYPE -> a
    java.util.Map WRAPPER_TO_PRIMITIVE_TYPE -> b
    void add(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class) -> a
    boolean isPrimitive(java.lang.reflect.Type) -> a
    java.lang.Class wrap(java.lang.Class) -> a
com.google.gson.internal.Streams -> com.google.a.b.v:
    void write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> a
    java.io.Writer writerForAppendable(java.lang.Appendable) -> a
com.google.gson.internal.Streams$1 -> com.google.a.b.w:
com.google.gson.internal.Streams$AppendableWriter -> com.google.a.b.x:
    java.lang.Appendable appendable -> a
    com.google.gson.internal.Streams$AppendableWriter$CurrentWrite currentWrite -> b
    void write(char[],int,int) -> write
    void write(int) -> write
    void flush() -> flush
    void close() -> close
com.google.gson.internal.Streams$AppendableWriter$CurrentWrite -> com.google.a.b.y:
    char[] chars -> a
    int length() -> length
    char charAt(int) -> charAt
    java.lang.CharSequence subSequence(int,int) -> subSequence
com.google.gson.internal.UnsafeAllocator -> com.google.a.b.z:
    java.lang.Object newInstance(java.lang.Class) -> a
    com.google.gson.internal.UnsafeAllocator create() -> a
com.google.gson.internal.UnsafeAllocator$1 -> com.google.a.b.aa:
    java.lang.reflect.Method val$allocateInstance -> a
    java.lang.Object val$unsafe -> b
    java.lang.Object newInstance(java.lang.Class) -> a
com.google.gson.internal.UnsafeAllocator$2 -> com.google.a.b.ab:
    java.lang.reflect.Method val$newInstance -> a
    java.lang.Object newInstance(java.lang.Class) -> a
com.google.gson.internal.UnsafeAllocator$3 -> com.google.a.b.ac:
    java.lang.reflect.Method val$newInstance -> a
    int val$constructorId -> b
    java.lang.Object newInstance(java.lang.Class) -> a
com.google.gson.internal.UnsafeAllocator$4 -> com.google.a.b.ad:
    java.lang.Object newInstance(java.lang.Class) -> a
com.google.gson.internal.bind.ArrayTypeAdapter -> com.google.a.b.a.a:
    com.google.gson.TypeAdapterFactory FACTORY -> a
    java.lang.Class componentType -> b
    com.google.gson.TypeAdapter componentTypeAdapter -> c
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.ArrayTypeAdapter$1 -> com.google.a.b.a.b:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.BigDecimalTypeAdapter -> com.google.a.b.a.c:
    java.math.BigDecimal read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.math.BigDecimal) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.BigIntegerTypeAdapter -> com.google.a.b.a.d:
    java.math.BigInteger read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.math.BigInteger) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.CollectionTypeAdapterFactory -> com.google.a.b.a.e:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> a
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter -> com.google.a.b.a.f:
    com.google.gson.TypeAdapter elementTypeAdapter -> b
    com.google.gson.internal.ObjectConstructor constructor -> c
    com.google.gson.internal.bind.CollectionTypeAdapterFactory this$0 -> a
    java.util.Collection read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Collection) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.DateTypeAdapter -> com.google.a.b.a.g:
    com.google.gson.TypeAdapterFactory FACTORY -> a
    java.text.DateFormat enUsFormat -> b
    java.text.DateFormat localFormat -> c
    java.text.DateFormat iso8601Format -> d
    java.text.DateFormat buildIso8601Format() -> a
    java.util.Date read(com.google.gson.stream.JsonReader) -> a
    java.util.Date deserializeToDate(java.lang.String) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Date) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.DateTypeAdapter$1 -> com.google.a.b.a.h:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.JsonTreeReader -> com.google.a.b.a.i:
    java.io.Reader UNREADABLE_READER -> a
    java.lang.Object SENTINEL_CLOSED -> b
    java.util.List stack -> c
    void beginArray() -> a
    void endArray() -> b
    void beginObject() -> c
    void endObject() -> d
    boolean hasNext() -> e
    com.google.gson.stream.JsonToken peek() -> f
    java.lang.Object peekStack() -> q
    java.lang.Object popStack() -> r
    void expect(com.google.gson.stream.JsonToken) -> a
    java.lang.String nextName() -> g
    java.lang.String nextString() -> h
    boolean nextBoolean() -> i
    void nextNull() -> j
    double nextDouble() -> k
    long nextLong() -> l
    int nextInt() -> m
    void close() -> close
    void skipValue() -> n
    java.lang.String toString() -> toString
    void promoteNameToValue() -> o
com.google.gson.internal.bind.JsonTreeReader$1 -> com.google.a.b.a.j:
    int read(char[],int,int) -> read
    void close() -> close
com.google.gson.internal.bind.JsonTreeWriter -> com.google.a.b.a.k:
    java.io.Writer UNWRITABLE_WRITER -> a
    com.google.gson.JsonPrimitive SENTINEL_CLOSED -> b
    java.util.List stack -> c
    java.lang.String pendingName -> d
    com.google.gson.JsonElement product -> e
    com.google.gson.JsonElement get() -> a
    com.google.gson.JsonElement peek() -> j
    void put(com.google.gson.JsonElement) -> a
    com.google.gson.stream.JsonWriter beginArray() -> b
    com.google.gson.stream.JsonWriter endArray() -> c
    com.google.gson.stream.JsonWriter beginObject() -> d
    com.google.gson.stream.JsonWriter endObject() -> e
    com.google.gson.stream.JsonWriter name(java.lang.String) -> a
    com.google.gson.stream.JsonWriter value(java.lang.String) -> b
    com.google.gson.stream.JsonWriter nullValue() -> f
    com.google.gson.stream.JsonWriter value(boolean) -> a
    com.google.gson.stream.JsonWriter value(long) -> a
    com.google.gson.stream.JsonWriter value(java.lang.Number) -> a
    void close() -> close
com.google.gson.internal.bind.JsonTreeWriter$1 -> com.google.a.b.a.l:
    void write(char[],int,int) -> write
    void flush() -> flush
    void close() -> close
com.google.gson.internal.bind.MapTypeAdapterFactory -> com.google.a.b.a.m:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> a
    boolean complexMapKeySerialization -> b
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    com.google.gson.TypeAdapter getKeyAdapter(com.google.gson.Gson,java.lang.reflect.Type) -> a
    com.google.gson.JsonElement toJsonTree(com.google.gson.TypeAdapter,java.lang.Object) -> b
    boolean access$000(com.google.gson.internal.bind.MapTypeAdapterFactory) -> a
    com.google.gson.JsonElement access$100(com.google.gson.TypeAdapter,java.lang.Object) -> a
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter -> com.google.a.b.a.n:
    com.google.gson.TypeAdapter keyTypeAdapter -> b
    com.google.gson.TypeAdapter valueTypeAdapter -> c
    com.google.gson.internal.ObjectConstructor constructor -> d
    com.google.gson.internal.bind.MapTypeAdapterFactory this$0 -> a
    java.util.Map read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Map) -> a
    java.lang.String keyToString(com.google.gson.JsonElement) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.ObjectTypeAdapter -> com.google.a.b.a.o:
    com.google.gson.TypeAdapterFactory FACTORY -> a
    com.google.gson.Gson gson -> b
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.ObjectTypeAdapter$1 -> com.google.a.b.a.p:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.ObjectTypeAdapter$2 -> com.google.a.b.a.q:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> a
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory -> com.google.a.b.a.r:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> a
    com.google.gson.FieldNamingStrategy fieldNamingPolicy -> b
    com.google.gson.internal.Excluder excluder -> c
    boolean excludeField(java.lang.reflect.Field,boolean) -> a
    java.lang.String getFieldName(java.lang.reflect.Field) -> a
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean) -> a
    java.util.Map getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class) -> a
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1 -> com.google.a.b.a.s:
    com.google.gson.TypeAdapter typeAdapter -> a
    com.google.gson.Gson val$context -> b
    com.google.gson.reflect.TypeToken val$fieldType -> c
    java.lang.reflect.Field val$field -> d
    boolean val$isPrimitive -> e
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory this$0 -> f
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    void read(com.google.gson.stream.JsonReader,java.lang.Object) -> a
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter -> com.google.a.b.a.t:
    com.google.gson.internal.ObjectConstructor constructor -> b
    java.util.Map boundFields -> c
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory this$0 -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField -> com.google.a.b.a.u:
    java.lang.String name -> g
    boolean serialized -> h
    boolean deserialized -> i
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    void read(com.google.gson.stream.JsonReader,java.lang.Object) -> a
com.google.gson.internal.bind.SqlDateTypeAdapter -> com.google.a.b.a.v:
    com.google.gson.TypeAdapterFactory FACTORY -> a
    java.text.DateFormat format -> b
    java.sql.Date read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.sql.Date) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.SqlDateTypeAdapter$1 -> com.google.a.b.a.w:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.TimeTypeAdapter -> com.google.a.b.a.x:
    com.google.gson.TypeAdapterFactory FACTORY -> a
    java.text.DateFormat format -> b
    java.sql.Time read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.sql.Time) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TimeTypeAdapter$1 -> com.google.a.b.a.y:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper -> com.google.a.b.a.z:
    com.google.gson.Gson context -> a
    com.google.gson.TypeAdapter delegate -> b
    java.lang.reflect.Type type -> c
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters -> com.google.a.b.a.aa:
    com.google.gson.TypeAdapter CLASS -> a
    com.google.gson.TypeAdapterFactory CLASS_FACTORY -> b
    com.google.gson.TypeAdapter BIT_SET -> c
    com.google.gson.TypeAdapterFactory BIT_SET_FACTORY -> d
    com.google.gson.TypeAdapter BOOLEAN -> e
    com.google.gson.TypeAdapter BOOLEAN_AS_STRING -> f
    com.google.gson.TypeAdapterFactory BOOLEAN_FACTORY -> g
    com.google.gson.TypeAdapter BYTE -> h
    com.google.gson.TypeAdapterFactory BYTE_FACTORY -> i
    com.google.gson.TypeAdapter SHORT -> j
    com.google.gson.TypeAdapterFactory SHORT_FACTORY -> k
    com.google.gson.TypeAdapter INTEGER -> l
    com.google.gson.TypeAdapterFactory INTEGER_FACTORY -> m
    com.google.gson.TypeAdapter LONG -> n
    com.google.gson.TypeAdapter FLOAT -> o
    com.google.gson.TypeAdapter DOUBLE -> p
    com.google.gson.TypeAdapter NUMBER -> q
    com.google.gson.TypeAdapterFactory NUMBER_FACTORY -> r
    com.google.gson.TypeAdapter CHARACTER -> s
    com.google.gson.TypeAdapterFactory CHARACTER_FACTORY -> t
    com.google.gson.TypeAdapter STRING -> u
    com.google.gson.TypeAdapterFactory STRING_FACTORY -> v
    com.google.gson.TypeAdapter STRING_BUILDER -> w
    com.google.gson.TypeAdapterFactory STRING_BUILDER_FACTORY -> x
    com.google.gson.TypeAdapter STRING_BUFFER -> y
    com.google.gson.TypeAdapterFactory STRING_BUFFER_FACTORY -> z
    com.google.gson.TypeAdapter URL -> A
    com.google.gson.TypeAdapterFactory URL_FACTORY -> B
    com.google.gson.TypeAdapter URI -> C
    com.google.gson.TypeAdapterFactory URI_FACTORY -> D
    com.google.gson.TypeAdapter INET_ADDRESS -> E
    com.google.gson.TypeAdapterFactory INET_ADDRESS_FACTORY -> F
    com.google.gson.TypeAdapter UUID -> G
    com.google.gson.TypeAdapterFactory UUID_FACTORY -> H
    com.google.gson.TypeAdapterFactory TIMESTAMP_FACTORY -> I
    com.google.gson.TypeAdapter CALENDAR -> J
    com.google.gson.TypeAdapterFactory CALENDAR_FACTORY -> K
    com.google.gson.TypeAdapter LOCALE -> L
    com.google.gson.TypeAdapterFactory LOCALE_FACTORY -> M
    com.google.gson.TypeAdapter JSON_ELEMENT -> N
    com.google.gson.TypeAdapterFactory JSON_ELEMENT_FACTORY -> O
    com.google.gson.TypeAdapterFactory ENUM_FACTORY -> P
    com.google.gson.TypeAdapterFactory newEnumTypeHierarchyFactory() -> a
    com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,com.google.gson.TypeAdapter) -> a
    com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> a
    com.google.gson.TypeAdapterFactory newFactoryForMultipleTypes(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> b
    com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter) -> b
com.google.gson.internal.bind.TypeAdapters$1 -> com.google.a.b.a.ab:
    void write(com.google.gson.stream.JsonWriter,java.lang.Class) -> a
    java.lang.Class read(com.google.gson.stream.JsonReader) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$10 -> com.google.a.b.a.ac:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$11 -> com.google.a.b.a.ad:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$12 -> com.google.a.b.a.ae:
    java.lang.Character read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Character) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$13 -> com.google.a.b.a.af:
    java.lang.String read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.String) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$14 -> com.google.a.b.a.ag:
    java.lang.StringBuilder read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.StringBuilder) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$15 -> com.google.a.b.a.ah:
    java.lang.StringBuffer read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.StringBuffer) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$16 -> com.google.a.b.a.ai:
    java.net.URL read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.net.URL) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$17 -> com.google.a.b.a.aj:
    java.net.URI read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.net.URI) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$18 -> com.google.a.b.a.ak:
    java.net.InetAddress read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.net.InetAddress) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$19 -> com.google.a.b.a.al:
    java.util.UUID read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.UUID) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$2 -> com.google.a.b.a.am:
    java.util.BitSet read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.BitSet) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$20 -> com.google.a.b.a.an:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.TypeAdapters$20$1 -> com.google.a.b.a.ao:
    com.google.gson.TypeAdapter val$dateTypeAdapter -> a
    com.google.gson.internal.bind.TypeAdapters$20 this$0 -> b
    java.sql.Timestamp read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.sql.Timestamp) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$21 -> com.google.a.b.a.ap:
    java.util.Calendar read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Calendar) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$22 -> com.google.a.b.a.aq:
    java.util.Locale read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Locale) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$23 -> com.google.a.b.a.ar:
    com.google.gson.JsonElement read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$24 -> com.google.a.b.a.as:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.TypeAdapters$26 -> com.google.a.b.a.at:
    java.lang.Class val$type -> a
    com.google.gson.TypeAdapter val$typeAdapter -> b
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$27 -> com.google.a.b.a.au:
    java.lang.Class val$unboxed -> a
    java.lang.Class val$boxed -> b
    com.google.gson.TypeAdapter val$typeAdapter -> c
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$28 -> com.google.a.b.a.av:
    java.lang.Class val$base -> a
    java.lang.Class val$sub -> b
    com.google.gson.TypeAdapter val$typeAdapter -> c
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$29 -> com.google.a.b.a.aw:
    java.lang.Class val$clazz -> a
    com.google.gson.TypeAdapter val$typeAdapter -> b
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$3 -> com.google.a.b.a.ax:
    java.lang.Boolean read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$30 -> com.google.a.b.a.ay:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> a
com.google.gson.internal.bind.TypeAdapters$4 -> com.google.a.b.a.az:
    java.lang.Boolean read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$5 -> com.google.a.b.a.ba:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$6 -> com.google.a.b.a.bb:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$7 -> com.google.a.b.a.bc:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$8 -> com.google.a.b.a.bd:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$9 -> com.google.a.b.a.be:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter -> com.google.a.b.a.bf:
    java.util.Map nameToConstant -> a
    java.util.Map constantToName -> b
    java.lang.Enum read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Enum) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.reflect.TypeToken -> com.google.a.c.a:
    java.lang.Class rawType -> a
    java.lang.reflect.Type type -> b
    int hashCode -> c
    java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> a
    java.lang.Class getRawType() -> a
    java.lang.reflect.Type getType() -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    com.google.gson.reflect.TypeToken get(java.lang.reflect.Type) -> a
    com.google.gson.reflect.TypeToken get(java.lang.Class) -> b
com.google.gson.stream.JsonReader -> com.google.a.d.a:
    char[] NON_EXECUTE_PREFIX -> a
    com.google.gson.stream.StringPool stringPool -> b
    java.io.Reader in -> c
    boolean lenient -> d
    char[] buffer -> e
    int pos -> f
    int limit -> g
    int bufferStartLine -> h
    int bufferStartColumn -> i
    com.google.gson.stream.JsonScope[] stack -> j
    int stackSize -> k
    com.google.gson.stream.JsonToken token -> l
    java.lang.String name -> m
    java.lang.String value -> n
    int valuePos -> o
    int valueLength -> p
    boolean skipping -> q
    void setLenient(boolean) -> a
    boolean isLenient() -> p
    void beginArray() -> a
    void endArray() -> b
    void beginObject() -> c
    void endObject() -> d
    void expect(com.google.gson.stream.JsonToken) -> a
    boolean hasNext() -> e
    com.google.gson.stream.JsonToken peek() -> f
    void consumeNonExecutePrefix() -> o
    com.google.gson.stream.JsonToken advance() -> q
    java.lang.String nextName() -> g
    java.lang.String nextString() -> h
    boolean nextBoolean() -> i
    void nextNull() -> j
    double nextDouble() -> k
    long nextLong() -> l
    int nextInt() -> m
    void close() -> close
    void skipValue() -> n
    void push(com.google.gson.stream.JsonScope) -> a
    com.google.gson.stream.JsonToken nextInArray(boolean) -> b
    com.google.gson.stream.JsonToken nextInObject(boolean) -> c
    com.google.gson.stream.JsonToken objectValue() -> r
    com.google.gson.stream.JsonToken nextValue() -> s
    boolean fillBuffer(int) -> a
    int getLineNumber() -> t
    int getColumnNumber() -> u
    int nextNonWhitespace(boolean) -> d
    void checkLenient() -> v
    void skipToEndOfLine() -> w
    boolean skipTo(java.lang.String) -> a
    java.lang.String nextString(char) -> a
    java.lang.String nextLiteral(boolean) -> e
    java.lang.String toString() -> toString
    char readEscapeCharacter() -> x
    com.google.gson.stream.JsonToken readLiteral() -> y
    com.google.gson.stream.JsonToken decodeLiteral() -> z
    com.google.gson.stream.JsonToken decodeNumber(char[],int,int) -> a
    java.io.IOException syntaxError(java.lang.String) -> b
    java.lang.CharSequence getSnippet() -> A
    com.google.gson.stream.JsonToken access$000(com.google.gson.stream.JsonReader) -> a
    int access$100(com.google.gson.stream.JsonReader) -> b
    int access$200(com.google.gson.stream.JsonReader) -> c
    java.lang.String access$302(com.google.gson.stream.JsonReader,java.lang.String) -> a
    java.lang.String access$400(com.google.gson.stream.JsonReader) -> d
    java.lang.String access$402(com.google.gson.stream.JsonReader,java.lang.String) -> b
    com.google.gson.stream.JsonToken access$002(com.google.gson.stream.JsonReader,com.google.gson.stream.JsonToken) -> a
com.google.gson.stream.JsonReader$1 -> com.google.a.d.b:
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> a
com.google.gson.stream.JsonReader$2 -> com.google.a.d.c:
    int[] $SwitchMap$com$google$gson$stream$JsonScope -> a
com.google.gson.stream.JsonScope -> com.google.a.d.d:
    com.google.gson.stream.JsonScope EMPTY_ARRAY -> a
    com.google.gson.stream.JsonScope NONEMPTY_ARRAY -> b
    com.google.gson.stream.JsonScope EMPTY_OBJECT -> c
    com.google.gson.stream.JsonScope DANGLING_NAME -> d
    com.google.gson.stream.JsonScope NONEMPTY_OBJECT -> e
    com.google.gson.stream.JsonScope EMPTY_DOCUMENT -> f
    com.google.gson.stream.JsonScope NONEMPTY_DOCUMENT -> g
    com.google.gson.stream.JsonScope CLOSED -> h
    com.google.gson.stream.JsonScope[] $VALUES -> i
    com.google.gson.stream.JsonScope[] values() -> values
    com.google.gson.stream.JsonScope valueOf(java.lang.String) -> valueOf
com.google.gson.stream.JsonToken -> com.google.a.d.e:
    com.google.gson.stream.JsonToken BEGIN_ARRAY -> a
    com.google.gson.stream.JsonToken END_ARRAY -> b
    com.google.gson.stream.JsonToken BEGIN_OBJECT -> c
    com.google.gson.stream.JsonToken END_OBJECT -> d
    com.google.gson.stream.JsonToken NAME -> e
    com.google.gson.stream.JsonToken STRING -> f
    com.google.gson.stream.JsonToken NUMBER -> g
    com.google.gson.stream.JsonToken BOOLEAN -> h
    com.google.gson.stream.JsonToken NULL -> i
    com.google.gson.stream.JsonToken END_DOCUMENT -> j
    com.google.gson.stream.JsonToken[] $VALUES -> k
    com.google.gson.stream.JsonToken[] values() -> values
    com.google.gson.stream.JsonToken valueOf(java.lang.String) -> valueOf
com.google.gson.stream.JsonWriter -> com.google.a.d.f:
    java.io.Writer out -> a
    java.util.List stack -> b
    java.lang.String indent -> c
    java.lang.String separator -> d
    boolean lenient -> e
    boolean htmlSafe -> f
    java.lang.String deferredName -> g
    boolean serializeNulls -> h
    void setIndent(java.lang.String) -> c
    void setLenient(boolean) -> b
    boolean isLenient() -> g
    void setHtmlSafe(boolean) -> c
    boolean isHtmlSafe() -> h
    void setSerializeNulls(boolean) -> d
    boolean getSerializeNulls() -> i
    com.google.gson.stream.JsonWriter beginArray() -> b
    com.google.gson.stream.JsonWriter endArray() -> c
    com.google.gson.stream.JsonWriter beginObject() -> d
    com.google.gson.stream.JsonWriter endObject() -> e
    com.google.gson.stream.JsonWriter open(com.google.gson.stream.JsonScope,java.lang.String) -> a
    com.google.gson.stream.JsonWriter close(com.google.gson.stream.JsonScope,com.google.gson.stream.JsonScope,java.lang.String) -> a
    com.google.gson.stream.JsonScope peek() -> a
    void replaceTop(com.google.gson.stream.JsonScope) -> a
    com.google.gson.stream.JsonWriter name(java.lang.String) -> a
    void writeDeferredName() -> j
    com.google.gson.stream.JsonWriter value(java.lang.String) -> b
    com.google.gson.stream.JsonWriter nullValue() -> f
    com.google.gson.stream.JsonWriter value(boolean) -> a
    com.google.gson.stream.JsonWriter value(long) -> a
    com.google.gson.stream.JsonWriter value(java.lang.Number) -> a
    void close() -> close
    void string(java.lang.String) -> d
    void newline() -> k
    void beforeName() -> l
    void beforeValue(boolean) -> e
com.google.gson.stream.JsonWriter$1 -> com.google.a.d.g:
    int[] $SwitchMap$com$google$gson$stream$JsonScope -> a
com.google.gson.stream.MalformedJsonException -> com.google.a.d.h:
com.google.gson.stream.StringPool -> com.google.a.d.i:
    java.lang.String[] pool -> a
    java.lang.String get(char[],int,int) -> a
org.achartengine.ChartFactory -> b.a.a:
    org.achartengine.GraphicalView getTimeChartView(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,java.lang.String) -> a
    org.achartengine.GraphicalView getBarChartView(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,org.achartengine.chart.BarChart$Type) -> a
    void checkParameters(org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer) -> a
org.achartengine.GraphicalView -> b.a.b:
    org.achartengine.chart.AbstractChart mChart -> a
    org.achartengine.renderer.DefaultRenderer mRenderer -> b
    android.graphics.Rect mRect -> c
    android.os.Handler mHandler -> d
    android.graphics.RectF mZoomR -> e
    android.graphics.Bitmap zoomInImage -> f
    android.graphics.Bitmap zoomOutImage -> g
    android.graphics.Bitmap fitZoomImage -> h
    int zoomSize -> i
    int ZOOM_BUTTONS_COLOR -> j
    org.achartengine.tools.Zoom mZoomIn -> k
    org.achartengine.tools.Zoom mZoomOut -> l
    org.achartengine.tools.FitZoom mFitZoom -> m
    android.graphics.Paint mPaint -> n
    org.achartengine.ITouchHandler mTouchHandler -> o
    float oldX -> p
    float oldY -> q
    org.achartengine.model.SeriesSelection getCurrentSeriesAndPoint() -> getCurrentSeriesAndPoint
    void onDraw(android.graphics.Canvas) -> onDraw
    void setZoomRate(float) -> setZoomRate
    void zoomIn() -> a
    void zoomOut() -> b
    void zoomReset() -> c
    android.graphics.RectF getZoomRectangle() -> getZoomRectangle
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void repaint() -> d
org.achartengine.GraphicalView$1 -> b.a.c:
    org.achartengine.GraphicalView this$0 -> a
    void run() -> run
org.achartengine.ITouchHandler -> b.a.d:
    boolean handleTouch(android.view.MotionEvent) -> a
org.achartengine.TouchHandler -> b.a.e:
    org.achartengine.renderer.DefaultRenderer mRenderer -> a
    float oldX -> b
    float oldY -> c
    float oldX2 -> d
    float oldY2 -> e
    android.graphics.RectF zoomR -> f
    org.achartengine.tools.Pan mPan -> g
    org.achartengine.tools.Zoom mPinchZoom -> h
    org.achartengine.GraphicalView graphicalView -> i
    boolean handleTouch(android.view.MotionEvent) -> a
org.achartengine.TouchHandlerOld -> b.a.f:
    org.achartengine.renderer.DefaultRenderer mRenderer -> a
    float oldX -> b
    float oldY -> c
    android.graphics.RectF zoomR -> d
    org.achartengine.tools.Pan mPan -> e
    org.achartengine.GraphicalView graphicalView -> f
    boolean handleTouch(android.view.MotionEvent) -> a
org.achartengine.chart.AbstractChart -> b.a.a.a:
    void draw(android.graphics.Canvas,int,int,int,int,android.graphics.Paint) -> a
    void drawBackground(org.achartengine.renderer.DefaultRenderer,android.graphics.Canvas,int,int,int,int,android.graphics.Paint,boolean,int) -> a
    int drawLegend(android.graphics.Canvas,org.achartengine.renderer.DefaultRenderer,java.lang.String[],int,int,int,int,int,int,android.graphics.Paint,boolean) -> a
    void drawString(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint) -> a
    boolean getExceed(float,org.achartengine.renderer.DefaultRenderer,int,int) -> a
    boolean isVertical(org.achartengine.renderer.DefaultRenderer) -> a
    float[] calculateDrawPoints(float,float,float,float,int,int) -> a
    void drawPath(android.graphics.Canvas,float[],android.graphics.Paint,boolean) -> a
    int getLegendShapeWidth(int) -> a
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> a
    int getLegendSize(org.achartengine.renderer.DefaultRenderer,int,float) -> a
    boolean isNullValue(double) -> a
    org.achartengine.model.SeriesSelection getSeriesAndPointForScreenCoordinate(org.achartengine.model.Point) -> a
org.achartengine.chart.BarChart -> b.a.a.b:
    org.achartengine.chart.BarChart$Type mType -> a
    org.achartengine.chart.ClickableArea[] clickableAreasForPoints(float[],double[],float,int,int) -> a
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,float[],org.achartengine.renderer.SimpleSeriesRenderer,float,int,int) -> a
    void drawBar(android.graphics.Canvas,float,float,float,float,float,int,int,android.graphics.Paint) -> a
    void drawBar(android.graphics.Canvas,float,float,float,float,int,int,android.graphics.Paint) -> a
    int getGradientPartialColor(int,int,float) -> a
    void drawChartValuesText(android.graphics.Canvas,org.achartengine.model.XYSeries,org.achartengine.renderer.SimpleSeriesRenderer,android.graphics.Paint,float[],int,int) -> a
    int getLegendShapeWidth(int) -> a
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> a
    float getHalfDiffX(float[],int,int) -> a
    float getCoeficient() -> a
    boolean isRenderNullValues() -> b
org.achartengine.chart.BarChart$Type -> b.a.a.c:
    org.achartengine.chart.BarChart$Type DEFAULT -> a
    org.achartengine.chart.BarChart$Type STACKED -> b
    org.achartengine.chart.BarChart$Type[] $VALUES -> c
    org.achartengine.chart.BarChart$Type[] values() -> values
    org.achartengine.chart.BarChart$Type valueOf(java.lang.String) -> valueOf
org.achartengine.chart.ClickableArea -> b.a.a.d:
    android.graphics.RectF rect -> a
    double x -> b
    double y -> c
    android.graphics.RectF getRect() -> a
    double getX() -> b
    double getY() -> c
org.achartengine.chart.LineChart -> b.a.a.e:
    org.achartengine.chart.ScatterChart pointsChart -> a
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,float[],org.achartengine.renderer.SimpleSeriesRenderer,float,int,int) -> a
    org.achartengine.chart.ClickableArea[] clickableAreasForPoints(float[],double[],float,int,int) -> a
    int getLegendShapeWidth(int) -> a
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> a
    boolean isRenderPoints(org.achartengine.renderer.SimpleSeriesRenderer) -> a
    org.achartengine.chart.ScatterChart getPointsChart() -> f_
org.achartengine.chart.PointStyle -> b.a.a.f:
    org.achartengine.chart.PointStyle X -> a
    org.achartengine.chart.PointStyle CIRCLE -> b
    org.achartengine.chart.PointStyle TRIANGLE -> c
    org.achartengine.chart.PointStyle SQUARE -> d
    org.achartengine.chart.PointStyle DIAMOND -> e
    org.achartengine.chart.PointStyle POINT -> f
    java.lang.String mName -> g
    org.achartengine.chart.PointStyle[] $VALUES -> h
    org.achartengine.chart.PointStyle[] values() -> values
    org.achartengine.chart.PointStyle valueOf(java.lang.String) -> valueOf
    java.lang.String getName() -> a
    java.lang.String toString() -> toString
org.achartengine.chart.RoundChart -> b.a.a.g:
    org.achartengine.renderer.DefaultRenderer mRenderer -> a
    int mCenterX -> b
    int mCenterY -> c
    int getLegendShapeWidth(int) -> a
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> a
    org.achartengine.renderer.DefaultRenderer getRenderer() -> a
    int getCenterX() -> b
    int getCenterY() -> c
    void setCenterX(int) -> b
    void setCenterY(int) -> c
org.achartengine.chart.ScatterChart -> b.a.a.h:
    float size -> a
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,float[],org.achartengine.renderer.SimpleSeriesRenderer,float,int,int) -> a
    org.achartengine.chart.ClickableArea[] clickableAreasForPoints(float[],double[],float,int,int) -> a
    int getLegendShapeWidth(int) -> a
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> a
    void drawX(android.graphics.Canvas,android.graphics.Paint,float,float) -> a
    void drawCircle(android.graphics.Canvas,android.graphics.Paint,float,float) -> b
    void drawTriangle(android.graphics.Canvas,android.graphics.Paint,float[],float,float) -> a
    void drawSquare(android.graphics.Canvas,android.graphics.Paint,float,float) -> c
    void drawDiamond(android.graphics.Canvas,android.graphics.Paint,float[],float,float) -> b
org.achartengine.chart.ScatterChart$1 -> b.a.a.i:
    int[] $SwitchMap$org$achartengine$chart$PointStyle -> a
org.achartengine.chart.TimeChart -> b.a.a.j:
    java.lang.String mDateFormat -> a
    boolean mXAxisSmart -> d
    java.lang.Double mStartPoint -> e
    void setDateFormat(java.lang.String) -> a
    void drawXLabels(java.util.List,java.lang.Double[],android.graphics.Canvas,android.graphics.Paint,int,int,int,double,double,double) -> a
    java.text.DateFormat getDateFormat(double,double) -> a
    java.util.List getXLabels(double,double,int) -> a
org.achartengine.chart.XYChart -> b.a.a.k:
    org.achartengine.model.XYMultipleSeriesDataset mDataset -> b
    org.achartengine.renderer.XYMultipleSeriesRenderer mRenderer -> c
    float mScale -> a
    float mTranslate -> d
    org.achartengine.model.Point mCenter -> e
    android.graphics.Rect mScreenR -> f
    java.util.Map mCalcRange -> g
    java.util.Map clickableAreas -> h
    void draw(android.graphics.Canvas,int,int,int,int,android.graphics.Paint) -> a
    java.util.List getXLabels(double,double,int) -> a
    java.util.Map getYLabels(double[],double[],int) -> a
    java.util.List getValidLabels(java.util.List) -> a
    void drawSeries(org.achartengine.model.XYSeries,android.graphics.Canvas,android.graphics.Paint,java.util.List,org.achartengine.renderer.SimpleSeriesRenderer,float,int,org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation,int) -> a
    void setStroke(android.graphics.Paint$Cap,android.graphics.Paint$Join,float,android.graphics.Paint$Style,android.graphics.PathEffect,android.graphics.Paint) -> a
    void drawChartValuesText(android.graphics.Canvas,org.achartengine.model.XYSeries,org.achartengine.renderer.SimpleSeriesRenderer,android.graphics.Paint,float[],int,int) -> a
    void drawText(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,float) -> a
    void transform(android.graphics.Canvas,float,boolean) -> a
    java.lang.String getLabel(double) -> b
    void drawXLabels(java.util.List,java.lang.Double[],android.graphics.Canvas,android.graphics.Paint,int,int,int,double,double,double) -> a
    void drawYLabels(java.util.Map,android.graphics.Canvas,android.graphics.Paint,int,int,int,int,double[],double[]) -> a
    void drawXTextLabels(java.lang.Double[],android.graphics.Canvas,android.graphics.Paint,boolean,int,int,int,double,double,double) -> a
    org.achartengine.renderer.XYMultipleSeriesRenderer getRenderer() -> c
    org.achartengine.model.XYMultipleSeriesDataset getDataset() -> d
    double[] getCalcRange(int) -> b
    int getLabelLinePos(android.graphics.Paint$Align) -> a
    double[] toRealPoint(float,float,int) -> a
    double[] toScreenPoint(double[],int) -> a
    org.achartengine.model.SeriesSelection getSeriesAndPointForScreenCoordinate(org.achartengine.model.Point) -> a
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,float[],org.achartengine.renderer.SimpleSeriesRenderer,float,int,int) -> a
    org.achartengine.chart.ClickableArea[] clickableAreasForPoints(float[],double[],float,int,int) -> a
    boolean isRenderNullValues() -> b
    boolean isRenderPoints(org.achartengine.renderer.SimpleSeriesRenderer) -> a
    org.achartengine.chart.ScatterChart getPointsChart() -> f_
org.achartengine.model.Point -> b.a.b.a:
    float mX -> a
    float mY -> b
    float getX() -> a
    float getY() -> b
org.achartengine.model.SeriesSelection -> b.a.b.b:
    int mSeriesIndex -> a
    int mPointIndex -> b
    double mXValue -> c
    double mValue -> d
org.achartengine.model.TimeSeries -> b.a.b.c:
    void add(java.util.Date,double) -> a
org.achartengine.model.XYMultipleSeriesDataset -> b.a.b.d:
    java.util.List mSeries -> a
    void addSeries(org.achartengine.model.XYSeries) -> a
    org.achartengine.model.XYSeries getSeriesAt(int) -> a
    int getSeriesCount() -> a
    org.achartengine.model.XYSeries[] getSeries() -> b
org.achartengine.model.XYSeries -> b.a.b.e:
    java.lang.String mTitle -> a
    org.achartengine.util.IndexXYMap mXY -> b
    double mMinX -> c
    double mMaxX -> d
    double mMinY -> e
    double mMaxY -> f
    int mScaleNumber -> g
    int getScaleNumber() -> a
    void initRange() -> h
    void updateRange(double,double) -> b
    java.lang.String getTitle() -> b
    void add(double,double) -> a
    double getX(int) -> a
    double getY(int) -> b
    java.util.SortedMap getRange(double,double,int) -> a
    int getIndexForKey(double) -> a
    int getItemCount() -> c
    double getMinX() -> d
    double getMinY() -> e
    double getMaxX() -> f
    double getMaxY() -> g
org.achartengine.renderer.BasicStroke -> b.a.c.a:
    org.achartengine.renderer.BasicStroke SOLID -> a
    org.achartengine.renderer.BasicStroke DASHED -> b
    org.achartengine.renderer.BasicStroke DOTTED -> c
    android.graphics.Paint$Cap mCap -> d
    android.graphics.Paint$Join mJoin -> e
    float mMiter -> f
    float[] mIntervals -> g
    float mPhase -> h
    android.graphics.Paint$Cap getCap() -> a
    android.graphics.Paint$Join getJoin() -> b
    float getMiter() -> c
    float[] getIntervals() -> d
    float getPhase() -> e
org.achartengine.renderer.DefaultRenderer -> b.a.c.b:
    java.lang.String mChartTitle -> a
    float mChartTitleTextSize -> b
    android.graphics.Typeface REGULAR_TEXT_FONT -> c
    java.lang.String mTextTypefaceName -> d
    int mTextTypefaceStyle -> e
    int mBackgroundColor -> f
    boolean mApplyBackgroundColor -> g
    boolean mShowAxes -> h
    int mAxesColor -> i
    boolean mShowLabels -> j
    int mLabelsColor -> k
    float mLabelsTextSize -> l
    boolean mShowLegend -> m
    float mLegendTextSize -> n
    boolean mFitLegend -> o
    boolean mShowGridX -> p
    boolean mShowGridY -> q
    boolean mShowCustomTextGrid -> r
    java.util.List mRenderers -> s
    boolean mAntialiasing -> t
    int mLegendHeight -> u
    int[] mMargins -> v
    float mScale -> w
    boolean mPanEnabled -> x
    boolean mZoomEnabled -> y
    boolean mZoomButtonsVisible -> z
    float mZoomRate -> A
    boolean mExternalZoomEnabled -> B
    float mOriginalScale -> C
    boolean mClickEnabled -> D
    int selectableBuffer -> E
    boolean mInScroll -> F
    float mStartAngle -> G
    java.lang.String getChartTitle() -> a
    void setChartTitle(java.lang.String) -> a
    float getChartTitleTextSize() -> b
    void setChartTitleTextSize(float) -> a
    void addSeriesRenderer(org.achartengine.renderer.SimpleSeriesRenderer) -> a
    org.achartengine.renderer.SimpleSeriesRenderer getSeriesRendererAt(int) -> a
    int getSeriesRendererCount() -> c
    int getBackgroundColor() -> d
    boolean isApplyBackgroundColor() -> e
    int getAxesColor() -> f
    void setAxesColor(int) -> b
    int getLabelsColor() -> g
    void setLabelsColor(int) -> c
    float getLabelsTextSize() -> h
    void setLabelsTextSize(float) -> b
    boolean isShowAxes() -> i
    boolean isShowLabels() -> j
    boolean isShowGridX() -> k
    boolean isShowGridY() -> l
    void setShowGridX(boolean) -> a
    void setShowGridY(boolean) -> b
    void setShowGrid(boolean) -> c
    boolean isShowCustomTextGrid() -> m
    boolean isShowLegend() -> n
    boolean isFitLegend() -> o
    void setFitLegend(boolean) -> d
    java.lang.String getTextTypefaceName() -> p
    int getTextTypefaceStyle() -> q
    float getLegendTextSize() -> r
    void setLegendTextSize(float) -> c
    boolean isAntialiasing() -> s
    float getScale() -> t
    float getOriginalScale() -> u
    void setScale(float) -> d
    boolean isZoomEnabled() -> v
    boolean isZoomButtonsVisible() -> w
    boolean isExternalZoomEnabled() -> x
    float getZoomRate() -> y
    boolean isPanEnabled() -> z
    boolean isClickEnabled() -> A
    int getSelectableBuffer() -> B
    int getLegendHeight() -> C
    void setLegendHeight(int) -> d
    int[] getMargins() -> D
    void setMargins(int[]) -> a
    boolean isInScroll() -> E
org.achartengine.renderer.SimpleSeriesRenderer -> b.a.c.c:
    int mColor -> a
    boolean mDisplayChartValues -> b
    float mChartValuesTextSize -> c
    android.graphics.Paint$Align mChartValuesTextAlign -> d
    float mChartValuesSpacing -> e
    org.achartengine.renderer.BasicStroke mStroke -> f
    boolean mGradientEnabled -> g
    double mGradientStartValue -> h
    int mGradientStartColor -> i
    double mGradientStopValue -> j
    int mGradientStopColor -> k
    int getColor() -> a
    void setColor(int) -> a
    boolean isDisplayChartValues() -> b
    float getChartValuesTextSize() -> c
    android.graphics.Paint$Align getChartValuesTextAlign() -> d
    float getChartValuesSpacing() -> e
    org.achartengine.renderer.BasicStroke getStroke() -> f
    void setStroke(org.achartengine.renderer.BasicStroke) -> a
    boolean isGradientEnabled() -> g
    double getGradientStartValue() -> h
    int getGradientStartColor() -> i
    double getGradientStopValue() -> j
    int getGradientStopColor() -> k
org.achartengine.renderer.XYMultipleSeriesRenderer -> b.a.c.d:
    java.lang.String mXTitle -> a
    java.lang.String[] mYTitle -> b
    float mAxisTitleTextSize -> c
    double[] mMinX -> d
    double[] mMaxX -> e
    double[] mMinY -> f
    double[] mMaxY -> g
    int mXLabels -> h
    int mYLabels -> i
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation mOrientation -> j
    java.util.Map mXTextLabels -> k
    java.util.Map mYTextLabels -> l
    boolean mPanXEnabled -> m
    boolean mPanYEnabled -> n
    boolean mZoomXEnabled -> o
    boolean mZoomYEnabled -> p
    double mBarSpacing -> q
    int mMarginsColor -> r
    double[] mPanLimits -> s
    double[] mZoomLimits -> t
    float mXLabelsAngle -> u
    float mYLabelsAngle -> v
    java.util.Map initialRange -> w
    float mPointSize -> x
    int mGridColor -> y
    int scalesCount -> z
    android.graphics.Paint$Align xLabelsAlign -> A
    android.graphics.Paint$Align[] yLabelsAlign -> B
    android.graphics.Paint$Align[] yAxisAlign -> C
    int mXLabelsColor -> D
    int[] mYLabelsColor -> E
    void initAxesRange(int) -> e
    void initAxesRangeForScale(int) -> f
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation getOrientation() -> F
    java.lang.String getXTitle() -> G
    void setXTitle(java.lang.String) -> b
    java.lang.String getYTitle() -> H
    java.lang.String getYTitle(int) -> g
    void setYTitle(java.lang.String) -> c
    void setYTitle(java.lang.String,int) -> a
    float getAxisTitleTextSize() -> I
    void setAxisTitleTextSize(float) -> e
    void setXAxisMin(double) -> a
    void setXAxisMax(double) -> b
    void setYAxisMin(double) -> c
    void setYAxisMax(double) -> d
    double getXAxisMin(int) -> h
    void setXAxisMin(double,int) -> a
    boolean isMinXSet(int) -> i
    double getXAxisMax(int) -> j
    void setXAxisMax(double,int) -> b
    boolean isMaxXSet(int) -> k
    double getYAxisMin(int) -> l
    void setYAxisMin(double,int) -> c
    boolean isMinYSet(int) -> m
    double getYAxisMax(int) -> n
    void setYAxisMax(double,int) -> d
    boolean isMaxYSet(int) -> o
    int getXLabels() -> J
    void setXLabels(int) -> p
    java.lang.String getXTextLabel(java.lang.Double) -> a
    java.lang.Double[] getXTextLabelLocations() -> K
    java.lang.String getYTextLabel(java.lang.Double,int) -> a
    java.lang.Double[] getYTextLabelLocations(int) -> q
    int getYLabels() -> L
    void setYLabels(int) -> r
    boolean isPanEnabled() -> z
    boolean isPanXEnabled() -> M
    boolean isPanYEnabled() -> N
    boolean isZoomEnabled() -> v
    boolean isZoomXEnabled() -> O
    boolean isZoomYEnabled() -> P
    double getBarSpacing() -> Q
    void setBarSpacing(double) -> e
    int getMarginsColor() -> R
    void setMarginsColor(int) -> s
    int getGridColor() -> S
    double[] getPanLimits() -> T
    void setPanLimits(double[]) -> a
    double[] getZoomLimits() -> U
    void setZoomLimits(double[]) -> b
    float getXLabelsAngle() -> V
    float getYLabelsAngle() -> W
    float getPointSize() -> X
    void setPointSize(float) -> f
    void setRange(double[],int) -> a
    boolean isInitialRangeSet() -> Y
    boolean isInitialRangeSet(int) -> t
    double[] getInitialRange(int) -> u
    int getXLabelsColor() -> Z
    int getYLabelsColor(int) -> v
    android.graphics.Paint$Align getXLabelsAlign() -> aa
    void setXLabelsAlign(android.graphics.Paint$Align) -> a
    android.graphics.Paint$Align getYLabelsAlign(int) -> w
    void setYLabelsAlign(android.graphics.Paint$Align) -> b
    android.graphics.Paint$Align getYAxisAlign(int) -> x
    void setYLabelsAlign(android.graphics.Paint$Align,int) -> a
    int getScalesCount() -> ab
org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation -> b.a.c.e:
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation HORIZONTAL -> a
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation VERTICAL -> b
    int mAngle -> c
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation[] $VALUES -> d
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation[] values() -> values
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation valueOf(java.lang.String) -> valueOf
    int getAngle() -> a
org.achartengine.renderer.XYSeriesRenderer -> b.a.c.f:
    boolean mFillPoints -> a
    boolean mFillBelowLine -> b
    int mFillColor -> c
    org.achartengine.chart.PointStyle mPointStyle -> d
    float mLineWidth -> e
    boolean isFillBelowLine() -> l
    boolean isFillPoints() -> m
    void setFillPoints(boolean) -> a
    int getFillBelowLineColor() -> n
    org.achartengine.chart.PointStyle getPointStyle() -> o
    void setPointStyle(org.achartengine.chart.PointStyle) -> a
    float getLineWidth() -> p
    void setLineWidth(float) -> a
org.achartengine.tools.AbstractTool -> b.a.d.a:
    org.achartengine.chart.AbstractChart mChart -> a
    org.achartengine.renderer.XYMultipleSeriesRenderer mRenderer -> b
    double[] getRange(int) -> a
    void checkRange(double[],int) -> a
    void setXRange(double,double,int) -> a
    void setYRange(double,double,int) -> b
org.achartengine.tools.FitZoom -> b.a.d.b:
    void apply() -> a
org.achartengine.tools.Pan -> b.a.d.c:
    java.util.List mPanListeners -> c
    boolean limitsReachedX -> d
    boolean limitsReachedY -> e
    void apply(float,float,float,float) -> a
    double getAxisRatio(double[]) -> a
    void notifyPanListeners() -> a
org.achartengine.tools.PanListener -> b.a.d.d:
    void panApplied() -> a
org.achartengine.tools.Zoom -> b.a.d.e:
    boolean mZoomIn -> c
    float mZoomRate -> d
    java.util.List mZoomListeners -> e
    boolean limitsReachedX -> f
    boolean limitsReachedY -> g
    void setZoomRate(float) -> a
    void apply(int) -> b
    void notifyZoomListeners(org.achartengine.tools.ZoomEvent) -> a
    void notifyZoomResetListeners() -> a
org.achartengine.tools.ZoomEvent -> b.a.d.f:
    boolean mZoomIn -> a
    float mZoomRate -> b
org.achartengine.tools.ZoomListener -> b.a.d.g:
    void zoomApplied(org.achartengine.tools.ZoomEvent) -> a
    void zoomReset() -> a
org.achartengine.util.IndexXYMap -> b.a.e.a:
    java.util.List indexList -> a
    double maxXDifference -> b
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void updateMaxXDifference() -> a
    void clear() -> clear
    java.lang.Object getXByIndex(int) -> a
    java.lang.Object getYByIndex(int) -> b
    int getIndexForKey(java.lang.Object) -> a
org.achartengine.util.MathHelper -> b.a.e.b:
    java.text.NumberFormat FORMAT -> a
    java.util.List getLabels(double,double,int) -> a
    double[] computeLabels(double,double,int) -> b
    double roundUp(double) -> a
    float[] getFloats(java.util.List) -> a
    double[] getDoubles(java.util.List) -> b
org.mozilla.universalchardet.CharsetListener -> b.b.a.a:
    void report(java.lang.String) -> a
org.mozilla.universalchardet.Constants -> b.b.a.b:
    java.lang.String CHARSET_ISO_2022_JP -> a
    java.lang.String CHARSET_ISO_2022_CN -> b
    java.lang.String CHARSET_ISO_2022_KR -> c
    java.lang.String CHARSET_ISO_8859_5 -> d
    java.lang.String CHARSET_ISO_8859_7 -> e
    java.lang.String CHARSET_ISO_8859_8 -> f
    java.lang.String CHARSET_BIG5 -> g
    java.lang.String CHARSET_GB18030 -> h
    java.lang.String CHARSET_EUC_JP -> i
    java.lang.String CHARSET_EUC_KR -> j
    java.lang.String CHARSET_EUC_TW -> k
    java.lang.String CHARSET_SHIFT_JIS -> l
    java.lang.String CHARSET_IBM855 -> m
    java.lang.String CHARSET_IBM866 -> n
    java.lang.String CHARSET_KOI8_R -> o
    java.lang.String CHARSET_MACCYRILLIC -> p
    java.lang.String CHARSET_WINDOWS_1251 -> q
    java.lang.String CHARSET_WINDOWS_1252 -> r
    java.lang.String CHARSET_WINDOWS_1253 -> s
    java.lang.String CHARSET_WINDOWS_1255 -> t
    java.lang.String CHARSET_UTF_8 -> u
    java.lang.String CHARSET_UTF_16BE -> v
    java.lang.String CHARSET_UTF_16LE -> w
    java.lang.String CHARSET_UTF_32BE -> x
    java.lang.String CHARSET_UTF_32LE -> y
    java.lang.String CHARSET_HZ_GB_2312 -> z
    java.lang.String CHARSET_X_ISO_10646_UCS_4_3412 -> A
    java.lang.String CHARSET_X_ISO_10646_UCS_4_2143 -> B
org.mozilla.universalchardet.UniversalDetector -> b.b.a.c:
    org.mozilla.universalchardet.UniversalDetector$InputState inputState -> a
    boolean done -> b
    boolean start -> c
    boolean gotData -> d
    byte lastChar -> e
    java.lang.String detectedCharset -> f
    org.mozilla.universalchardet.prober.CharsetProber[] probers -> g
    org.mozilla.universalchardet.prober.CharsetProber escCharsetProber -> h
    org.mozilla.universalchardet.CharsetListener listener -> i
    boolean isDone() -> a
    java.lang.String getDetectedCharset() -> b
    void handleData(byte[],int,int) -> a
    void dataEnd() -> c
    void reset() -> d
org.mozilla.universalchardet.UniversalDetector$InputState -> b.b.a.d:
    org.mozilla.universalchardet.UniversalDetector$InputState PURE_ASCII -> a
    org.mozilla.universalchardet.UniversalDetector$InputState ESC_ASCII -> b
    org.mozilla.universalchardet.UniversalDetector$InputState HIGHBYTE -> c
    org.mozilla.universalchardet.UniversalDetector$InputState[] $VALUES -> d
    org.mozilla.universalchardet.UniversalDetector$InputState[] values() -> values
    org.mozilla.universalchardet.UniversalDetector$InputState valueOf(java.lang.String) -> valueOf
org.mozilla.universalchardet.prober.Big5Prober -> b.b.a.a.a:
    org.mozilla.universalchardet.prober.statemachine.CodingStateMachine codingSM -> a
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState state -> b
    org.mozilla.universalchardet.prober.distributionanalysis.Big5DistributionAnalysis distributionAnalyzer -> c
    byte[] lastChar -> d
    org.mozilla.universalchardet.prober.statemachine.SMModel smModel -> e
    java.lang.String getCharSetName() -> a
    float getConfidence() -> b
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState getState() -> c
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState handleData(byte[],int,int) -> a
    void reset() -> d
org.mozilla.universalchardet.prober.CharsetProber -> b.b.a.a.b:
    java.lang.String getCharSetName() -> a
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState handleData(byte[],int,int) -> a
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState getState() -> c
    void reset() -> d
    float getConfidence() -> b
    java.nio.ByteBuffer filterWithoutEnglishLetters(byte[],int,int) -> b
    java.nio.ByteBuffer filterWithEnglishLetters(byte[],int,int) -> c
    boolean isAscii(byte) -> a
    boolean isAsciiSymbol(byte) -> b
org.mozilla.universalchardet.prober.CharsetProber$ProbingState -> b.b.a.a.c:
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState DETECTING -> a
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState FOUND_IT -> b
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState NOT_ME -> c
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState[] $VALUES -> d
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState[] values() -> values
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState valueOf(java.lang.String) -> valueOf
org.mozilla.universalchardet.prober.EUCJPProber -> b.b.a.a.d:
    org.mozilla.universalchardet.prober.statemachine.CodingStateMachine codingSM -> a
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState state -> b
    org.mozilla.universalchardet.prober.contextanalysis.EUCJPContextAnalysis contextAnalyzer -> c
    org.mozilla.universalchardet.prober.distributionanalysis.EUCJPDistributionAnalysis distributionAnalyzer -> d
    byte[] lastChar -> e
    org.mozilla.universalchardet.prober.statemachine.SMModel smModel -> f
    java.lang.String getCharSetName() -> a
    float getConfidence() -> b
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState getState() -> c
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState handleData(byte[],int,int) -> a
    void reset() -> d
org.mozilla.universalchardet.prober.EUCKRProber -> b.b.a.a.e:
    org.mozilla.universalchardet.prober.statemachine.CodingStateMachine codingSM -> a
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState state -> b
    org.mozilla.universalchardet.prober.distributionanalysis.EUCKRDistributionAnalysis distributionAnalyzer -> c
    byte[] lastChar -> d
    org.mozilla.universalchardet.prober.statemachine.SMModel smModel -> e
    java.lang.String getCharSetName() -> a
    float getConfidence() -> b
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState getState() -> c
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState handleData(byte[],int,int) -> a
    void reset() -> d
org.mozilla.universalchardet.prober.EUCTWProber -> b.b.a.a.f:
    org.mozilla.universalchardet.prober.statemachine.CodingStateMachine codingSM -> a
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState state -> b
    org.mozilla.universalchardet.prober.distributionanalysis.EUCTWDistributionAnalysis distributionAnalyzer -> c
    byte[] lastChar -> d
    org.mozilla.universalchardet.prober.statemachine.SMModel smModel -> e
    java.lang.String getCharSetName() -> a
    float getConfidence() -> b
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState getState() -> c
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState handleData(byte[],int,int) -> a
    void reset() -> d
org.mozilla.universalchardet.prober.EscCharsetProber -> b.b.a.a.g:
    org.mozilla.universalchardet.prober.statemachine.CodingStateMachine[] codingSM -> a
    int activeSM -> b
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState state -> c
    java.lang.String detectedCharset -> d
    org.mozilla.universalchardet.prober.statemachine.HZSMModel hzsModel -> e
    org.mozilla.universalchardet.prober.statemachine.ISO2022CNSMModel iso2022cnModel -> f
    org.mozilla.universalchardet.prober.statemachine.ISO2022JPSMModel iso2022jpModel -> g
    org.mozilla.universalchardet.prober.statemachine.ISO2022KRSMModel iso2022krModel -> h
    java.lang.String getCharSetName() -> a
    float getConfidence() -> b
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState getState() -> c
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState handleData(byte[],int,int) -> a
    void reset() -> d
org.mozilla.universalchardet.prober.GB18030Prober -> b.b.a.a.h:
    org.mozilla.universalchardet.prober.statemachine.CodingStateMachine codingSM -> a
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState state -> b
    org.mozilla.universalchardet.prober.distributionanalysis.GB2312DistributionAnalysis distributionAnalyzer -> c
    byte[] lastChar -> d
    org.mozilla.universalchardet.prober.statemachine.SMModel smModel -> e
    java.lang.String getCharSetName() -> a
    float getConfidence() -> b
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState getState() -> c
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState handleData(byte[],int,int) -> a
    void reset() -> d
org.mozilla.universalchardet.prober.HebrewProber -> b.b.a.a.i:
    int finalCharLogicalScore -> a
    int finalCharVisualScore -> b
    byte prev -> c
    byte beforePrev -> d
    org.mozilla.universalchardet.prober.CharsetProber logicalProber -> e
    org.mozilla.universalchardet.prober.CharsetProber visualProber -> f
    void setModalProbers(org.mozilla.universalchardet.prober.CharsetProber,org.mozilla.universalchardet.prober.CharsetProber) -> a
    java.lang.String getCharSetName() -> a
    float getConfidence() -> b
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState getState() -> c
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState handleData(byte[],int,int) -> a
    void reset() -> d
    boolean isFinal(byte) -> a
    boolean isNonFinal(byte) -> b
org.mozilla.universalchardet.prober.Latin1Prober -> b.b.a.a.j:
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState state -> a
    byte lastCharClass -> b
    int[] freqCounter -> c
    byte[] latin1CharToClass -> d
    byte[] latin1ClassModel -> e
    java.lang.String getCharSetName() -> a
    float getConfidence() -> b
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState getState() -> c
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState handleData(byte[],int,int) -> a
    void reset() -> d
org.mozilla.universalchardet.prober.MBCSGroupProber -> b.b.a.a.k:
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState state -> a
    org.mozilla.universalchardet.prober.CharsetProber[] probers -> b
    boolean[] isActive -> c
    int bestGuess -> d
    int activeNum -> e
    java.lang.String getCharSetName() -> a
    float getConfidence() -> b
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState getState() -> c
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState handleData(byte[],int,int) -> a
    void reset() -> d
org.mozilla.universalchardet.prober.SBCSGroupProber -> b.b.a.a.l:
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState state -> a
    org.mozilla.universalchardet.prober.CharsetProber[] probers -> b
    boolean[] isActive -> c
    int bestGuess -> d
    int activeNum -> e
    org.mozilla.universalchardet.prober.sequence.SequenceModel win1251Model -> f
    org.mozilla.universalchardet.prober.sequence.SequenceModel koi8rModel -> g
    org.mozilla.universalchardet.prober.sequence.SequenceModel latin5Model -> h
    org.mozilla.universalchardet.prober.sequence.SequenceModel macCyrillicModel -> i
    org.mozilla.universalchardet.prober.sequence.SequenceModel ibm866Model -> j
    org.mozilla.universalchardet.prober.sequence.SequenceModel ibm855Model -> k
    org.mozilla.universalchardet.prober.sequence.SequenceModel latin7Model -> l
    org.mozilla.universalchardet.prober.sequence.SequenceModel win1253Model -> m
    org.mozilla.universalchardet.prober.sequence.SequenceModel latin5BulgarianModel -> n
    org.mozilla.universalchardet.prober.sequence.SequenceModel win1251BulgarianModel -> o
    org.mozilla.universalchardet.prober.sequence.SequenceModel hebrewModel -> p
    java.lang.String getCharSetName() -> a
    float getConfidence() -> b
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState getState() -> c
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState handleData(byte[],int,int) -> a
    void reset() -> d
org.mozilla.universalchardet.prober.SJISProber -> b.b.a.a.m:
    org.mozilla.universalchardet.prober.statemachine.CodingStateMachine codingSM -> a
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState state -> b
    org.mozilla.universalchardet.prober.contextanalysis.SJISContextAnalysis contextAnalyzer -> c
    org.mozilla.universalchardet.prober.distributionanalysis.SJISDistributionAnalysis distributionAnalyzer -> d
    byte[] lastChar -> e
    org.mozilla.universalchardet.prober.statemachine.SMModel smModel -> f
    java.lang.String getCharSetName() -> a
    float getConfidence() -> b
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState getState() -> c
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState handleData(byte[],int,int) -> a
    void reset() -> d
org.mozilla.universalchardet.prober.SingleByteCharsetProber -> b.b.a.a.n:
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState state -> a
    org.mozilla.universalchardet.prober.sequence.SequenceModel model -> b
    boolean reversed -> c
    short lastOrder -> d
    int totalSeqs -> e
    int[] seqCounters -> f
    int totalChar -> g
    int freqChar -> h
    org.mozilla.universalchardet.prober.CharsetProber nameProber -> i
    java.lang.String getCharSetName() -> a
    float getConfidence() -> b
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState getState() -> c
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState handleData(byte[],int,int) -> a
    void reset() -> d
org.mozilla.universalchardet.prober.UTF8Prober -> b.b.a.a.o:
    org.mozilla.universalchardet.prober.statemachine.CodingStateMachine codingSM -> a
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState state -> b
    int numOfMBChar -> c
    org.mozilla.universalchardet.prober.statemachine.SMModel smModel -> d
    java.lang.String getCharSetName() -> a
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState handleData(byte[],int,int) -> a
    org.mozilla.universalchardet.prober.CharsetProber$ProbingState getState() -> c
    void reset() -> d
    float getConfidence() -> b
org.mozilla.universalchardet.prober.contextanalysis.EUCJPContextAnalysis -> b.b.a.a.a.a:
    int getOrder(byte[],int) -> a
org.mozilla.universalchardet.prober.contextanalysis.JapaneseContextAnalysis -> b.b.a.a.a.b:
    int[] relSample -> b
    int totalRel -> c
    int lastCharOrder -> d
    int needToSkipCharNum -> e
    boolean done -> f
    org.mozilla.universalchardet.prober.contextanalysis.JapaneseContextAnalysis$Order tmpOrder -> g
    byte[][] jp2CharContext -> a
    void handleOneChar(byte[],int,int) -> a
    float getConfidence() -> a
    void reset() -> b
    boolean gotEnoughData() -> c
    int getOrder(byte[],int) -> a
org.mozilla.universalchardet.prober.contextanalysis.JapaneseContextAnalysis$Order -> b.b.a.a.a.c:
    int order -> a
    int charLength -> b
    org.mozilla.universalchardet.prober.contextanalysis.JapaneseContextAnalysis this$0 -> c
org.mozilla.universalchardet.prober.contextanalysis.SJISContextAnalysis -> b.b.a.a.a.d:
    int getOrder(byte[],int) -> a
org.mozilla.universalchardet.prober.distributionanalysis.Big5DistributionAnalysis -> b.b.a.a.b.a:
    int[] big5CharToFreqOrder -> d
    int getOrder(byte[],int) -> a
org.mozilla.universalchardet.prober.distributionanalysis.CharDistributionAnalysis -> b.b.a.a.b.b:
    int freqChars -> d
    int totalChars -> e
    int[] charToFreqOrder -> a
    float typicalDistributionRatio -> b
    boolean done -> c
    void handleOneChar(byte[],int,int) -> a
    float getConfidence() -> a
    void reset() -> b
    boolean gotEnoughData() -> c
    int getOrder(byte[],int) -> a
org.mozilla.universalchardet.prober.distributionanalysis.EUCJPDistributionAnalysis -> b.b.a.a.b.c:
    int getOrder(byte[],int) -> a
org.mozilla.universalchardet.prober.distributionanalysis.EUCKRDistributionAnalysis -> b.b.a.a.b.d:
    int[] euckrCharToFreqOrder -> d
    int getOrder(byte[],int) -> a
org.mozilla.universalchardet.prober.distributionanalysis.EUCTWDistributionAnalysis -> b.b.a.a.b.e:
    int[] euctwCharToFreqOrder -> d
    int getOrder(byte[],int) -> a
org.mozilla.universalchardet.prober.distributionanalysis.GB2312DistributionAnalysis -> b.b.a.a.b.f:
    int[] gb2312CharToFreqOrder -> d
    int getOrder(byte[],int) -> a
org.mozilla.universalchardet.prober.distributionanalysis.JISDistributionAnalysis -> b.b.a.a.b.g:
    int[] jisCharToFreqOrder -> d
org.mozilla.universalchardet.prober.distributionanalysis.SJISDistributionAnalysis -> b.b.a.a.b.h:
    int getOrder(byte[],int) -> a
org.mozilla.universalchardet.prober.sequence.BulgarianModel -> b.b.a.a.c.a:
    byte[] bulgarianLangModel -> f
org.mozilla.universalchardet.prober.sequence.CyrillicModel -> b.b.a.a.c.b:
    byte[] russianLangModel -> f
org.mozilla.universalchardet.prober.sequence.GreekModel -> b.b.a.a.c.c:
    byte[] greekLangModel -> f
org.mozilla.universalchardet.prober.sequence.HebrewModel -> b.b.a.a.c.d:
    short[] win1255CharToOrderMap -> f
    byte[] hebrewLangModel -> g
org.mozilla.universalchardet.prober.sequence.Ibm855Model -> b.b.a.a.c.e:
    short[] ibm855CharToOrderMap -> f
org.mozilla.universalchardet.prober.sequence.Ibm866Model -> b.b.a.a.c.f:
    short[] ibm866CharToOrderMap -> f
org.mozilla.universalchardet.prober.sequence.Koi8rModel -> b.b.a.a.c.g:
    short[] koi8rCharToOrderMap -> f
org.mozilla.universalchardet.prober.sequence.Latin5BulgarianModel -> b.b.a.a.c.h:
    short[] latin5BulgarianCharToOrderMap -> f
org.mozilla.universalchardet.prober.sequence.Latin5Model -> b.b.a.a.c.i:
    short[] latin5CharToOrderMap -> f
org.mozilla.universalchardet.prober.sequence.Latin7Model -> b.b.a.a.c.j:
    short[] latin7CharToOrderMap -> f
org.mozilla.universalchardet.prober.sequence.MacCyrillicModel -> b.b.a.a.c.k:
    short[] macCyrillicCharToOrderMap -> f
org.mozilla.universalchardet.prober.sequence.SequenceModel -> b.b.a.a.c.l:
    short[] charToOrderMap -> a
    byte[] precedenceMatrix -> b
    float typicalPositiveRatio -> c
    boolean keepEnglishLetter -> d
    java.lang.String charsetName -> e
    short getOrder(byte) -> a
    byte getPrecedence(int) -> a
    float getTypicalPositiveRatio() -> a
    java.lang.String getCharsetName() -> b
org.mozilla.universalchardet.prober.sequence.Win1251BulgarianModel -> b.b.a.a.c.m:
    short[] win1251BulgarianCharToOrderMap -> f
org.mozilla.universalchardet.prober.sequence.Win1251Model -> b.b.a.a.c.n:
    short[] win1251CharToOrderMap -> f
org.mozilla.universalchardet.prober.sequence.Win1253Model -> b.b.a.a.c.o:
    short[] win1253CharToOrderMap -> f
org.mozilla.universalchardet.prober.statemachine.Big5SMModel -> b.b.a.a.d.a:
    int[] big5ClassTable -> f
    int[] big5StateTable -> g
    int[] big5CharLenTable -> h
org.mozilla.universalchardet.prober.statemachine.CodingStateMachine -> b.b.a.a.d.b:
    org.mozilla.universalchardet.prober.statemachine.SMModel model -> a
    int currentState -> b
    int currentCharLen -> c
    int currentBytePos -> d
    int nextState(byte) -> a
    int getCurrentCharLen() -> a
    void reset() -> b
    java.lang.String getCodingStateMachine() -> c
org.mozilla.universalchardet.prober.statemachine.EUCJPSMModel -> b.b.a.a.d.c:
    int[] eucjpClassTable -> f
    int[] eucjpStateTable -> g
    int[] eucjpCharLenTable -> h
org.mozilla.universalchardet.prober.statemachine.EUCKRSMModel -> b.b.a.a.d.d:
    int[] euckrClassTable -> f
    int[] euckrStateTable -> g
    int[] euckrCharLenTable -> h
org.mozilla.universalchardet.prober.statemachine.EUCTWSMModel -> b.b.a.a.d.e:
    int[] euctwClassTable -> f
    int[] euctwStateTable -> g
    int[] euctwCharLenTable -> h
org.mozilla.universalchardet.prober.statemachine.GB18030SMModel -> b.b.a.a.d.f:
    int[] gb18030ClassTable -> f
    int[] gb18030StateTable -> g
    int[] gb18030CharLenTable -> h
org.mozilla.universalchardet.prober.statemachine.HZSMModel -> b.b.a.a.d.g:
    int[] hzsClassTable -> f
    int[] hzsStateTable -> g
    int[] hzsCharLenTable -> h
org.mozilla.universalchardet.prober.statemachine.ISO2022CNSMModel -> b.b.a.a.d.h:
    int[] iso2022cnClassTable -> f
    int[] iso2022cnStateTable -> g
    int[] iso2022cnCharLenTable -> h
org.mozilla.universalchardet.prober.statemachine.ISO2022JPSMModel -> b.b.a.a.d.i:
    int[] iso2022jpClassTable -> f
    int[] iso2022jpStateTable -> g
    int[] iso2022jpCharLenTable -> h
org.mozilla.universalchardet.prober.statemachine.ISO2022KRSMModel -> b.b.a.a.d.j:
    int[] iso2022krClassTable -> f
    int[] iso2022krStateTable -> g
    int[] iso2022krCharLenTable -> h
org.mozilla.universalchardet.prober.statemachine.PkgInt -> b.b.a.a.d.k:
    int indexShift -> a
    int shiftMask -> b
    int bitShift -> c
    int unitMask -> d
    int[] data -> e
    int pack16bits(int,int) -> a
    int pack8bits(int,int,int,int) -> a
    int pack4bits(int,int,int,int,int,int,int,int) -> a
    int unpack(int) -> a
org.mozilla.universalchardet.prober.statemachine.SJISSMModel -> b.b.a.a.d.l:
    int[] sjisClassTable -> f
    int[] sjisStateTable -> g
    int[] sjisCharLenTable -> h
org.mozilla.universalchardet.prober.statemachine.SMModel -> b.b.a.a.d.m:
    org.mozilla.universalchardet.prober.statemachine.PkgInt classTable -> a
    int classFactor -> b
    org.mozilla.universalchardet.prober.statemachine.PkgInt stateTable -> c
    int[] charLenTable -> d
    java.lang.String name -> e
    int getClass(byte) -> a
    int getNextState(int,int) -> a
    int getCharLen(int) -> a
    java.lang.String getName() -> a
org.mozilla.universalchardet.prober.statemachine.UTF8SMModel -> b.b.a.a.d.n:
    int[] utf8ClassTable -> f
    int[] utf8StateTable -> g
    int[] utf8CharLenTable -> h
