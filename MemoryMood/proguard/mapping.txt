android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> c
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitAllowingStateLoss() -> b
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> c
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.e:
    int mStyle -> a
    int mTheme -> b
    boolean mCancelable -> c
    boolean mShowsDialog -> d
    int mBackStackId -> e
    android.app.Dialog mDialog -> f
    boolean mViewDestroyed -> g
    boolean mDismissed -> h
    boolean mShownByMe -> i
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> a
    void dismissInternal(boolean) -> a
    int getTheme() -> a
    void onAttach(android.app.Activity) -> a
    void onDetach() -> b
    void onCreate(android.os.Bundle) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    android.app.Dialog onCreateDialog(android.os.Bundle) -> c
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> d
    void onStart() -> c
    void onSaveInstanceState(android.os.Bundle) -> e
    void onStop() -> d
    void onDestroyView() -> e
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> a
    int mState -> j
    android.view.View mAnimatingAway -> k
    int mStateAfterAnimating -> l
    android.os.Bundle mSavedFragmentState -> m
    android.util.SparseArray mSavedViewState -> n
    int mIndex -> o
    java.lang.String mWho -> p
    android.os.Bundle mArguments -> q
    android.support.v4.app.Fragment mTarget -> r
    int mTargetIndex -> s
    int mTargetRequestCode -> t
    boolean mAdded -> u
    boolean mRemoving -> v
    boolean mResumed -> w
    boolean mFromLayout -> x
    boolean mInLayout -> y
    boolean mRestored -> z
    int mBackStackNesting -> A
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> B
    android.support.v4.app.FragmentActivity mActivity -> C
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> D
    android.support.v4.app.Fragment mParentFragment -> E
    int mFragmentId -> F
    int mContainerId -> G
    java.lang.String mTag -> H
    boolean mHidden -> I
    boolean mDetached -> J
    boolean mRetainInstance -> K
    boolean mRetaining -> L
    boolean mHasMenu -> M
    boolean mMenuVisible -> N
    boolean mCalled -> O
    int mNextAnim -> P
    android.view.ViewGroup mContainer -> Q
    android.view.View mView -> R
    android.view.View mInnerView -> S
    boolean mDeferStart -> T
    boolean mUserVisibleHint -> U
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> V
    boolean mLoadersStarted -> W
    boolean mCheckedForLoaderManager -> X
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState(android.os.Bundle) -> f
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> f
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void setArguments(android.os.Bundle) -> g
    android.os.Bundle getArguments() -> g
    android.support.v4.app.FragmentActivity getActivity() -> h
    android.content.res.Resources getResources() -> i
    android.support.v4.app.FragmentManager getFragmentManager() -> j
    boolean isDetached() -> k
    void onHiddenChanged(boolean) -> b
    android.support.v4.app.LoaderManager getLoaderManager() -> l
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    android.view.View getView() -> m
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> h
    void onStart() -> c
    void onResume() -> n
    void onSaveInstanceState(android.os.Bundle) -> e
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> o
    void onStop() -> d
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> e
    void onDestroy() -> p
    void initState() -> q
    void onDetach() -> b
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> r
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> s
    void performCreate(android.os.Bundle) -> i
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> j
    void performStart() -> t
    void performResume() -> u
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> v
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> k
    void performPause() -> w
    void performStop() -> x
    void performReallyStop() -> y
    void performDestroyView() -> z
    void performDestroy() -> A
android.support.v4.app.Fragment$1 -> android.support.v4.app.f:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.g:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.h:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.i:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    java.util.HashMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> e
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.j:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.k:
    android.support.v4.app.FragmentActivity this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.l:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.m:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    java.util.HashMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.n:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.o:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void popBackStack(int,int) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.p:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.q:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void popBackStack(int,int) -> a
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.r:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.s:
    int val$id -> a
    int val$flags -> b
    android.support.v4.app.FragmentManagerImpl this$0 -> c
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.t:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.u:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.v:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.w:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.x:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.y:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.z:
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> c
    int commit() -> a
    int commitAllowingStateLoss() -> b
android.support.v4.app.LoaderManager -> android.support.v4.app.aa:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> a
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> b
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.ab:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.ac:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    boolean mCreatingLoader -> h
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> c
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> d
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> a
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> a
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> b
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.ad:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> a
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> b
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.ae:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.af:
android.support.v4.content.AsyncTaskLoader -> android.support.v4.a.a:
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> a
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> b
    long mUpdateThrottle -> c
    long mLastLoadCompleteTime -> d
    android.os.Handler mHandler -> e
    void onForceLoad() -> a
    boolean cancelLoad() -> b
    void onCanceled(java.lang.Object) -> a
    void executePendingTask() -> c
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> a
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> b
    java.lang.Object loadInBackground() -> d
    java.lang.Object onLoadInBackground() -> e
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.a.b:
    java.lang.Object result -> a
    boolean waiting -> b
    java.util.concurrent.CountDownLatch done -> e
    android.support.v4.content.AsyncTaskLoader this$0 -> c
    java.lang.Object doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Object) -> a
    void onCancelled() -> a
    void run() -> run
    java.lang.Object doInBackground(java.lang.Object[]) -> a
android.support.v4.content.CursorLoader -> android.support.v4.a.c:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> f
    android.net.Uri mUri -> g
    java.lang.String[] mProjection -> h
    java.lang.String mSelection -> i
    java.lang.String[] mSelectionArgs -> j
    java.lang.String mSortOrder -> k
    android.database.Cursor mCursor -> l
    android.database.Cursor loadInBackground() -> f
    void registerContentObserver(android.database.Cursor,android.database.ContentObserver) -> a
    void deliverResult(android.database.Cursor) -> a
    void onStartLoading() -> g
    void onStopLoading() -> h
    void onCanceled(android.database.Cursor) -> b
    void onReset() -> i
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    java.lang.Object loadInBackground() -> d
    void onCanceled(java.lang.Object) -> a
    void deliverResult(java.lang.Object) -> b
android.support.v4.content.Loader -> android.support.v4.a.d:
    int mId -> m
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> n
    android.content.Context mContext -> o
    boolean mStarted -> p
    boolean mAbandoned -> q
    boolean mReset -> r
    boolean mContentChanged -> s
    void deliverResult(java.lang.Object) -> b
    android.content.Context getContext() -> j
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    boolean isStarted() -> k
    boolean isAbandoned() -> l
    boolean isReset() -> m
    void startLoading() -> n
    void onStartLoading() -> g
    void forceLoad() -> o
    void onForceLoad() -> a
    void stopLoading() -> p
    void onStopLoading() -> h
    void abandon() -> q
    void onAbandon() -> r
    void reset() -> s
    void onReset() -> i
    boolean takeContentChanged() -> t
    void onContentChanged() -> u
    java.lang.String dataToString(java.lang.Object) -> c
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.a.e:
    android.support.v4.content.Loader this$0 -> a
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.f:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> a
android.support.v4.content.ModernAsyncTask -> android.support.v4.a.g:
    java.util.concurrent.ThreadFactory sThreadFactory -> a
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> b
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> d
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> c
    java.util.concurrent.Executor sDefaultExecutor -> e
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> f
    java.util.concurrent.FutureTask mFuture -> g
    android.support.v4.content.ModernAsyncTask$Status mStatus -> h
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> i
    void postResultIfNotInvoked(java.lang.Object) -> c
    java.lang.Object postResult(java.lang.Object) -> d
    java.lang.Object doInBackground(java.lang.Object[]) -> a
    void onPreExecute() -> b
    void onPostExecute(java.lang.Object) -> a
    void onProgressUpdate(java.lang.Object[]) -> b
    void onCancelled(java.lang.Object) -> b
    void onCancelled() -> a
    boolean isCancelled() -> c
    boolean cancel(boolean) -> a
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> a
    void finish(java.lang.Object) -> e
    java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> a
    java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> a
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> b
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> c
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.a.h:
    java.util.concurrent.atomic.AtomicInteger mCount -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.a.i:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.a.j:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.a.k:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> a
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.a.l:
    android.support.v4.content.ModernAsyncTask mTask -> a
    java.lang.Object[] mData -> b
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.a.m:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.a.n:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> a
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> b
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> c
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> d
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.a.o:
    java.lang.Object[] mParams -> b
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.c:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    java.lang.Object get(int) -> a
    java.lang.Object get(int,java.lang.Object) -> a
    void delete(int) -> b
    void remove(int) -> c
    void gc() -> c
    void put(int,java.lang.Object) -> b
    int size() -> a
    int keyAt(int) -> d
    java.lang.Object valueAt(int) -> e
    void clear() -> b
    int binarySearch(int[],int,int,int) -> a
    int idealByteArraySize(int) -> f
    int idealIntArraySize(int) -> g
android.support.v4.util.TimeUtils -> android.support.v4.c.d:
    java.lang.Object sFormatSync -> a
    char[] sFormatStr -> b
    int accumField(int,int,boolean,int) -> a
    int printField(char[],int,char,int,boolean,int) -> a
    int formatDurationLocked(long,int) -> a
    void formatDuration(long,java.io.PrintWriter,int) -> a
    void formatDuration(long,java.io.PrintWriter) -> a
    void formatDuration(long,long,java.io.PrintWriter) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.a:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.b:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.c:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.d:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.e:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> a
android.support.v4.view.MotionEventCompat -> android.support.v4.view.f:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionIndex(android.view.MotionEvent) -> a
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.g:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.h:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.i:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.j:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.PagerAdapter -> android.support.v4.view.k:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.l:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.m:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.n:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.o:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.p:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.ViewCompat -> android.support.v4.view.q:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.r:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.s:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.t:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.u:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.v:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.w:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.x:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.y:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.z:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.aa:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ab:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    java.util.Comparator COMPARATOR -> b
    android.view.animation.Interpolator sInterpolator -> c
    java.util.ArrayList mItems -> d
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> e
    android.graphics.Rect mTempRect -> f
    android.support.v4.view.PagerAdapter mAdapter -> g
    int mCurItem -> h
    int mRestoredCurItem -> i
    android.os.Parcelable mRestoredAdapterState -> j
    java.lang.ClassLoader mRestoredClassLoader -> k
    android.widget.Scroller mScroller -> l
    android.support.v4.view.ViewPager$PagerObserver mObserver -> m
    int mPageMargin -> n
    android.graphics.drawable.Drawable mMarginDrawable -> o
    int mTopPageBounds -> p
    int mBottomPageBounds -> q
    float mFirstOffset -> r
    float mLastOffset -> s
    int mChildWidthMeasureSpec -> t
    int mChildHeightMeasureSpec -> u
    boolean mInLayout -> v
    boolean mScrollingCacheEnabled -> w
    boolean mPopulatePending -> x
    int mOffscreenPageLimit -> y
    boolean mIsBeingDragged -> z
    boolean mIsUnableToDrag -> A
    int mDefaultGutterSize -> B
    int mGutterSize -> C
    int mTouchSlop -> D
    float mInitialMotionX -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    int mActivePointerId -> H
    android.view.VelocityTracker mVelocityTracker -> I
    int mMinimumVelocity -> J
    int mMaximumVelocity -> K
    int mFlingDistance -> L
    int mCloseEnough -> M
    int mSeenPositionMin -> N
    int mSeenPositionMax -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> R
    boolean mFirstLayout -> S
    boolean mNeedCalculatePageOffsets -> T
    boolean mCalledSuper -> U
    int mDecorChildCount -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> X
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> Y
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> Z
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> aa
    int mDrawingOrder -> ab
    java.util.ArrayList mDrawingOrderedChildren -> ac
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> ad
    java.lang.Runnable mEndScrollRunnable -> ae
    int mScrollState -> af
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> f
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> a
    void populate() -> b
    void populate(int) -> a
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> g
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> h
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> c
    boolean pageRight() -> d
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$400() -> e
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ac:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ad:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ae:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.af:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ag:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ah:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ai:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.aj:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ak:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.al:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.am:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.widget.CursorAdapter -> android.support.v4.d.a:
    boolean mDataValid -> a
    boolean mAutoRequery -> b
    android.database.Cursor mCursor -> c
    android.content.Context mContext -> d
    int mRowIDColumn -> e
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> f
    android.database.DataSetObserver mDataSetObserver -> g
    android.support.v4.widget.CursorFilter mCursorFilter -> h
    android.widget.FilterQueryProvider mFilterQueryProvider -> i
    void init(android.content.Context,android.database.Cursor,int) -> a
    android.database.Cursor getCursor() -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> a
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> b
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> a
    void changeCursor(android.database.Cursor) -> a
    android.database.Cursor swapCursor(android.database.Cursor) -> b
    java.lang.CharSequence convertToString(android.database.Cursor) -> c
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> a
    android.widget.Filter getFilter() -> getFilter
    void onContentChanged() -> b
android.support.v4.widget.CursorAdapter$1 -> android.support.v4.d.b:
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.d.c:
    android.support.v4.widget.CursorAdapter this$0 -> a
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.d.d:
    android.support.v4.widget.CursorAdapter this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.d.e:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> a
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.d.f:
    java.lang.CharSequence convertToString(android.database.Cursor) -> c
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> a
    android.database.Cursor getCursor() -> a
    void changeCursor(android.database.Cursor) -> a
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.d.g:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.d.h:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.d.i:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.d.j:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.d.k:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.d.l:
    int mLayout -> j
    int mDropDownLayout -> k
    android.view.LayoutInflater mInflater -> l
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> a
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> b
android.support.v4.widget.SimpleCursorAdapter -> android.support.v4.d.m:
    int[] mFrom -> j
    int[] mTo -> k
    int mStringConversionColumn -> m
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> n
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> o
    java.lang.String[] mOriginalFrom -> l
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> a
    void setViewImage(android.widget.ImageView,java.lang.String) -> a
    void setViewText(android.widget.TextView,java.lang.String) -> a
    java.lang.CharSequence convertToString(android.database.Cursor) -> c
    void findColumns(java.lang.String[]) -> a
    android.database.Cursor swapCursor(android.database.Cursor) -> b
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter -> android.support.v4.d.n:
    java.lang.CharSequence convertToString(android.database.Cursor) -> a
android.support.v4.widget.SimpleCursorAdapter$ViewBinder -> android.support.v4.d.o:
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> a
com.dailystudio.GlobalContextWrapper -> com.dailystudio.a:
    android.content.Context sContext -> a
    void bindContext(android.content.Context) -> a
    void unbindContext(android.content.Context) -> b
    android.content.Context getContext() -> a
com.dailystudio.app.dataobject.BaseDatabaseStream -> com.dailystudio.app.dataobject.a:
    com.dailystudio.dataobject.database.DatabaseConnectivity mConnectivity -> b
    com.dailystudio.app.dataobject.QueryBuilder mQueryBuilder -> a
    com.dailystudio.app.dataobject.QueryBuilder onCreateQueryBuilder(java.lang.Class) -> a
    com.dailystudio.dataobject.database.DatabaseConnectivity getConnectivity() -> a
com.dailystudio.app.dataobject.CountObject -> com.dailystudio.app.dataobject.CountObject:
    com.dailystudio.dataobject.Column COLUMN_ID -> a
    com.dailystudio.dataobject.Column COLUMN_COUNT -> b
    com.dailystudio.dataobject.Column[] sColumns -> f
    int getCount() -> a
    java.lang.String toString() -> toString
com.dailystudio.app.dataobject.DatabaseReader -> com.dailystudio.app.dataobject.b:
    com.dailystudio.app.dataobject.QueryBuilder onCreateQueryBuilder(java.lang.Class) -> a
    java.util.List query(com.dailystudio.dataobject.query.Query) -> a
    java.util.List query(com.dailystudio.dataobject.query.Query,java.lang.Class) -> a
    java.util.List queryTopN(com.dailystudio.dataobject.query.Query,int) -> a
    long queryCount(com.dailystudio.dataobject.query.Query) -> b
com.dailystudio.app.dataobject.DatabaseWriter -> com.dailystudio.app.dataobject.c:
    long insert(com.dailystudio.dataobject.DatabaseObject) -> a
    int delete(com.dailystudio.dataobject.query.Query) -> a
com.dailystudio.app.dataobject.QueryBuilder -> com.dailystudio.app.dataobject.d:
    java.lang.Class mObjectClass -> a
    com.dailystudio.dataobject.query.Query getQuery() -> a
com.dailystudio.app.dataobject.asynctask.ConvertedDatabaseObjectsAsyncTask -> com.dailystudio.app.dataobject.a.a:
    android.content.Context mContext -> b
    android.content.Context getContext() -> a
    java.util.List doInBackground(java.lang.Void[]) -> a
    com.dailystudio.dataobject.database.DatabaseConnectivity getDatabaseConnectivity(java.lang.Class) -> a
    com.dailystudio.dataobject.query.Query getQuery(java.lang.Class) -> b
    java.lang.Class getProjectionClass() -> b
    java.lang.Class getObjectClass() -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> a
com.dailystudio.app.dataobject.loader.ConvertedDatabaseObjectsLoader -> com.dailystudio.app.dataobject.b.a:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> f
    java.util.List loadInBackground() -> f
    com.dailystudio.dataobject.database.DatabaseConnectivity getDatabaseConnectivity(java.lang.Class) -> a
    com.dailystudio.dataobject.query.Query getQuery(java.lang.Class) -> b
    java.lang.Class getProjectionClass() -> v
    java.lang.Class getObjectClass() -> w
    java.lang.Object loadInBackground() -> d
com.dailystudio.app.dataobject.loader.DatabaseCursorLoader -> com.dailystudio.app.dataobject.b.b:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> t
    android.database.Cursor loadInBackground() -> f
    com.dailystudio.dataobject.database.DatabaseConnectivity getDatabaseConnectivity(java.lang.Class) -> a
    com.dailystudio.dataobject.query.Query getQuery(java.lang.Class) -> b
    java.lang.Class getProjectionClass() -> v
    java.lang.Class getObjectClass() -> w
com.dailystudio.app.fragment.AbsAdapterFragment -> com.dailystudio.app.a.a:
    android.widget.AdapterView mAdapterView -> a
    android.widget.BaseAdapter mAdapter -> b
    com.dailystudio.app.fragment.AbsAdapterFragment$OnListItemSelectedListener mOnListItemSelectedListener -> c
    android.os.Handler mHandler -> d
    com.dailystudio.app.widget.DeferredHandler mDeferredHandler -> e
    java.lang.Runnable notifyAdapterChangedRunnable -> f
    void onActivityCreated(android.os.Bundle) -> d
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    int getAdapterViewId() -> a
    void bindAdapterView() -> B
    android.widget.BaseAdapter getAdapter() -> C
    void onAttach(android.app.Activity) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
    void removeCallbacks(java.lang.Runnable) -> a
    void post(java.lang.Runnable) -> b
    void bindData(android.widget.BaseAdapter,java.lang.Object) -> a
    android.widget.BaseAdapter onCreateAdapter() -> D
    android.widget.BaseAdapter access$0(com.dailystudio.app.fragment.AbsAdapterFragment) -> a
com.dailystudio.app.fragment.AbsAdapterFragment$1 -> com.dailystudio.app.a.b:
    com.dailystudio.app.fragment.AbsAdapterFragment this$0 -> a
    void run() -> run
com.dailystudio.app.fragment.AbsAdapterFragment$OnListItemSelectedListener -> com.dailystudio.app.a.c:
    void onListItemSelected(java.lang.Object) -> a
com.dailystudio.app.fragment.AbsArrayAdapterFragment -> com.dailystudio.app.a.d:
    java.lang.Runnable mSortAdapterRunnable -> a
    void onLoadFinished(android.support.v4.content.Loader,java.util.List) -> a
    void bindData(android.widget.BaseAdapter,java.util.List) -> a
    void sortAdapterIfPossible() -> E
    java.util.Comparator getComparator() -> F
    void bindData(android.widget.BaseAdapter,java.lang.Object) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
com.dailystudio.app.fragment.AbsArrayAdapterFragment$1 -> com.dailystudio.app.a.e:
    com.dailystudio.app.fragment.AbsArrayAdapterFragment this$0 -> a
    void run() -> run
com.dailystudio.app.fragment.AbsCursorAdapterFragment -> com.dailystudio.app.a.f:
    void onDestroy() -> p
    void bindAdapterView() -> B
    void bindData(android.widget.BaseAdapter,android.database.Cursor) -> a
    void swapCursor(android.database.Cursor) -> a
    void bindData(android.widget.BaseAdapter,java.lang.Object) -> a
com.dailystudio.app.fragment.AbsLoaderFragment -> com.dailystudio.app.a.g:
    void onActivityCreated(android.os.Bundle) -> d
    void onNewIntent(android.content.Intent) -> a
    void bindIntent(android.content.Intent) -> b
    void restartLoader() -> G
    int getEmptyViewId() -> H
    int getLoaderId() -> I
    android.os.Bundle createLoaderArguments() -> J
com.dailystudio.app.loader.AbsAsyncDataLoader -> com.dailystudio.app.b.a:
    java.lang.Object mData -> g
    void deliverResult(java.lang.Object) -> b
    void onStartLoading() -> g
    void onStopLoading() -> h
    void onCanceled(java.lang.Object) -> a
    void onReset() -> i
    void onReleaseData(java.lang.Object) -> d
com.dailystudio.app.utils.ActivityLauncher -> com.dailystudio.app.c.a:
    com.dailystudio.app.utils.ActivityLauncher$OnExceptionHandler sOnExceptionHandler -> a
    void launchActivity(android.content.Context,android.content.Intent,com.dailystudio.app.utils.ActivityLauncher$OnExceptionHandler) -> a
    void launchActivity(android.content.Context,android.content.Intent) -> a
com.dailystudio.app.utils.ActivityLauncher$1 -> com.dailystudio.app.c.b:
    void onException(android.content.Intent,java.lang.Exception) -> a
com.dailystudio.app.utils.ActivityLauncher$OnExceptionHandler -> com.dailystudio.app.c.c:
    void onException(android.content.Intent,java.lang.Exception) -> a
com.dailystudio.app.utils.BitmapUtils -> com.dailystudio.app.c.d:
    boolean saveBitmap(android.graphics.Bitmap,java.io.File) -> a
com.dailystudio.app.widget.DeferredHandler -> com.dailystudio.app.d.a:
    java.util.LinkedList mQueue -> a
    android.os.MessageQueue mMessageQueue -> b
    com.dailystudio.app.widget.DeferredHandler$Impl mHandler -> c
    void scheduleNextLocked() -> a
    java.util.LinkedList access$0(com.dailystudio.app.widget.DeferredHandler) -> a
com.dailystudio.app.widget.DeferredHandler$IdleRunnable -> com.dailystudio.app.d.b:
    java.lang.Runnable mRunnable -> a
    void run() -> run
com.dailystudio.app.widget.DeferredHandler$Impl -> com.dailystudio.app.d.c:
    com.dailystudio.app.widget.DeferredHandler this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
    boolean queueIdle() -> queueIdle
com.dailystudio.app.widget.SimpleDatabaseObjectCursorAdapter -> com.dailystudio.app.d.d:
    java.lang.Class mObjectClass -> m
    int mVersion -> n
    com.dailystudio.dataobject.DatabaseObject dumpItem(int) -> a
    com.dailystudio.dataobject.DatabaseObject dumpItem(android.database.Cursor) -> d
com.dailystudio.compat.CompatAsyncTask -> com.dailystudio.a.a:
    java.util.concurrent.ThreadFactory sThreadFactory -> b
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> c
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> a
    com.dailystudio.compat.CompatAsyncTask$InternalHandler sHandler -> d
    java.util.concurrent.Executor sDefaultExecutor -> e
    com.dailystudio.compat.CompatAsyncTask$WorkerRunnable mWorker -> f
    java.util.concurrent.FutureTask mFuture -> g
    com.dailystudio.compat.CompatAsyncTask$Status mStatus -> h
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> i
    int[] $SWITCH_TABLE$com$dailystudio$compat$CompatAsyncTask$Status -> j
    void postResultIfNotInvoked(java.lang.Object) -> c
    java.lang.Object postResult(java.lang.Object) -> d
    com.dailystudio.compat.CompatAsyncTask$Status getStatus() -> d
    java.lang.Object doInBackground(java.lang.Object[]) -> a
    void onPreExecute() -> e
    void onPostExecute(java.lang.Object) -> a
    void onProgressUpdate(java.lang.Object[]) -> b
    void onCancelled(java.lang.Object) -> b
    void onCancelled() -> f
    boolean isCancelled() -> g
    boolean cancel(boolean) -> a
    com.dailystudio.compat.CompatAsyncTask execute(java.lang.Object[]) -> c
    com.dailystudio.compat.CompatAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> a
    void finish(java.lang.Object) -> e
    void access$0(com.dailystudio.compat.CompatAsyncTask,java.lang.Object) -> a
    java.util.concurrent.atomic.AtomicBoolean access$1(com.dailystudio.compat.CompatAsyncTask) -> a
    java.lang.Object access$2(com.dailystudio.compat.CompatAsyncTask,java.lang.Object) -> b
    void access$3(com.dailystudio.compat.CompatAsyncTask,java.lang.Object) -> c
    int[] $SWITCH_TABLE$com$dailystudio$compat$CompatAsyncTask$Status() -> h
com.dailystudio.compat.CompatAsyncTask$1 -> com.dailystudio.a.b:
    java.util.concurrent.atomic.AtomicInteger mCount -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.dailystudio.compat.CompatAsyncTask$2 -> com.dailystudio.a.c:
    com.dailystudio.compat.CompatAsyncTask this$0 -> a
    java.lang.Object call() -> call
com.dailystudio.compat.CompatAsyncTask$3 -> com.dailystudio.a.d:
    com.dailystudio.compat.CompatAsyncTask this$0 -> a
    void done() -> done
com.dailystudio.compat.CompatAsyncTask$AsyncTaskResult -> com.dailystudio.a.e:
    com.dailystudio.compat.CompatAsyncTask mTask -> a
    java.lang.Object[] mData -> b
com.dailystudio.compat.CompatAsyncTask$InternalHandler -> com.dailystudio.a.f:
    void handleMessage(android.os.Message) -> handleMessage
com.dailystudio.compat.CompatAsyncTask$Status -> com.dailystudio.a.g:
    com.dailystudio.compat.CompatAsyncTask$Status PENDING -> a
    com.dailystudio.compat.CompatAsyncTask$Status RUNNING -> b
    com.dailystudio.compat.CompatAsyncTask$Status FINISHED -> c
    com.dailystudio.compat.CompatAsyncTask$Status[] ENUM$VALUES -> d
    com.dailystudio.compat.CompatAsyncTask$Status[] values() -> values
    com.dailystudio.compat.CompatAsyncTask$Status valueOf(java.lang.String) -> valueOf
com.dailystudio.compat.CompatAsyncTask$WorkerRunnable -> com.dailystudio.a.h:
    java.lang.Object[] mParams -> b
com.dailystudio.dataobject.BlobColumn -> com.dailystudio.b.a:
    void setValue(android.content.ContentValues,java.lang.Object) -> a
    java.lang.Object getValue(android.content.ContentValues) -> a
    boolean matchColumnType(java.lang.Object) -> a
    void parseValueFrom(android.database.Cursor,android.content.ContentValues) -> a
    java.lang.String convertValueToString(java.lang.Object) -> b
    java.lang.String byteArrayToHexString(byte[]) -> a
com.dailystudio.dataobject.Column -> com.dailystudio.b.b:
    java.lang.String mTypeName -> a
    java.lang.String mColName -> b
    boolean mAllowNull -> c
    boolean mIsPrimary -> d
    int mVersion -> e
    com.dailystudio.dataobject.query.ExpressionToken sEmtpyExpToken -> f
    com.dailystudio.dataobject.query.OrderingToken sEmtpyOrderToken -> g
    java.lang.String getName() -> a
    java.lang.String getType() -> b
    int getVerion() -> c
    boolean isValid() -> d
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    boolean matchColumnType(java.lang.Object) -> a
    void setValue(android.content.ContentValues,java.lang.Object) -> a
    java.lang.Object getValue(android.content.ContentValues) -> a
    void parseValueFrom(android.database.Cursor,android.content.ContentValues) -> a
    java.lang.String convertValueToString(java.lang.Object) -> b
    com.dailystudio.dataobject.query.ExpressionToken eq(java.lang.Object) -> c
    com.dailystudio.dataobject.query.ExpressionToken neq(java.lang.Object) -> d
    com.dailystudio.dataobject.query.ExpressionToken gt(java.lang.Object) -> e
    com.dailystudio.dataobject.query.ExpressionToken gte(java.lang.Object) -> f
    com.dailystudio.dataobject.query.ExpressionToken lt(java.lang.Object) -> g
    com.dailystudio.dataobject.query.ExpressionToken lte(java.lang.Object) -> h
    com.dailystudio.dataobject.query.ExpressionToken inValues(java.lang.Object[]) -> a
    com.dailystudio.dataobject.query.OrderingToken orderByAscending() -> e
    com.dailystudio.dataobject.query.OrderingToken orderByDescending() -> f
    com.dailystudio.dataobject.query.OrderingToken orderBy(java.lang.String) -> a
    com.dailystudio.dataobject.query.ExpressionToken binaryOperator(java.lang.String,java.lang.Object) -> a
    com.dailystudio.dataobject.query.ExpressionToken binaryOperator(java.lang.String,java.lang.Object[]) -> a
com.dailystudio.dataobject.DatabaseObject -> com.dailystudio.b.c:
    android.content.ContentValues mValues -> a
    com.dailystudio.dataobject.Template mTemplate -> c
    android.content.Context mContext -> d
    int mVersion -> e
    void initMembers() -> a
    com.dailystudio.dataobject.Template getTemplate() -> b
    android.content.ContentValues getValues() -> c
    void setValue(com.dailystudio.dataobject.Column,java.lang.Object) -> a
    java.lang.Object getValue(com.dailystudio.dataobject.Column) -> a
    int getIntegerValue(com.dailystudio.dataobject.Column) -> b
    long getLongValue(com.dailystudio.dataobject.Column) -> c
    double getDoubleValue(com.dailystudio.dataobject.Column) -> d
    java.lang.String getTextValue(com.dailystudio.dataobject.Column) -> e
    byte[] getBlobValue(com.dailystudio.dataobject.Column) -> f
    boolean isEmpty() -> d
    void fillValuesFromCursor(android.database.Cursor) -> a
    int getVersion() -> e
    java.lang.String[] toSQLProjection() -> f
    java.lang.String toSQLTableCreationString() -> g
    java.lang.String classToTable(java.lang.Class) -> a
    java.lang.String classToDatabase(java.lang.Class) -> b
com.dailystudio.dataobject.DatabaseObjectCreationParams -> com.dailystudio.b.d:
    java.lang.Class objectClass -> a
    int version -> b
com.dailystudio.dataobject.DatabaseObjectFactory -> com.dailystudio.b.e:
    com.dailystudio.dataobject.DatabaseObjectFactory getInstance() -> b
    com.dailystudio.dataobject.DatabaseObject createDatabaseObject(java.lang.Class) -> a
    com.dailystudio.dataobject.DatabaseObject createDatabaseObject(java.lang.Class,int) -> a
    void initMembers() -> c
    com.dailystudio.dataobject.DatabaseObject newObject(com.dailystudio.dataobject.DatabaseObjectCreationParams) -> a
    java.lang.Object newObject(java.lang.Object) -> a
com.dailystudio.dataobject.DoubleColumn -> com.dailystudio.b.f:
    void setValue(android.content.ContentValues,java.lang.Object) -> a
    java.lang.Object getValue(android.content.ContentValues) -> a
    boolean matchColumnType(java.lang.Object) -> a
    void parseValueFrom(android.database.Cursor,android.content.ContentValues) -> a
    java.lang.String convertValueToString(java.lang.Object) -> b
com.dailystudio.dataobject.IntegerColumn -> com.dailystudio.b.g:
    void setValue(android.content.ContentValues,java.lang.Object) -> a
    java.lang.Object getValue(android.content.ContentValues) -> a
    boolean matchColumnType(java.lang.Object) -> a
    void parseValueFrom(android.database.Cursor,android.content.ContentValues) -> a
    java.lang.String convertValueToString(java.lang.Object) -> b
com.dailystudio.dataobject.LongColumn -> com.dailystudio.b.h:
    void setValue(android.content.ContentValues,java.lang.Object) -> a
    java.lang.Object getValue(android.content.ContentValues) -> a
    boolean matchColumnType(java.lang.Object) -> a
    void parseValueFrom(android.database.Cursor,android.content.ContentValues) -> a
    java.lang.String convertValueToString(java.lang.Object) -> b
com.dailystudio.dataobject.Template -> com.dailystudio.b.i:
    java.util.List mColumns -> a
    java.util.HashMap mColumnsMap -> b
    void initMembers() -> c
    void addColumns(com.dailystudio.dataobject.Column[]) -> a
    void addColumn(com.dailystudio.dataobject.Column) -> a
    java.util.List listColumns() -> a
    boolean containsColumn(com.dailystudio.dataobject.Column) -> b
    boolean isEmpty() -> b
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.dailystudio.dataobject.TextColumn -> com.dailystudio.b.j:
    void setValue(android.content.ContentValues,java.lang.Object) -> a
    java.lang.Object getValue(android.content.ContentValues) -> a
    boolean matchColumnType(java.lang.Object) -> a
    void parseValueFrom(android.database.Cursor,android.content.ContentValues) -> a
    java.lang.String convertValueToString(java.lang.Object) -> b
    com.dailystudio.dataobject.query.ExpressionToken like(java.lang.String) -> a
com.dailystudio.dataobject.TimeColumn -> com.dailystudio.b.k:
    void setValue(android.content.ContentValues,java.lang.Object) -> a
    java.lang.Object getValue(android.content.ContentValues) -> a
    boolean matchColumnType(java.lang.Object) -> a
    void parseValueFrom(android.database.Cursor,android.content.ContentValues) -> a
    java.lang.String convertValueToString(java.lang.Object) -> b
    com.dailystudio.dataobject.query.OrderingToken groupByHour() -> g
    com.dailystudio.dataobject.query.OrderingToken groupByDay() -> h
    com.dailystudio.dataobject.query.OrderingToken groupByWeekday() -> i
    com.dailystudio.dataobject.query.OrderingToken groupByWeek() -> j
    com.dailystudio.dataobject.Column HOUR() -> k
    com.dailystudio.dataobject.Column WEEK() -> l
    com.dailystudio.dataobject.Column WEEKDAY() -> m
    com.dailystudio.dataobject.Column MONTH() -> n
com.dailystudio.dataobject.database.AbsDatabaseConnectivity -> com.dailystudio.b.a.a:
    android.content.Context mContext -> a
    java.lang.Class mObjectClass -> b
    int mVersion -> c
    boolean matchClass(java.lang.Class) -> a
    long insert(com.dailystudio.dataobject.DatabaseObject) -> a
    int delete(com.dailystudio.dataobject.query.Query) -> a
    android.database.Cursor queryCursor(com.dailystudio.dataobject.query.Query) -> b
    android.database.Cursor queryCursor(com.dailystudio.dataobject.query.Query,java.lang.Class) -> a
    java.util.List query(com.dailystudio.dataobject.query.Query) -> c
    java.util.List query(com.dailystudio.dataobject.query.Query,java.lang.Class) -> b
    void notifyObservers() -> a
    long onInsert(com.dailystudio.dataobject.DatabaseObject) -> b
    int onDelete(com.dailystudio.dataobject.query.Query) -> d
    java.util.List onQuery(com.dailystudio.dataobject.query.Query,java.lang.Class) -> c
    android.database.Cursor onQueryCursor(com.dailystudio.dataobject.query.Query,java.lang.Class) -> d
    com.dailystudio.dataobject.DatabaseObject fromCursor(android.database.Cursor,java.lang.Class) -> a
    java.lang.String[] createProjection(java.lang.Class) -> b
    int getObjectVersion(java.lang.Class) -> c
    int getDatabaseVersion() -> b
com.dailystudio.dataobject.database.CommandCursor -> com.dailystudio.b.a.b:
    java.lang.String mCommand -> a
    android.content.ContentValues mValues -> b
    java.util.List mColumns -> c
    void addColumn(java.lang.String) -> a
    void addColumns(java.lang.String[]) -> a
    void putValue(java.lang.String,java.lang.Integer) -> a
    java.lang.String[] getColumnNames() -> getColumnNames
    int getCount() -> getCount
    double getDouble(int) -> getDouble
    float getFloat(int) -> getFloat
    int getInt(int) -> getInt
    long getLong(int) -> getLong
    short getShort(int) -> getShort
    java.lang.String getString(int) -> getString
    boolean isNull(int) -> isNull
    java.lang.String getColumnName(int) -> getColumnName
com.dailystudio.dataobject.database.DatabaseConnectivity -> com.dailystudio.b.a.c:
    java.lang.String[] MOCK_COLUMN_NAMES -> d
    android.content.ContentResolver mContentResovler -> e
    java.lang.String mAuthority -> f
    boolean checkProviderPreparation() -> e
    long onInsert(com.dailystudio.dataobject.DatabaseObject) -> b
    int onDelete(com.dailystudio.dataobject.query.Query) -> d
    android.database.Cursor doQueryCursor(long,com.dailystudio.dataobject.query.Query,java.lang.Class) -> a
    android.database.Cursor onQueryCursor(com.dailystudio.dataobject.query.Query,java.lang.Class) -> d
    android.database.Cursor makeMockEmptyCursor(long) -> a
    java.util.List onQuery(com.dailystudio.dataobject.query.Query,java.lang.Class) -> c
    void closeOpenedDatabase(long) -> b
    android.net.Uri getDatabaseObserverUri() -> c
    java.lang.String[] access$0() -> d
com.dailystudio.dataobject.database.DatabaseConnectivity$MockEmptyCursor -> com.dailystudio.b.a.d:
    java.lang.String[] getColumnNames() -> getColumnNames
    int getCount() -> getCount
com.dailystudio.dataobject.database.DatabaseConnectivityProvider -> com.dailystudio.b.a.e:
    boolean onCreate() -> onCreate
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int bulkInsert(android.net.Uri,android.content.ContentValues[]) -> bulkInsert
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    android.database.Cursor queryCommands(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> a
    android.database.Cursor doCommandGetUpdateInfo(android.content.Context,java.lang.String,java.lang.String,int) -> a
    android.database.Cursor queryObjects(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> b
    void manageOpenedDatabase(long,android.database.sqlite.SQLiteDatabase) -> a
    boolean checkOrCreateTable(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String) -> a
com.dailystudio.dataobject.database.DatabaseObserver -> com.dailystudio.b.a.f:
    android.content.Context mContext -> a
    java.lang.Class mObjectClass -> b
    android.content.BroadcastReceiver mReceiver -> c
    java.lang.Class getObserverdObjectClass() -> a
    void register() -> b
    void unregister() -> c
    void onDatabaseChanged(android.content.Context,java.lang.Class) -> a
    java.lang.String composeBroadcaseAction(java.lang.Class) -> a
com.dailystudio.dataobject.database.DatabaseObserver$1 -> com.dailystudio.b.a.g:
    com.dailystudio.dataobject.database.DatabaseObserver this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.dailystudio.dataobject.database.DatabaseOpenHandler -> com.dailystudio.b.a.h:
    int mCurrentVersion -> a
    int mOldVersion -> b
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    android.database.sqlite.SQLiteDatabase getWritableDatabase() -> getWritableDatabase
    int getNewVersion() -> a
    int getOldVersion() -> b
com.dailystudio.dataobject.database.GetUpdateInfoCmdCursor -> com.dailystudio.b.a.i:
    java.lang.String[] sColumns -> a
    java.lang.String[] getColumnNames() -> getColumnNames
    java.lang.String getString(int) -> getString
    void putValue(java.lang.String,java.lang.Integer) -> a
    void addColumns(java.lang.String[]) -> a
    boolean isNull(int) -> isNull
    short getShort(int) -> getShort
    int getCount() -> getCount
    java.lang.String getColumnName(int) -> getColumnName
    double getDouble(int) -> getDouble
    float getFloat(int) -> getFloat
    int getInt(int) -> getInt
    long getLong(int) -> getLong
    void addColumn(java.lang.String) -> a
com.dailystudio.dataobject.database.OpenedDatabase -> com.dailystudio.b.a.j:
    long mSerial -> a
    android.database.sqlite.SQLiteDatabase mDatabase -> b
    void close() -> a
    java.lang.Long getSingletonKey() -> b
    java.lang.Object getSingletonKey() -> c
com.dailystudio.dataobject.database.OpenedDatabaseCloseReceiver -> com.dailystudio.b.a.k:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.dailystudio.dataobject.database.OpenedDatabaseManager -> com.dailystudio.b.a.l:
    com.dailystudio.dataobject.database.OpenedDatabaseCloseReceiver mReceiver -> a
    com.dailystudio.dataobject.database.OpenedDatabaseManager getInstance() -> b
    void addObject(com.dailystudio.dataobject.database.OpenedDatabase) -> a
    com.dailystudio.dataobject.database.OpenedDatabase removeObject(java.lang.Long) -> a
    boolean registerReceiver() -> f
    void unregisterReceiver() -> g
    void addObject(com.dailystudio.manager.ISingletonObject) -> a
    com.dailystudio.manager.ISingletonObject removeObject(java.lang.Object) -> a
com.dailystudio.dataobject.database.ProviderCommandUriParser -> com.dailystudio.b.a.m:
    boolean hasValidBase() -> a
    java.lang.String getDatabase() -> b
    java.lang.String getTable() -> c
    int getVersion() -> d
    java.lang.String getCommand() -> e
com.dailystudio.dataobject.database.ProviderQueryUriParser -> com.dailystudio.b.a.n:
    boolean hasValidBase() -> a
    java.lang.String getDatabase() -> b
    java.lang.String getTable() -> c
    int getVersion() -> d
    long getSerial() -> e
    java.lang.String getCreateTableSQL() -> f
com.dailystudio.dataobject.database.ProviderResultUriParser -> com.dailystudio.b.a.o:
    boolean hasValidBase() -> a
    java.lang.String getDatabase() -> b
    java.lang.String getTable() -> c
    long getRowId() -> d
com.dailystudio.dataobject.database.ProviderUriBuilder -> com.dailystudio.b.a.p:
    android.net.Uri buildQueryUri(java.lang.String,java.lang.Class,int) -> a
    android.net.Uri buildQueryUri(java.lang.String,java.lang.Class,int,long) -> a
    android.net.Uri buildResultUri(java.lang.String,java.lang.String,int,java.lang.String) -> a
    android.net.Uri buildResultUri(java.lang.String,java.lang.String,int,java.lang.String,long) -> a
    android.net.Uri attachSerialParamter(android.net.Uri,java.lang.String) -> b
    android.net.Uri attachCreateTableParamter(android.net.Uri,java.lang.String) -> a
com.dailystudio.dataobject.database.ProviderUriParser -> com.dailystudio.b.a.q:
    android.net.Uri mUri -> a
    java.lang.String getSegmentFromUri(int) -> a
    java.lang.String getBase() -> g
    boolean hasValidBase() -> a
    java.lang.String getDatabase() -> b
    java.lang.String getTable() -> c
com.dailystudio.dataobject.database.SortOrderEncoder -> com.dailystudio.b.a.r:
    java.lang.String encode(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String[] decode(java.lang.String) -> a
com.dailystudio.dataobject.query.Expression -> com.dailystudio.b.b.a:
    java.lang.String ORDER_ASCENDING -> a
    java.lang.String ORDER_DESCENDING -> b
    java.lang.String OPERATOR_WITH -> c
    java.lang.String OPERATOR_LEFT_BRACE -> d
    java.lang.String OPERATOR_RIGHT_BRACE -> e
    java.lang.String OPERATOR_PLUS -> f
    java.lang.String OPERATOR_MINUS -> g
    java.lang.String OPERATOR_MULTIPLE -> h
    java.lang.String OPERATOR_DIVIDE -> i
    java.lang.String OPERATOR_MODULO -> j
    java.lang.String OPERATOR_AND -> k
    java.lang.String OPERATOR_OR -> l
    java.lang.String OPERATOR_EQUALS -> m
    java.lang.String OPERATOR_NOT_EQUALS -> n
    java.lang.String OPERATOR_GREAT_THAN -> o
    java.lang.String OPERATOR_LESS_THAN -> p
    java.lang.String OPERATOR_GREAT_THAN_AND_EQUALS -> q
    java.lang.String OPERATOR_LESS_THAN_AND_EQUALS -> r
    java.lang.String OPERATOR_IN -> s
    java.lang.String OPERATOR_NOT_IN -> t
    java.lang.String OPERATOR_ISNULL -> u
    java.lang.String OPERATOR_NOTNULL -> v
    java.lang.String OPERATOR_LIKE -> w
    java.lang.String OPERATOR_EQ -> x
    java.lang.String OPERATOR_NEQ -> y
    java.lang.String OPERATOR_GT -> z
    java.lang.String OPERATOR_LT -> A
    java.lang.String OPERATOR_GTE -> B
    java.lang.String OPERATOR_LTE -> C
com.dailystudio.dataobject.query.ExpressionToken -> com.dailystudio.b.b.b:
    com.dailystudio.dataobject.query.ExpressionToken and(com.dailystudio.dataobject.query.ExpressionToken) -> a
    com.dailystudio.dataobject.query.ExpressionToken or(com.dailystudio.dataobject.query.ExpressionToken) -> b
com.dailystudio.dataobject.query.OrderingToken -> com.dailystudio.b.b.c:
com.dailystudio.dataobject.query.Query -> com.dailystudio.b.b.d:
    java.lang.Class mObjectClass -> a
    com.dailystudio.dataobject.query.ExpressionToken mSelection -> b
    com.dailystudio.dataobject.query.ExpressionToken mHaving -> c
    com.dailystudio.dataobject.query.ExpressionToken mLimit -> d
    com.dailystudio.dataobject.query.OrderingToken mGroupBy -> e
    com.dailystudio.dataobject.query.OrderingToken mOrderBy -> f
    java.lang.Class getObjectClass() -> a
    void setSelection(com.dailystudio.dataobject.query.ExpressionToken) -> a
    com.dailystudio.dataobject.query.ExpressionToken getSelection() -> b
    void setGroupBy(com.dailystudio.dataobject.query.OrderingToken) -> a
    com.dailystudio.dataobject.query.OrderingToken getGroupBy() -> c
    com.dailystudio.dataobject.query.ExpressionToken getHaving() -> d
    void setOrderBy(com.dailystudio.dataobject.query.OrderingToken) -> b
    com.dailystudio.dataobject.query.OrderingToken getOrderBy() -> e
    void setLimit(com.dailystudio.dataobject.query.ExpressionToken) -> b
    com.dailystudio.dataobject.query.ExpressionToken getLimit() -> f
    java.lang.String toString() -> toString
com.dailystudio.dataobject.query.QueryToken -> com.dailystudio.b.b.e:
    java.lang.StringBuilder mTokenBuilder -> a
    com.dailystudio.dataobject.query.QueryToken binaryOperator(java.lang.String,com.dailystudio.dataobject.query.QueryToken) -> a
    com.dailystudio.dataobject.query.QueryToken binaryOperator(java.lang.String,com.dailystudio.dataobject.query.QueryToken,boolean,boolean,boolean) -> a
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
com.dailystudio.dataobject.utils.SQLiteDateTimeUtils -> com.dailystudio.b.c.a:
    java.lang.String toDateTimeString(java.lang.String,java.lang.String) -> a
    java.lang.String hourOf(java.lang.String) -> a
    java.lang.String dayOf(java.lang.String) -> b
    java.lang.String weekdayOf(java.lang.String) -> c
    java.lang.String weekOf(java.lang.String) -> d
    java.lang.String monthOf(java.lang.String) -> e
com.dailystudio.datetime.CalendarUtils -> com.dailystudio.c.a:
    java.util.Calendar sCalendar -> a
    long getStartOfDay(long) -> a
    long getEndOfDay(long) -> b
    long getStartOfWeek(long) -> c
    long getEndOfWeek(long) -> d
    long getStartOfMonth(long) -> e
    long getEndOfMonth(long) -> f
    int getYear(long) -> g
    int getMonth(long) -> h
    int getDay(long) -> i
    int getWeekDay(long) -> j
    int getHour(long) -> k
    boolean isCurrentWeek(long) -> l
    java.lang.String durationToReadableString(long) -> m
    java.lang.String timeToReadableString(long,boolean,boolean) -> a
    java.lang.String timeToReadableString(long) -> n
    java.lang.String timeToReadableStringWithoutTime(long) -> o
com.dailystudio.development.Logger -> com.dailystudio.d.a:
    boolean sLogDebugEnabled -> a
    void output(java.lang.String,com.dailystudio.development.Logger$LogToken,java.lang.Object[]) -> a
    void setDebugEnabled(boolean) -> a
    void debug(java.lang.String,java.lang.Object[]) -> a
    void warnning(java.lang.String,java.lang.Object[]) -> b
    java.lang.StackTraceElement getCallingElement(int) -> a
    java.lang.String getCallingMethodName(int) -> b
    java.lang.String getCallingSimpleClassName(int) -> c
    java.lang.String getCallingClassName(int) -> d
com.dailystudio.development.Logger$LogToken -> com.dailystudio.d.b:
    com.dailystudio.development.Logger$LogToken LOG_D -> a
    com.dailystudio.development.Logger$LogToken LOG_W -> b
    com.dailystudio.development.Logger$LogToken LOG_I -> c
    com.dailystudio.development.Logger$LogToken LOG_E -> d
    com.dailystudio.development.Logger$LogToken[] ENUM$VALUES -> e
    com.dailystudio.development.Logger$LogToken[] values() -> values
    com.dailystudio.development.Logger$LogToken valueOf(java.lang.String) -> valueOf
com.dailystudio.factory.AbsClassFactory -> com.dailystudio.e.a:
    java.lang.Object createObjectForClass(java.lang.Class) -> a
com.dailystudio.factory.ClassFactory -> com.dailystudio.e.b:
    java.lang.Object newObject(java.lang.Class) -> b
    java.lang.Object newObject(java.lang.Object) -> a
com.dailystudio.factory.ClassNameFactory -> com.dailystudio.e.c:
    java.lang.Object newObject(java.lang.String) -> a
    java.lang.String parseClassName(java.lang.String) -> b
    java.lang.Object newObject(java.lang.Object) -> a
com.dailystudio.factory.Factory -> com.dailystudio.e.d:
    java.util.Map sInstanceMap -> a
    void initMembers() -> c
    java.lang.Object getInstance(java.lang.Class) -> c
    java.lang.Object createObject(java.lang.Object) -> b
    java.lang.Object newObject(java.lang.Object) -> a
com.dailystudio.manager.GroupManager -> com.dailystudio.f.a:
    java.util.Map mGroupMaps -> a
    void initMembers() -> a_
    void addObject(com.dailystudio.manager.IGroupObject) -> a
    void removeObject(com.dailystudio.manager.IGroupObject) -> b
    com.dailystudio.manager.IGroupObject removeObject(java.lang.Object) -> b
    java.util.List getObjectsInGroup(java.lang.Object) -> c
    void onGroupAdded(java.lang.Object) -> d
    void onGroupRemoved(java.lang.Object) -> e
    void addObject(com.dailystudio.manager.ISingletonObject) -> a
    com.dailystudio.manager.ISingletonObject removeObject(java.lang.Object) -> a
    void removeObject(com.dailystudio.manager.ISingletonObject) -> b
com.dailystudio.manager.IGroupObject -> com.dailystudio.f.b:
    java.lang.Object getGroup() -> a
com.dailystudio.manager.IManagerWatcher -> com.dailystudio.f.c:
    void onManagerAdded(com.dailystudio.manager.Manager) -> a
com.dailystudio.manager.IObjectWatcher -> com.dailystudio.f.d:
    void onObjectAdded(java.lang.Object) -> a
    void onObjectRemoved(java.lang.Object) -> b
    boolean matchWatcher(java.lang.Object) -> c
com.dailystudio.manager.ISingletonObject -> com.dailystudio.f.e:
    java.lang.Object getSingletonKey() -> c
com.dailystudio.manager.Manager -> com.dailystudio.f.f:
    java.util.Map sInstanceMap -> a
    java.util.Map sInstanceNameMap -> d
    java.util.ArrayList sMgrWatchers -> e
    java.util.ArrayList mObjects -> b
    java.util.ArrayList mObjWatchers -> c
    void initMembers() -> a_
    java.lang.Object getInstance(java.lang.Class) -> a
    void addObject(java.lang.Object) -> f
    void removeObject(java.lang.Object) -> g
    java.util.ArrayList listObjects() -> c
    int getCount() -> d
    int compareTo(com.dailystudio.manager.Manager) -> a
    java.lang.String getName() -> e
    int compareTo(java.lang.Object) -> compareTo
com.dailystudio.manager.SingletonManager -> com.dailystudio.f.g:
    java.util.Map mObjectMaps -> d
    void initMembers() -> a_
    void addObject(com.dailystudio.manager.ISingletonObject) -> a
    void removeObject(com.dailystudio.manager.ISingletonObject) -> b
    com.dailystudio.manager.ISingletonObject removeObject(java.lang.Object) -> a
    com.dailystudio.manager.ISingletonObject getObject(java.lang.Object) -> h
    void addObject(java.lang.Object) -> f
    void removeObject(java.lang.Object) -> g
com.dailystudio.memory.activity.ActionBar -> com.dailystudio.memory.activity.ActionBar:
    int[] sPrgoressResIds -> a
    android.widget.TextView mTitleView -> b
    android.view.ViewGroup mCustomView -> c
    android.view.View mOverflowButton -> d
    android.widget.ImageView mProgressInd -> e
    int mProgress -> f
    android.view.animation.Animation mOverflowDropdownAnimIn -> g
    android.view.animation.Animation mOverflowDropdownAnimOut -> h
    com.dailystudio.memory.activity.ActionBar$ActionBarOverflowCallbacks mOverflowCallbacks -> i
    java.lang.Runnable mUpdateProgressRunnable -> j
    android.os.Handler mHandler -> k
    void initMembers() -> f
    void setTitle(java.lang.CharSequence) -> setTitle
    void setCustomView(int) -> setCustomView
    void setCustomView(android.view.View) -> setCustomView
    void setCustomView(android.view.View,com.dailystudio.memory.activity.ActionBar$LayoutParams) -> a
    void setOverflowEnabled(boolean) -> setOverflowEnabled
    boolean isOverflowEnabled() -> a
    boolean isOverflowShown() -> b
    void setOverflowCallbacks(com.dailystudio.memory.activity.ActionBar$ActionBarOverflowCallbacks) -> setOverflowCallbacks
    void toggleOverflowDropdown() -> g
    void displayOverflow() -> c
    void displayOverflow(boolean) -> a
    void hideOverflow() -> d
    void hideOverflow(boolean) -> b
    android.view.View getOverflowDropdown() -> getOverflowDropdown
    void setProgress(int) -> setProgress
    void clearProgress() -> e
    void showProgress() -> h
    void hideProgress() -> i
    void doUpdateProgress(int) -> a
    int access$0(com.dailystudio.memory.activity.ActionBar) -> a
    void access$1(com.dailystudio.memory.activity.ActionBar) -> b
    android.view.View access$2(com.dailystudio.memory.activity.ActionBar) -> c
    com.dailystudio.memory.activity.ActionBar$ActionBarOverflowCallbacks access$3(com.dailystudio.memory.activity.ActionBar) -> d
com.dailystudio.memory.activity.ActionBar$1 -> com.dailystudio.memory.activity.a:
    com.dailystudio.memory.activity.ActionBar this$0 -> a
    void run() -> run
com.dailystudio.memory.activity.ActionBar$2 -> com.dailystudio.memory.activity.b:
    com.dailystudio.memory.activity.ActionBar this$0 -> a
    void onClick(android.view.View) -> onClick
com.dailystudio.memory.activity.ActionBar$3 -> com.dailystudio.memory.activity.c:
    com.dailystudio.memory.activity.ActionBar this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.dailystudio.memory.activity.ActionBar$4 -> com.dailystudio.memory.activity.d:
    com.dailystudio.memory.activity.ActionBar this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.dailystudio.memory.activity.ActionBar$ActionBarOverflowCallbacks -> com.dailystudio.memory.activity.e:
    void preOverflowDropdownShow(android.view.View) -> a
    void postOverflowDropdownShow(android.view.View) -> b
    void preOverflowDropdownHide(android.view.View) -> c
    void postOverflowDropdownHide(android.view.View) -> d
com.dailystudio.memory.activity.ActionBar$LayoutParams -> com.dailystudio.memory.activity.f:
com.dailystudio.memory.activity.ActionBarActivity -> com.dailystudio.memory.activity.g:
    com.dailystudio.memory.activity.ActionBar mActionBar -> n
    com.dailystudio.memory.activity.ActionBarActivityContent mContentView -> o
    android.view.Menu mOverflowMenu -> p
    com.dailystudio.memory.menu.ActionBarOverflowMenuView mOverflowMenuView -> q
    android.graphics.Rect mOverflowMenuHitRect -> r
    android.graphics.Rect mOverflowButtonHitRect -> s
    android.view.View mOverflowPopupOverlay -> t
    android.view.animation.Animation mOverflowPopupOverlayInAnim -> u
    android.view.animation.Animation mOverflowPopupOverlayOutAnim -> v
    android.widget.TextView mPromptView -> w
    com.dailystudio.memory.activity.ActionBar$ActionBarOverflowCallbacks mOverflowCallbacks -> x
    int mIndeterminateProgress -> y
    boolean mIndeterminateProgressRunning -> z
    java.lang.Runnable mIndeterminateProgressRunnable -> A
    java.lang.CharSequence mPromptContent -> B
    java.lang.Runnable mPromptShowRunnable -> C
    java.lang.Runnable mPromptHideRunnable -> D
    android.os.Handler mHandler -> E
    void onCreate(android.os.Bundle) -> onCreate
    void buildUpActionBar() -> i
    void restoreActionBar(android.os.Bundle) -> a
    com.dailystudio.memory.activity.ActionBar getActionBar() -> f
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onBackPressed() -> onBackPressed
    void onPause() -> onPause
    void onResume() -> onResume
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    void setActionBarProgress(int) -> a
    void onActionBarOverflowMenuItemSelected(android.view.MenuItem) -> a
    boolean onOverflowItemSelected(android.view.MenuItem) -> b
    void setOverflowEnabled(boolean) -> b
    boolean onCreateOverflowMenu(android.view.Menu) -> a
    void onActionBarOverflowHidden() -> g
    void onActionBarOverflowDisplayed() -> h
    void realShowPrompt() -> j
    void realHidePrompt() -> k
    android.view.View access$0(com.dailystudio.memory.activity.ActionBarActivity) -> a
    android.view.animation.Animation access$1(com.dailystudio.memory.activity.ActionBarActivity) -> b
    com.dailystudio.memory.activity.ActionBarActivityContent access$2(com.dailystudio.memory.activity.ActionBarActivity) -> c
    android.view.animation.Animation access$3(com.dailystudio.memory.activity.ActionBarActivity) -> d
    int access$4(com.dailystudio.memory.activity.ActionBarActivity) -> e
    void access$5(com.dailystudio.memory.activity.ActionBarActivity,int) -> a
    android.os.Handler access$6(com.dailystudio.memory.activity.ActionBarActivity) -> f
    void access$7(com.dailystudio.memory.activity.ActionBarActivity) -> g
    void access$8(com.dailystudio.memory.activity.ActionBarActivity) -> h
    com.dailystudio.memory.activity.ActionBar access$9(com.dailystudio.memory.activity.ActionBarActivity) -> i
com.dailystudio.memory.activity.ActionBarActivity$1 -> com.dailystudio.memory.activity.h:
    com.dailystudio.memory.activity.ActionBarActivity this$0 -> a
    void preOverflowDropdownShow(android.view.View) -> a
    void postOverflowDropdownShow(android.view.View) -> b
    void preOverflowDropdownHide(android.view.View) -> c
    void postOverflowDropdownHide(android.view.View) -> d
com.dailystudio.memory.activity.ActionBarActivity$2 -> com.dailystudio.memory.activity.i:
    com.dailystudio.memory.activity.ActionBarActivity this$0 -> a
    void run() -> run
com.dailystudio.memory.activity.ActionBarActivity$3 -> com.dailystudio.memory.activity.j:
    com.dailystudio.memory.activity.ActionBarActivity this$0 -> a
    void run() -> run
com.dailystudio.memory.activity.ActionBarActivity$4 -> com.dailystudio.memory.activity.k:
    com.dailystudio.memory.activity.ActionBarActivity this$0 -> a
    void run() -> run
com.dailystudio.memory.activity.ActionBarActivity$MenuItemSelectedRunnable -> com.dailystudio.memory.activity.l:
    android.view.MenuItem mItem -> b
    com.dailystudio.memory.activity.ActionBarActivity this$0 -> a
    void run() -> run
com.dailystudio.memory.activity.ActionBarActivityContent -> com.dailystudio.memory.activity.ActionBarActivityContent:
    boolean mContentLocked -> a
    android.graphics.Paint mPaint -> b
    android.graphics.Bitmap mDrawingCache -> c
    java.lang.Runnable mUnlockContentRunnable -> d
    void initMembers() -> c
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void lockContent() -> a
    void unlockContent() -> b
    android.graphics.Bitmap access$0(com.dailystudio.memory.activity.ActionBarActivityContent) -> a
    void access$1(com.dailystudio.memory.activity.ActionBarActivityContent,boolean) -> a
com.dailystudio.memory.activity.ActionBarActivityContent$1 -> com.dailystudio.memory.activity.m:
    com.dailystudio.memory.activity.ActionBarActivityContent this$0 -> a
    void run() -> run
com.dailystudio.memory.activity.MemoryCoreAppCheckActivity -> com.dailystudio.memory.activity.n:
    android.view.View mGooglPlayBadge -> n
    android.view.View mStepOneView -> o
    android.widget.TextView mMemoryInstalledView -> p
    android.view.View mStepTwoView -> q
    android.view.View mPluginLayout -> r
    android.widget.ImageView mPluginIcon -> s
    android.widget.TextView mPluginName -> t
    android.widget.Button mKnowButton -> u
    android.widget.CheckBox mRemoveCheck -> v
    com.dailystudio.memory.activity.MemoryCoreAppCheckActivity$CoreAppCheckAsyncTask mAsyncTask -> w
    java.util.Observer mAppObserver -> x
    com.dailystudio.memory.ui.AlertDialogFragment$AlertDialogFragmentCallbacks mConfirmCallbacks -> y
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    void setupViews() -> n
    void disableCurrentActivity() -> i
    void bindPlugin() -> j
    void startChecking() -> o
    void stopChecking() -> p
    void setStepOneEnable(boolean) -> c
    void setStepTwoEnable(boolean) -> d
    android.graphics.drawable.Drawable getPluginIcon() -> k
    android.graphics.drawable.Drawable getPluginIconDisabled() -> l
    java.lang.CharSequence getPluginName() -> m
    void access$0(com.dailystudio.memory.activity.MemoryCoreAppCheckActivity) -> a
    android.widget.CheckBox access$1(com.dailystudio.memory.activity.MemoryCoreAppCheckActivity) -> b
    void access$2(com.dailystudio.memory.activity.MemoryCoreAppCheckActivity,boolean) -> a
    void access$3(com.dailystudio.memory.activity.MemoryCoreAppCheckActivity,boolean) -> b
    com.dailystudio.memory.ui.AlertDialogFragment$AlertDialogFragmentCallbacks access$4(com.dailystudio.memory.activity.MemoryCoreAppCheckActivity) -> c
com.dailystudio.memory.activity.MemoryCoreAppCheckActivity$1 -> com.dailystudio.memory.activity.o:
    com.dailystudio.memory.activity.MemoryCoreAppCheckActivity this$0 -> a
    void update(java.util.Observable,java.lang.Object) -> update
com.dailystudio.memory.activity.MemoryCoreAppCheckActivity$2 -> com.dailystudio.memory.activity.p:
    com.dailystudio.memory.activity.MemoryCoreAppCheckActivity this$0 -> a
    void onDialogConfirmed(com.dailystudio.memory.ui.AlertDialogFragment,android.content.DialogInterface,int) -> a
    void onDialogCancelled(com.dailystudio.memory.ui.AlertDialogFragment,android.content.DialogInterface,int) -> b
com.dailystudio.memory.activity.MemoryCoreAppCheckActivity$3 -> com.dailystudio.memory.activity.q:
    com.dailystudio.memory.activity.MemoryCoreAppCheckActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dailystudio.memory.activity.MemoryCoreAppCheckActivity$4 -> com.dailystudio.memory.activity.r:
    com.dailystudio.memory.activity.MemoryCoreAppCheckActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dailystudio.memory.activity.MemoryCoreAppCheckActivity$5 -> com.dailystudio.memory.activity.s:
    com.dailystudio.memory.activity.MemoryCoreAppCheckActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.dailystudio.memory.activity.MemoryCoreAppCheckActivity$6 -> com.dailystudio.memory.activity.t:
    com.dailystudio.memory.activity.MemoryCoreAppCheckActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dailystudio.memory.activity.MemoryCoreAppCheckActivity$ConfirmDialogFragment -> com.dailystudio.memory.activity.u:
    java.lang.CharSequence getConfirmText() -> B
    java.lang.CharSequence getCancelText() -> C
    java.lang.CharSequence getTitle() -> D
    java.lang.CharSequence getMessage() -> E
    void onDialogConfirmed(android.content.DialogInterface,int) -> a
    void onDialogCancelled(android.content.DialogInterface,int) -> b
com.dailystudio.memory.activity.MemoryCoreAppCheckActivity$CoreAppCheckAsyncTask -> com.dailystudio.memory.activity.v:
    android.content.Context mContext -> c
    com.dailystudio.memory.activity.MemoryCoreAppCheckActivity this$0 -> b
    java.lang.Boolean doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> a
com.dailystudio.memory.activity.MemoryPeroidBasedActivity -> com.dailystudio.memory.activity.w:
    long mPeroidStart -> n
    long mPeroidEnd -> o
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onNewIntent(android.content.Intent) -> onNewIntent
    void bindIntentOnFragments(android.content.Intent) -> a
    void bindIntent(android.content.Intent) -> b
    long getPeroidStart() -> i
    long getPeroidEnd() -> j
    int[] listPeroidBaseFragmentIds() -> k
com.dailystudio.memory.activity.MemoryPeroidChartActivity -> com.dailystudio.memory.activity.x:
    void shareChart(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence) -> a
    java.io.File saveCharToFile(android.graphics.Bitmap) -> a
    com.dailystudio.memory.fragment.MemoryChartFragment getChartFragment() -> l
com.dailystudio.memory.app.MemoryApplication -> com.dailystudio.memory.a.a:
    void onCreate() -> onCreate
    void onTerminate() -> onTerminate
com.dailystudio.memory.app.MemoryPieceQueryReceiver -> com.dailystudio.memory.a.b:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    long onQueryMemoryPiceceCount(android.content.Context) -> a
com.dailystudio.memory.appwidget.AppWidgetChartDataAsyncTask -> com.dailystudio.memory.b.a:
com.dailystudio.memory.appwidget.ConvertedAppWidgetChartDataAsyncTask -> com.dailystudio.memory.b.b:
    java.lang.Object mDataSet -> d
    java.lang.Object mRenderer -> e
    java.util.List doInBackground(java.lang.Void[]) -> a
    java.lang.Object createShareArguments() -> i
    java.lang.Object getDataSet() -> j
    java.lang.Object getChartRenderer() -> k
    com.dailystudio.dataobject.query.Query getQuery(java.lang.Class) -> b
    com.dailystudio.memory.chart.ChartBuilder createChartBuilder() -> l
com.dailystudio.memory.appwidget.ConvertedAppWidgetDataAsyncTask -> com.dailystudio.memory.b.c:
    int DEFAULT_APPWIDGET_GRID_WIDTH -> b
    int DEFAULT_APPWIDGET_GRID_HEIGHT -> c
    com.dailystudio.memory.appwidget.ConvertedAppWidgetDataAsyncTask$AsyncTaskCallbacks mCallbacks -> d
    android.widget.RemoteViews mRemoteViews -> e
    long mPeroidStart -> f
    long mPeroidEnd -> g
    void setPeroid(long,long) -> a
    long getPeroidStart() -> m
    long getPeroidEnd() -> n
    void onPostExecute(java.util.List) -> a
    void setCallbacks(com.dailystudio.memory.appwidget.ConvertedAppWidgetDataAsyncTask$AsyncTaskCallbacks) -> a
    android.graphics.Bitmap buildViewCache(android.content.Context,android.view.View,int,int) -> a
    com.dailystudio.dataobject.query.Query getQuery(java.lang.Class) -> b
    int[] estimateDimensionInWidget(int,int,int,int) -> a
    int estimateWidgetWidth(int) -> a
    int estimateWidgetHeight(int) -> b
    android.widget.RemoteViews bindRemoteViews(java.util.List) -> b
    android.content.ComponentName getAppWidgetProvider() -> o
    void onPostExecute(java.lang.Object) -> a
com.dailystudio.memory.appwidget.ConvertedAppWidgetDataAsyncTask$AsyncTaskCallbacks -> com.dailystudio.memory.b.d:
    void onAsyncTaskFinished(com.dailystudio.memory.appwidget.ConvertedAppWidgetDataAsyncTask,java.util.List,android.widget.RemoteViews) -> a
com.dailystudio.memory.appwidget.MemoryAppWidgetDataService -> com.dailystudio.memory.b.e:
    com.dailystudio.dataobject.database.DatabaseObserver[] mDbObservers -> a
    com.dailystudio.memory.appwidget.ConvertedAppWidgetDataAsyncTask$AsyncTaskCallbacks mAsyncTaskCallbacks -> b
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    void startObservers(com.dailystudio.dataobject.database.DatabaseObserver[]) -> a
    void stopObservers(com.dailystudio.dataobject.database.DatabaseObserver[]) -> b
    boolean isObserveDatabaseRequired() -> a
    void handleIntent(android.content.Intent) -> a
    void reloadData(java.lang.Class) -> a
    java.util.List createAsyncTasks(java.lang.Class) -> b
    java.lang.Class[] listObservedDatabaseObject() -> b
com.dailystudio.memory.appwidget.MemoryAppWidgetDataService$1 -> com.dailystudio.memory.b.f:
    com.dailystudio.memory.appwidget.MemoryAppWidgetDataService this$0 -> a
    void onAsyncTaskFinished(com.dailystudio.memory.appwidget.ConvertedAppWidgetDataAsyncTask,java.util.List,android.widget.RemoteViews) -> a
com.dailystudio.memory.appwidget.MemoryAppWidgetDataService$AppWidgetDatabaseObserver -> com.dailystudio.memory.b.g:
    com.dailystudio.memory.appwidget.MemoryAppWidgetDataService this$0 -> c
    void onDatabaseChanged(android.content.Context,java.lang.Class) -> a
com.dailystudio.memory.appwidget.MemoryAppWidgetProvider -> com.dailystudio.memory.b.h:
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
    void updateWidgetWithDataObjects(android.content.Context,java.lang.Class,int[]) -> a
    android.content.Intent getDataServiceIntent(android.content.Context) -> a
    void dumpAppWidgetIds(int[]) -> a
com.dailystudio.memory.appwidget.ProjectedAppWidgetChartDataAsyncTask -> com.dailystudio.memory.b.i:
com.dailystudio.memory.ask.MemoryAsk -> com.dailystudio.memory.ask.a:
    void askQuestion(android.content.Context,int,int,int,android.content.Intent) -> a
    void askQuestion(android.content.Context,int,java.lang.String,int,int,android.content.Intent) -> a
    void answerQuestion(android.content.Context,int,java.lang.String) -> a
    com.dailystudio.memory.ask.MemoryQuestion getAskedQuestion(android.content.Context,int) -> a
com.dailystudio.memory.ask.MemoryAskCursorAdapter -> com.dailystudio.memory.ask.b:
    long getItemId(int) -> getItemId
com.dailystudio.memory.ask.MemoryAskHostView -> com.dailystudio.memory.ask.MemoryAskHostView:
    android.content.Context mContext -> a
    android.widget.TextView mAskBoard -> b
    android.view.animation.Animation mAskBoardInAnim -> c
    android.view.animation.Animation mAskBoardOutAnim -> d
    android.widget.Adapter mAdapter -> e
    long mCurrQuestionId -> f
    int mCurrQuestionPos -> g
    int mNextQuestionPos -> h
    android.view.GestureDetector mGestureDetector -> i
    java.lang.Runnable mScheduleAskRunnable -> j
    java.lang.Runnable mMoveNextRunnable -> k
    android.view.GestureDetector$OnGestureListener mGestureListener -> l
    void initMembers() -> b
    void scheduleNextQuestion() -> c
    void scheduleNextQuestion(long) -> a
    void cancelPendingQuestion() -> a
    void cancelPendingQuestion(boolean) -> a
    void showAskBoard(java.lang.String) -> a
    void hideAskBoard(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    android.widget.Adapter access$0(com.dailystudio.memory.ask.MemoryAskHostView) -> a
    int access$1(com.dailystudio.memory.ask.MemoryAskHostView) -> b
    void access$2(com.dailystudio.memory.ask.MemoryAskHostView,int) -> a
    void access$3(com.dailystudio.memory.ask.MemoryAskHostView,long) -> a
    int access$4(com.dailystudio.memory.ask.MemoryAskHostView) -> c
    void access$5(com.dailystudio.memory.ask.MemoryAskHostView,int) -> b
    java.lang.Runnable access$6(com.dailystudio.memory.ask.MemoryAskHostView) -> d
    void access$7(com.dailystudio.memory.ask.MemoryAskHostView) -> e
    void access$8(com.dailystudio.memory.ask.MemoryAskHostView,long) -> b
    android.widget.TextView access$10(com.dailystudio.memory.ask.MemoryAskHostView) -> f
com.dailystudio.memory.ask.MemoryAskHostView$1 -> com.dailystudio.memory.ask.c:
    com.dailystudio.memory.ask.MemoryAskHostView this$0 -> a
    void run() -> run
com.dailystudio.memory.ask.MemoryAskHostView$2 -> com.dailystudio.memory.ask.d:
    com.dailystudio.memory.ask.MemoryAskHostView this$0 -> a
    void run() -> run
com.dailystudio.memory.ask.MemoryAskHostView$3 -> com.dailystudio.memory.ask.e:
    com.dailystudio.memory.ask.MemoryAskHostView this$0 -> a
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.dailystudio.memory.ask.MemoryAskHostView$4 -> com.dailystudio.memory.ask.f:
    com.dailystudio.memory.ask.MemoryAskHostView this$0 -> a
    void onClick(android.view.View) -> onClick
com.dailystudio.memory.ask.MemoryAskHostView$5 -> com.dailystudio.memory.ask.g:
    com.dailystudio.memory.ask.MemoryAskHostView this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.dailystudio.memory.ask.MemoryAskQuestionActivity -> com.dailystudio.memory.ask.h:
    void onCreate(android.os.Bundle) -> onCreate
    void onNewIntent(android.content.Intent) -> onNewIntent
    com.dailystudio.app.fragment.AbsLoaderFragment getBaseFragment() -> f
com.dailystudio.memory.ask.MemoryQuestion -> com.dailystudio.memory.ask.MemoryQuestion:
    com.dailystudio.dataobject.Column COLUMN_QUESTION_ID -> a
    com.dailystudio.dataobject.Column COLUMN_SRC_PACKAGE -> b
    com.dailystudio.dataobject.Column COLUMN_CONTENT_RESOURCE_NAME -> f
    com.dailystudio.dataobject.Column COLUMN_CONTENT_TEXT -> g
    com.dailystudio.dataobject.Column COLUMN_LAUNCH_INTENT -> h
    com.dailystudio.dataobject.Column COLUMN_PRIORITY -> i
    com.dailystudio.dataobject.Column COLUMN_STATE -> j
    com.dailystudio.dataobject.Column COLUMN_ANSWER -> k
    com.dailystudio.dataobject.Column[] sColumns -> n
    int getQuestionId() -> a
    java.lang.String getSourcePackage() -> h
    java.lang.String getContentResourceName() -> i
    int getContentResourceId() -> j
    java.lang.String getContentText() -> k
    java.lang.String dumpQuestionText() -> l
    java.lang.String getLaunchIntent() -> m
    int getPriority() -> n
    int getState() -> o
    java.lang.String getAnswer() -> p
    java.lang.String toString() -> toString
com.dailystudio.memory.ask.MemoryQuestionDatabaseModal -> com.dailystudio.memory.ask.i:
    com.dailystudio.memory.ask.MemoryQuestion findQuestion(android.content.Context,int,java.lang.String) -> a
com.dailystudio.memory.ask.MemoryQuestionFragment -> com.dailystudio.memory.ask.MemoryQuestionFragment:
    int mQid -> a
    java.lang.String mSourcePackage -> b
    android.widget.TextView mQuestionContent -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void setupViews(android.view.View) -> a
    void bindIntent(android.content.Intent) -> b
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
    int getLoaderId() -> I
    android.os.Bundle createLoaderArguments() -> J
    void updateContent(com.dailystudio.memory.ask.MemoryQuestion) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
com.dailystudio.memory.ask.MemoryQuestionLoader -> com.dailystudio.memory.ask.j:
    int mQid -> u
    java.lang.String mSourcePackage -> v
    java.lang.Class getObjectClass() -> w
    com.dailystudio.dataobject.query.Query getQuery(java.lang.Class) -> b
com.dailystudio.memory.chart.ChartBuilder -> com.dailystudio.memory.c.a:
    android.content.Context mContext -> a
    android.content.Context getContext() -> a
    java.lang.Object buildDataset(java.util.List,java.lang.Object) -> a
    java.lang.Object buildRenderer(java.util.List,java.lang.Object) -> b
com.dailystudio.memory.chart.ChartUtils -> com.dailystudio.memory.c.b:
    void applyDefaulChartStyle(android.content.Context,org.achartengine.renderer.DefaultRenderer) -> a
    void applyDefaulChartStyle(android.content.Context,org.achartengine.renderer.XYMultipleSeriesRenderer) -> a
    void applyDefaulWidgetChartStyle(android.content.Context,org.achartengine.renderer.DefaultRenderer) -> b
    void applyDefaulWidgetChartStyle(android.content.Context,org.achartengine.renderer.XYMultipleSeriesRenderer) -> b
    int getColorResource(android.content.Context,int) -> a
com.dailystudio.memory.dataobject.DateGroupObject -> com.dailystudio.memory.dataobject.DateGroupObject:
com.dailystudio.memory.dataobject.MemoryDatabaseReader -> com.dailystudio.memory.dataobject.a:
    com.dailystudio.memory.dataobject.MemoryObject queryLastOne(com.dailystudio.dataobject.query.Query) -> c
com.dailystudio.memory.dataobject.MemoryDatabaseWriter -> com.dailystudio.memory.dataobject.b:
com.dailystudio.memory.dataobject.MemoryObject -> com.dailystudio.memory.dataobject.MemoryObject:
    com.dailystudio.dataobject.Column COLUMN_ID -> l
    com.dailystudio.dataobject.TimeColumn COLUMN_TIME -> m
    com.dailystudio.dataobject.Column[] sColumns -> a
    int getId() -> q
    void setTime(long) -> a
    long getTime() -> r
    java.lang.String toString() -> toString
com.dailystudio.memory.dataobject.MemoryQueryBuilder -> com.dailystudio.memory.dataobject.c:
    com.dailystudio.dataobject.query.Query getQuery(long,long) -> a
    com.dailystudio.dataobject.query.Query getQuery(long,long,boolean) -> a
com.dailystudio.memory.dataobject.MonthObject -> com.dailystudio.memory.dataobject.MonthObject:
    com.dailystudio.dataobject.Column COLUMN_MONTH -> a
    int getMonth() -> a
    java.lang.String toString() -> toString
com.dailystudio.memory.dataobject.WeekObject -> com.dailystudio.memory.dataobject.WeekObject:
    com.dailystudio.dataobject.Column COLUMN_WEEK_NUM -> a
    int getWeekNumber() -> a
    java.lang.String toString() -> toString
com.dailystudio.memory.dataobject.WeekdayObject -> com.dailystudio.memory.dataobject.WeekdayObject:
    com.dailystudio.dataobject.Column COLUMN_WEEKDAY -> a
    int getWeekday() -> a
    java.lang.String toString() -> toString
com.dailystudio.memory.fragment.AbsDateGroupListFragment -> com.dailystudio.memory.d.a:
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    android.os.Bundle createLoaderArguments() -> J
com.dailystudio.memory.fragment.AbsWeekdaysListFragment -> com.dailystudio.memory.d.b:
    android.widget.BaseAdapter onCreateAdapter() -> D
com.dailystudio.memory.fragment.AbsWeeksListFragment -> com.dailystudio.memory.d.c:
    android.widget.BaseAdapter onCreateAdapter() -> D
com.dailystudio.memory.fragment.MemoryChartFragment -> com.dailystudio.memory.d.d:
    android.view.View mEmptyView -> a
    boolean mOldEmpty -> b
    void onActivityCreated(android.os.Bundle) -> d
    void bindEmptyView() -> a
    void setEmptyView(android.view.View) -> a
    void updateEmptyStatus(boolean) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.util.List) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
    android.graphics.Bitmap dumpChart() -> B
    android.graphics.Bitmap dumpChart(android.view.View) -> b
    android.view.View getChart(java.lang.Object,java.lang.Object) -> a
    android.view.ViewGroup getChartHolder() -> C
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
com.dailystudio.memory.fragment.MemoryPeroidChartFragment -> com.dailystudio.memory.d.e:
    long mPeroidStart -> a
    long mPeroidEnd -> b
    void bindIntent(android.content.Intent) -> b
    long getPeroidStart() -> D
    long getPeroidEnd() -> E
com.dailystudio.memory.fragment.MemoryPeroidCursorListFragment -> com.dailystudio.memory.d.f:
    long mPeroidStart -> a
    long mPeroidEnd -> b
    void bindIntent(android.content.Intent) -> b
    long getPeroidStart() -> E
com.dailystudio.memory.fragment.MemoryPeroidObjectsListFragment -> com.dailystudio.memory.d.g:
    long mPeroidStart -> a
    long mPeroidEnd -> b
    void bindIntent(android.content.Intent) -> b
    long getPeroidStart() -> K
    long getPeroidEnd() -> L
com.dailystudio.memory.game.DesEncrypter -> com.dailystudio.memory.game.a:
    byte[] iv -> a
    byte[] salt -> b
    java.lang.String decrypt(java.lang.String,byte[]) -> a
com.dailystudio.memory.game.EncryptedMemoryObject -> com.dailystudio.memory.game.EncryptedMemoryObject:
    com.dailystudio.memory.game.DesEncrypter sDesEncrypter -> a
    java.lang.String sEncrypterSeed -> b
    java.lang.String byteArrayToHex(byte[]) -> a
    java.lang.String getEncryptPassword() -> a
    java.lang.String decryptString(byte[]) -> b
com.dailystudio.memory.game.MemoryGameUtils -> com.dailystudio.memory.game.b:
    void unlockAchievement(android.content.Context,java.lang.String) -> a
com.dailystudio.memory.game.UncommittedAchievement -> com.dailystudio.memory.game.UncommittedAchievement:
    com.dailystudio.dataobject.Column COLUMN_ENCRYPTED_ACHIEVEMENT_ID -> a
    com.dailystudio.dataobject.Column COLUMN_ENCRYPTED_ACHIEVEMENT_TYPE -> b
    com.dailystudio.dataobject.Column COLUMN_ENCRYPTED_INCREMENT_STEPS -> f
    com.dailystudio.dataobject.Column[] sCloumns -> g
    byte[] getEncryptedAchievementId() -> h
    java.lang.String getAchievementId() -> i
    byte[] getEncryptedAchievementType() -> j
    com.dailystudio.memory.game.UncommittedAchievement$AchievementType getAchievementType() -> k
    byte[] getEncryptedIncrementSteps() -> l
    int getIncrementSteps() -> m
    java.lang.String toString() -> toString
com.dailystudio.memory.game.UncommittedAchievement$AchievementType -> com.dailystudio.memory.game.c:
    com.dailystudio.memory.game.UncommittedAchievement$AchievementType STANDARD -> a
    com.dailystudio.memory.game.UncommittedAchievement$AchievementType INCREMENT -> b
    com.dailystudio.memory.game.UncommittedAchievement$AchievementType[] ENUM$VALUES -> c
    com.dailystudio.memory.game.UncommittedAchievement$AchievementType[] values() -> values
    com.dailystudio.memory.game.UncommittedAchievement$AchievementType valueOf(java.lang.String) -> valueOf
com.dailystudio.memory.game.UncommittedLeaderboardScore -> com.dailystudio.memory.game.UncommittedLeaderboardScore:
    com.dailystudio.dataobject.Column COLUMN_ENCRYPTED_LEADERBOARD_ID -> a
    com.dailystudio.dataobject.Column COLUMN_ENCRYPTED_LEADERBOARD_SCORE -> b
    com.dailystudio.dataobject.Column[] sCloumns -> f
    byte[] getEncryptedLeaderboardId() -> h
    java.lang.String getLeaderboardId() -> i
    byte[] getEncryptedLeaderboardScore() -> j
    long getLeaderboardScore() -> k
    java.lang.String toString() -> toString
com.dailystudio.memory.loader.AbsDateGroupLoader -> com.dailystudio.memory.e.a:
    java.util.Comparator mAscComparator -> h
    java.util.Comparator mDescComparator -> i
    java.util.List loadInBackground() -> f
    void sortDates(java.util.List,boolean) -> a
com.dailystudio.memory.loader.AbsDateGroupLoader$AscDateGroupObjectComparator -> com.dailystudio.memory.e.b:
    com.dailystudio.memory.loader.AbsDateGroupLoader this$0 -> a
    int compare(com.dailystudio.memory.dataobject.DateGroupObject,com.dailystudio.memory.dataobject.DateGroupObject) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.dailystudio.memory.loader.AbsDateGroupLoader$DescDateGroupObjectComparator -> com.dailystudio.memory.e.c:
    com.dailystudio.memory.loader.AbsDateGroupLoader this$0 -> a
    int compare(com.dailystudio.memory.dataobject.DateGroupObject,com.dailystudio.memory.dataobject.DateGroupObject) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.dailystudio.memory.loader.ConvertedDatabaseChartLoader -> com.dailystudio.memory.e.d:
    java.lang.Object mDataSet -> h
    java.lang.Object mRenderer -> i
    java.util.List loadInBackground() -> f
    boolean isEmpty() -> x
    com.dailystudio.dataobject.query.Query getQuery(java.lang.Class) -> b
    java.lang.Object createShareArguments() -> y
    java.lang.Object getDataSet() -> z
    java.lang.Object getChartRenderer() -> A
    java.lang.Object buildDataset(java.util.List,java.lang.Object) -> a
    java.lang.Object buildRenderer(java.util.List,java.lang.Object) -> b
com.dailystudio.memory.loader.ConvertedPeroidDatabaseObjectsLoader -> com.dailystudio.memory.e.e:
    long mPeroidStart -> h
    long mPeroidEnd -> i
    void setPeroid(long,long) -> a
    long getPeroidStart() -> B
    long getPeroidEnd() -> C
    com.dailystudio.dataobject.query.Query getQuery(java.lang.Class) -> b
com.dailystudio.memory.loader.DatabaseChartLoader -> com.dailystudio.memory.e.f:
com.dailystudio.memory.loader.PeroidDatabaseCursorLoader -> com.dailystudio.memory.e.g:
    long mPeroidStart -> u
    long mPeroidEnd -> v
    void setPeroid(long,long) -> a
    com.dailystudio.dataobject.query.Query getQuery(java.lang.Class) -> b
com.dailystudio.memory.loader.ProjectedDatabaseChartLoader -> com.dailystudio.memory.e.h:
com.dailystudio.memory.loader.ProjectedPeroidDatabaseObjectsLoader -> com.dailystudio.memory.e.i:
com.dailystudio.memory.loader.WeekdaysLoader -> com.dailystudio.memory.e.j:
    com.dailystudio.dataobject.query.Query getQuery(java.lang.Class) -> b
    java.util.List loadInBackground() -> f
    java.lang.Class getProjectionClass() -> v
com.dailystudio.memory.loader.WeeksLoader -> com.dailystudio.memory.e.k:
    com.dailystudio.dataobject.query.Query getQuery(java.lang.Class) -> b
    java.lang.Class getProjectionClass() -> v
    java.util.List loadInBackground() -> f
com.dailystudio.memory.menu.ActionBarOverflowMenu -> com.dailystudio.memory.menu.a:
    android.content.Context mContext -> a
    boolean mIsQwerty -> b
    java.util.ArrayList mItems -> c
    com.dailystudio.memory.menu.ActionBarOverflowMenu$MenuItemChangedListener mMenuItemChangedListener -> d
    android.content.Context getContext() -> a
    android.view.MenuItem add(java.lang.CharSequence) -> add
    android.view.MenuItem add(int) -> add
    android.view.MenuItem add(int,int,int,int) -> add
    android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    void clear() -> clear
    void close() -> close
    int findItemIndex(int) -> a
    android.view.MenuItem findItem(int) -> findItem
    android.view.MenuItem getItem(int) -> getItem
    boolean hasVisibleItems() -> hasVisibleItems
    com.dailystudio.memory.menu.ActionBarOverflowMenuItem findItemWithShortcut(int,android.view.KeyEvent) -> a
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    void removeGroup(int) -> removeGroup
    void removeItem(int) -> removeItem
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setQwertyMode(boolean) -> setQwertyMode
    int size() -> size
    void onItemChanged() -> b
    void setMenuItemChangedListener(com.dailystudio.memory.menu.ActionBarOverflowMenu$MenuItemChangedListener) -> a
com.dailystudio.memory.menu.ActionBarOverflowMenu$MenuItemChangedListener -> com.dailystudio.memory.menu.b:
    void onItemsChanged() -> a
com.dailystudio.memory.menu.ActionBarOverflowMenuItem -> com.dailystudio.memory.menu.c:
    int mId -> a
    int mGroup -> b
    int mCategoryOrder -> c
    int mOrdering -> d
    java.lang.CharSequence mTitle -> e
    java.lang.CharSequence mTitleCondensed -> f
    android.content.Intent mIntent -> g
    char mShortcutNumericChar -> h
    char mShortcutAlphabeticChar -> i
    android.graphics.drawable.Drawable mIconDrawable -> j
    int mIconResId -> k
    android.content.Context mContext -> l
    android.view.MenuItem$OnMenuItemClickListener mClickListener -> m
    int mFlags -> n
    com.dailystudio.memory.menu.ActionBarOverflowMenu mActbarOverflowMenu -> o
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    int getGroupId() -> getGroupId
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.content.Intent getIntent() -> getIntent
    int getItemId() -> getItemId
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    char getNumericShortcut() -> getNumericShortcut
    int getOrder() -> getOrder
    android.view.SubMenu getSubMenu() -> getSubMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    boolean hasSubMenu() -> hasSubMenu
    boolean isCheckable() -> isCheckable
    boolean isChecked() -> isChecked
    boolean isEnabled() -> isEnabled
    boolean isVisible() -> isVisible
    android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    android.view.MenuItem setCheckable(boolean) -> setCheckable
    com.dailystudio.memory.menu.ActionBarOverflowMenuItem setExclusiveCheckable(boolean) -> a
    android.view.MenuItem setChecked(boolean) -> setChecked
    android.view.MenuItem setEnabled(boolean) -> setEnabled
    android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem setIcon(int) -> setIcon
    android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    android.view.MenuItem setShortcut(char,char) -> setShortcut
    android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    android.view.MenuItem setTitle(int) -> setTitle
    android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    android.view.MenuItem setVisible(boolean) -> setVisible
    boolean invoke() -> a
com.dailystudio.memory.menu.ActionBarOverflowMenuListAdapter -> com.dailystudio.memory.menu.d:
    android.content.Context mContext -> a
    android.view.Menu mMenuData -> b
    com.dailystudio.memory.menu.ActionBarOverflowMenu$MenuItemChangedListener mMenuItemChangedListener -> c
    java.lang.Runnable mNotifyItemsChangedRunnable -> d
    android.os.Handler mHandler -> e
    void attachMenu(android.view.Menu) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.os.Handler access$0(com.dailystudio.memory.menu.ActionBarOverflowMenuListAdapter) -> a
    java.lang.Runnable access$1(com.dailystudio.memory.menu.ActionBarOverflowMenuListAdapter) -> b
com.dailystudio.memory.menu.ActionBarOverflowMenuListAdapter$1 -> com.dailystudio.memory.menu.e:
    com.dailystudio.memory.menu.ActionBarOverflowMenuListAdapter this$0 -> a
    void onItemsChanged() -> a
com.dailystudio.memory.menu.ActionBarOverflowMenuListAdapter$2 -> com.dailystudio.memory.menu.f:
    com.dailystudio.memory.menu.ActionBarOverflowMenuListAdapter this$0 -> a
    void run() -> run
com.dailystudio.memory.menu.ActionBarOverflowMenuView -> com.dailystudio.memory.menu.ActionBarOverflowMenuView:
    android.widget.ListView mMenuList -> a
    com.dailystudio.memory.menu.ActionBarOverflowMenuListAdapter mMenuListAdapter -> b
    com.dailystudio.memory.menu.ActionBarOverflowMenuView$ActionBarOverflowMenuItemCallbacks mOverflowMenuItemCallbacks -> c
    void initMembers() -> a
    void attchToMenu(android.view.Menu) -> a
    void setActionBarOverflowMenuItemCallbacks(com.dailystudio.memory.menu.ActionBarOverflowMenuView$ActionBarOverflowMenuItemCallbacks) -> setActionBarOverflowMenuItemCallbacks
    void onMeasure(int,int) -> onMeasure
    com.dailystudio.memory.menu.ActionBarOverflowMenuView$ActionBarOverflowMenuItemCallbacks access$0(com.dailystudio.memory.menu.ActionBarOverflowMenuView) -> a
    com.dailystudio.memory.menu.ActionBarOverflowMenuListAdapter access$1(com.dailystudio.memory.menu.ActionBarOverflowMenuView) -> b
com.dailystudio.memory.menu.ActionBarOverflowMenuView$1 -> com.dailystudio.memory.menu.g:
    com.dailystudio.memory.menu.ActionBarOverflowMenuView this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dailystudio.memory.menu.ActionBarOverflowMenuView$ActionBarOverflowMenuItemCallbacks -> com.dailystudio.memory.menu.h:
    void onActionBarOverflowMenuItemSelected(android.view.MenuItem) -> a
com.dailystudio.memory.mood.AskMoodTask -> com.dailystudio.memory.mood.AskMoodTask:
    int[] sRandomHintResources -> b
    java.util.Random mRandom -> c
    void onCreate(android.content.Context,long) -> a
    void onExecute(android.content.Context,long) -> b
    int pickHintResourceByHour(int) -> b
com.dailystudio.memory.mood.MemoryMood -> com.dailystudio.memory.mood.MemoryMood:
    com.dailystudio.dataobject.Column COLUMN_MOOD -> a
    com.dailystudio.dataobject.Column COLUMN_MOOD_LEVEL -> b
    com.dailystudio.dataobject.TextColumn COLUMN_COMMENTS -> f
    com.dailystudio.dataobject.Column[] sColumns -> g
    void initMembers() -> j
    void setMood(int) -> a
    int getMood() -> a
    int getMoodLevel() -> h
    void setComment(java.lang.String) -> a
    java.lang.String getComment() -> i
    java.lang.String toString() -> toString
com.dailystudio.memory.mood.MemoryMoodApplication -> com.dailystudio.memory.mood.MemoryMoodApplication:
    void onCreate() -> onCreate
com.dailystudio.memory.mood.MemoryMoodDatabaseConnectivityProvider -> com.dailystudio.memory.mood.MemoryMoodDatabaseConnectivityProvider:
com.dailystudio.memory.mood.MemoryMoodHourAverage -> com.dailystudio.memory.mood.MemoryMoodHourAverage:
    com.dailystudio.dataobject.Column COLUMN_HOUR -> a
    com.dailystudio.dataobject.Column COLUMN_MOOD_AVG -> b
    com.dailystudio.dataobject.Column[] sCloumns -> f
    int getHour() -> a
    double getMoodAverage() -> h
    java.lang.String toString() -> toString
com.dailystudio.memory.mood.MemoryMoodPieceQueryReceiver -> com.dailystudio.memory.mood.MemoryMoodPieceQueryReceiver:
    long onQueryMemoryPiceceCount(android.content.Context) -> a
com.dailystudio.memory.mood.MemoryMoodWeekdayAverage -> com.dailystudio.memory.mood.MemoryMoodWeekdayAverage:
    com.dailystudio.dataobject.Column COLUMN_WEEKDAY -> a
    com.dailystudio.dataobject.Column COLUMN_MOOD_AVG -> b
    com.dailystudio.dataobject.Column[] sCloumns -> f
    int getWeekday() -> a
    double getMoodAverage() -> h
    java.lang.String toString() -> toString
com.dailystudio.memory.mood.Mood -> com.dailystudio.memory.mood.a:
    int identifier -> a
    int labelResId -> b
    int iconResId -> c
    int level -> d
    java.lang.String toString() -> toString
com.dailystudio.memory.mood.MoodCoreAppCheckActivity -> com.dailystudio.memory.mood.MoodCoreAppCheckActivity:
    android.graphics.drawable.Drawable getPluginIcon() -> k
    android.graphics.drawable.Drawable getPluginIconDisabled() -> l
    java.lang.CharSequence getPluginName() -> m
com.dailystudio.memory.mood.MoodSearchableContentProvider -> com.dailystudio.memory.mood.MoodSearchableContentProvider:
    java.util.List doQuerySuggestions(com.dailystudio.memory.searchable.MemorySearchableQuery) -> a
    android.database.Cursor doQueryData(com.dailystudio.memory.searchable.MemorySearchableQuery) -> b
    com.dailystudio.memory.searchable.MemorySearchableContent memoryToSearchableContent(android.database.Cursor) -> a
    java.lang.String getSearchableAuthority() -> a
com.dailystudio.memory.mood.MoodTasksKeepAliveSerive -> com.dailystudio.memory.mood.MoodTasksKeepAliveSerive:
com.dailystudio.memory.mood.MoodWidgetDataUpdateCheckerTask -> com.dailystudio.memory.mood.MoodWidgetDataUpdateCheckerTask:
    void onCreate(android.content.Context,long) -> a
    void onExecute(android.content.Context,long) -> b
    void forceWidgetUpdate(android.content.Context) -> b
    boolean checkDateChanged(android.content.Context) -> a
com.dailystudio.memory.mood.Moods -> com.dailystudio.memory.mood.b:
    com.dailystudio.memory.mood.Mood[] sMoods -> a
    int sMinLevel -> b
    int sMaxLevel -> c
    int sMinLevelMoodId -> d
    int sMaxLevelMoodId -> e
    java.util.List listMoods() -> a
    com.dailystudio.memory.mood.Mood getMood(int) -> a
    int getMoodLevel(int) -> b
    int getMinMoodLevel() -> b
    int getMaxMoodLevel() -> c
    int findMoodIdByLevel(int) -> c
    int getDefaultMoodId() -> d
com.dailystudio.memory.mood.PluginMood -> com.dailystudio.memory.mood.PluginMood:
    android.content.Intent getKeepAliveTaskServiceIntent(android.content.Context) -> a
    android.content.Intent getAppWidgetDataServiceIntent(android.content.Context) -> b
com.dailystudio.memory.mood.activity.MoodByDayChartActivity -> com.dailystudio.memory.mood.activity.MoodByDayChartActivity:
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOverflowMenu(android.view.Menu) -> a
    boolean onOverflowItemSelected(android.view.MenuItem) -> b
    com.dailystudio.memory.fragment.MemoryChartFragment getChartFragment() -> l
com.dailystudio.memory.mood.activity.MoodByDayListActivity -> com.dailystudio.memory.mood.activity.MoodByDayListActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.dailystudio.memory.mood.activity.MoodByWeekChartActivity -> com.dailystudio.memory.mood.activity.MoodByWeekChartActivity:
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOverflowMenu(android.view.Menu) -> a
    boolean onOverflowItemSelected(android.view.MenuItem) -> b
    com.dailystudio.memory.fragment.MemoryChartFragment getChartFragment() -> l
com.dailystudio.memory.mood.activity.WeekdaysListActivity -> com.dailystudio.memory.mood.activity.WeekdaysListActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onListItemSelected(java.lang.Object) -> a
com.dailystudio.memory.mood.activity.WeeksListActivity -> com.dailystudio.memory.mood.activity.WeeksListActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onListItemSelected(java.lang.Object) -> a
com.dailystudio.memory.mood.activity.WhatIsYourMoodActivity -> com.dailystudio.memory.mood.activity.WhatIsYourMoodActivity:
    android.widget.ImageView mMoodDisplayModeView -> n
    int mSelectedMoodIdentifier -> o
    int mQuestionId -> p
    void onCreate(android.os.Bundle) -> onCreate
    void setupActionBar() -> i
    void onNewIntent(android.content.Intent) -> onNewIntent
    void parseAskInfo(android.content.Intent) -> a
    com.dailystudio.memory.mood.fragment.WhatIsYourMoodFragment getMainFragment() -> j
    void updateMoodDisplayModeIcon() -> k
    void onListItemSelected(java.lang.Object) -> a
    void unlockShinyDayAchievement() -> l
    void unlockPoorGuyAchievement() -> m
    void launchDayChartActivity() -> n
    boolean isLaunchedByAppWidget() -> o
    com.dailystudio.memory.mood.fragment.WhatIsYourMoodFragment access$0(com.dailystudio.memory.mood.activity.WhatIsYourMoodActivity) -> a
    void access$1(com.dailystudio.memory.mood.activity.WhatIsYourMoodActivity) -> b
    int access$2(com.dailystudio.memory.mood.activity.WhatIsYourMoodActivity) -> c
    void access$3(com.dailystudio.memory.mood.activity.WhatIsYourMoodActivity) -> d
    void access$4(com.dailystudio.memory.mood.activity.WhatIsYourMoodActivity) -> e
    int access$5(com.dailystudio.memory.mood.activity.WhatIsYourMoodActivity) -> f
    boolean access$6(com.dailystudio.memory.mood.activity.WhatIsYourMoodActivity) -> g
    void access$7(com.dailystudio.memory.mood.activity.WhatIsYourMoodActivity) -> h
    void access$8(com.dailystudio.memory.mood.activity.WhatIsYourMoodActivity,int) -> a
com.dailystudio.memory.mood.activity.WhatIsYourMoodActivity$1 -> com.dailystudio.memory.mood.activity.a:
    com.dailystudio.memory.mood.activity.WhatIsYourMoodActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dailystudio.memory.mood.activity.WhatIsYourMoodActivity$2 -> com.dailystudio.memory.mood.activity.b:
    com.dailystudio.memory.mood.activity.WhatIsYourMoodActivity this$0 -> a
    void onDialogConfirmed(com.dailystudio.memory.ui.AlertDialogFragment,android.content.DialogInterface,int) -> a
    void onDialogCancelled(com.dailystudio.memory.ui.AlertDialogFragment,android.content.DialogInterface,int) -> b
com.dailystudio.memory.mood.appwidget.MoodAppWidgetDataService -> com.dailystudio.memory.mood.appwidget.MoodAppWidgetDataService:
    java.lang.Class[] DB_OBJ_CLASSES -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    java.lang.Class[] listObservedDatabaseObject() -> b
    java.util.List createAsyncTasks(java.lang.Class) -> b
com.dailystudio.memory.mood.appwidget.MoodDayChartWidgetDataAsyncTask -> com.dailystudio.memory.mood.appwidget.a:
    com.dailystudio.memory.mood.chart.WidgetMoodDayChartBuilder mChartBuilder -> d
    android.widget.RemoteViews bindRemoteViews(java.util.List) -> b
    android.content.ComponentName getAppWidgetProvider() -> o
    java.lang.Class getObjectClass() -> c
    void fillRemoteViews(android.widget.RemoteViews) -> a
    void bindClickOnAddButton(android.content.Context,android.widget.RemoteViews) -> a
    void bindClickOnListButton(android.content.Context,android.widget.RemoteViews) -> b
    void bindClickOnWeekButton(android.content.Context,android.widget.RemoteViews) -> c
    void bindClickOnChart(android.content.Context,android.widget.RemoteViews) -> d
    com.dailystudio.memory.chart.ChartBuilder createChartBuilder() -> l
com.dailystudio.memory.mood.appwidget.MoodDayChartWidgetProvider -> com.dailystudio.memory.mood.appwidget.MoodDayChartWidgetProvider:
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
    android.content.Intent getDataServiceIntent(android.content.Context) -> a
com.dailystudio.memory.mood.chart.AppMoodDayChartBuilder -> com.dailystudio.memory.mood.a.a:
    java.lang.Object buildRenderer(java.util.List,java.lang.Object) -> b
com.dailystudio.memory.mood.chart.AppMoodWeekChartBuilder -> com.dailystudio.memory.mood.a.b:
    java.lang.Object buildRenderer(java.util.List,java.lang.Object) -> b
com.dailystudio.memory.mood.chart.BaseMoodDayChartBuilder -> com.dailystudio.memory.mood.a.c:
    long mTimeOfDay -> a
    long getTimeOfDay() -> b
    java.lang.Object buildDataset(java.util.List,java.lang.Object) -> a
    android.util.SparseArray getAverageMoods(android.content.Context) -> a
    void preProcessMoods(java.util.List) -> a
    android.view.View getChart(java.lang.Object,java.lang.Object) -> a
com.dailystudio.memory.mood.chart.BaseMoodWeekChartBuilder -> com.dailystudio.memory.mood.a.d:
    long mPeroidStart -> a
    long mPeroidEnd -> b
    void setPeroid(long,long) -> a
    long getPeroidStart() -> b
    long getPeroidEnd() -> c
    java.lang.Object buildDataset(java.util.List,java.lang.Object) -> a
    java.util.List getAverageMoods(android.content.Context) -> a
com.dailystudio.memory.mood.chart.WidgetMoodDayChartBuilder -> com.dailystudio.memory.mood.a.e:
    java.lang.Object buildRenderer(java.util.List,java.lang.Object) -> b
com.dailystudio.memory.mood.fragment.MoodByDayChartFragment -> com.dailystudio.memory.mood.fragment.MoodByDayChartFragment:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    int getLoaderId() -> I
    android.os.Bundle createLoaderArguments() -> J
    android.view.View getChart(java.lang.Object,java.lang.Object) -> a
com.dailystudio.memory.mood.fragment.MoodByDayListFragment -> com.dailystudio.memory.mood.fragment.MoodByDayListFragment:
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    android.support.v4.widget.CursorAdapter onCreateAdapter() -> F
    int getLoaderId() -> I
    android.os.Bundle createLoaderArguments() -> J
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    android.widget.BaseAdapter onCreateAdapter() -> D
com.dailystudio.memory.mood.fragment.MoodByWeekChartFragment -> com.dailystudio.memory.mood.fragment.MoodByWeekChartFragment:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    int getLoaderId() -> I
    android.os.Bundle createLoaderArguments() -> J
    android.view.View getChart(java.lang.Object,java.lang.Object) -> a
com.dailystudio.memory.mood.fragment.MoodChartFragment -> com.dailystudio.memory.mood.fragment.a:
    android.view.ViewGroup mChartStub -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void setupViews(android.view.View) -> c
    android.view.ViewGroup getChartHolder() -> C
com.dailystudio.memory.mood.fragment.NewMoodConfirmDialogFragment -> com.dailystudio.memory.mood.fragment.b:
    android.widget.EditText mCommentsView -> Y
    java.lang.String mComments -> Z
    android.app.Dialog onCreateDialog(android.os.Bundle) -> c
    java.lang.CharSequence getConfirmText() -> B
    java.lang.CharSequence getCancelText() -> C
    java.lang.CharSequence getTitle() -> D
    java.lang.CharSequence getMessage() -> E
    void onDialogConfirmed(android.content.DialogInterface,int) -> a
    void onDialogCancelled(android.content.DialogInterface,int) -> b
    boolean hasCustomView() -> F
    android.view.View createCustomView() -> G
    java.lang.String getComments() -> H
com.dailystudio.memory.mood.fragment.WeekdaysListFragment -> com.dailystudio.memory.mood.fragment.WeekdaysListFragment:
    int getLoaderId() -> I
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
com.dailystudio.memory.mood.fragment.WeeksListFragment -> com.dailystudio.memory.mood.fragment.WeeksListFragment:
    int getLoaderId() -> I
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
com.dailystudio.memory.mood.fragment.WhatIsYourMoodFragment -> com.dailystudio.memory.mood.fragment.WhatIsYourMoodFragment:
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    android.widget.BaseAdapter onCreateAdapter() -> D
    int getLoaderId() -> I
    android.os.Bundle createLoaderArguments() -> J
    void toogleMoodDisplayMode() -> K
    boolean isMoodLevelDisplayed() -> L
com.dailystudio.memory.mood.loader.MoodDayChartLoader -> com.dailystudio.memory.mood.b.a:
    com.dailystudio.memory.mood.chart.AppMoodDayChartBuilder mChartCore -> h
    java.lang.Class getObjectClass() -> w
    java.lang.Object buildDataset(java.util.List,java.lang.Object) -> a
    java.lang.Object buildRenderer(java.util.List,java.lang.Object) -> b
com.dailystudio.memory.mood.loader.MoodDayListLoader -> com.dailystudio.memory.mood.b.b:
    long mTimeOfDay -> u
    java.lang.Class getObjectClass() -> w
com.dailystudio.memory.mood.loader.MoodWeekChartLoader -> com.dailystudio.memory.mood.b.c:
    com.dailystudio.memory.mood.chart.BaseMoodWeekChartBuilder mChartBuilder -> h
    com.dailystudio.dataobject.query.Query getQuery(java.lang.Class) -> b
    java.lang.Class getObjectClass() -> w
    java.lang.Class getProjectionClass() -> v
    java.lang.Object buildDataset(java.util.List,java.lang.Object) -> a
    java.lang.Object buildRenderer(java.util.List,java.lang.Object) -> b
com.dailystudio.memory.mood.loader.MoodWeekdaysLoader -> com.dailystudio.memory.mood.b.d:
    java.lang.Class getObjectClass() -> w
com.dailystudio.memory.mood.loader.MoodWeeksLoader -> com.dailystudio.memory.mood.b.e:
    java.lang.Class getObjectClass() -> w
    java.util.List loadInBackground() -> f
com.dailystudio.memory.mood.loader.MoodsLoader -> com.dailystudio.memory.mood.b.f:
    java.util.List loadInBackground() -> f
    java.lang.Object loadInBackground() -> d
com.dailystudio.memory.mood.ui.MemoryMoodAdapter -> com.dailystudio.memory.mood.c.a:
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> a
com.dailystudio.memory.mood.ui.MoodsAdatper -> com.dailystudio.memory.mood.c.b:
    boolean mDisplayMoodLvl -> a
    android.view.animation.Animation mDisplayMoodLvlAnim -> b
    android.view.animation.Animation mHideMoodLvlAnim -> c
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    boolean isLevelDisplayed() -> a
    void setLevelDisplayed(boolean) -> a
com.dailystudio.memory.notify.MemoryNotification -> com.dailystudio.memory.notify.MemoryNotification:
    com.dailystudio.dataobject.Column COLUMN_NOTIFY_ID -> a
    com.dailystudio.dataobject.Column COLUMN_SRC_PACKAGE -> b
    com.dailystudio.dataobject.Column COLUMN_TITLE_RES -> f
    com.dailystudio.dataobject.Column COLUMN_TITLE_TEXT -> g
    com.dailystudio.dataobject.Column COLUMN_CONTENT_RES -> h
    com.dailystudio.dataobject.Column COLUMN_CONTENT_TEXT -> i
    com.dailystudio.dataobject.Column COLUMN_LAUNCH_INTENT -> j
    com.dailystudio.dataobject.Column[] sColumns -> k
    int getNotifyId() -> a
    java.lang.String getSourcePackage() -> h
    int getTitleResource() -> i
    java.lang.String getTitleText() -> j
    int getContentResource() -> k
    java.lang.String getContentText() -> l
    java.lang.String dumpNotifyTitle() -> m
    java.lang.String dumpNotifyText() -> n
    java.lang.String getNotifyIntent() -> o
    java.lang.String toString() -> toString
com.dailystudio.memory.notify.MemoryNotificationActivity -> com.dailystudio.memory.notify.a:
    void onCreate(android.os.Bundle) -> onCreate
    void onNewIntent(android.content.Intent) -> onNewIntent
    com.dailystudio.app.fragment.AbsLoaderFragment getBaseFragment() -> f
com.dailystudio.memory.notify.MemoryNotificationDatabaseModal -> com.dailystudio.memory.notify.b:
    com.dailystudio.memory.notify.MemoryNotification findNotify(android.content.Context,int) -> a
    void deleteNotify(android.content.Context,int) -> b
com.dailystudio.memory.notify.MemoryNotificationFragment -> com.dailystudio.memory.notify.MemoryNotificationFragment:
    int mDatabaseId -> a
    int mNid -> b
    java.lang.String mSourcePackage -> c
    android.content.Intent mNotifyIntent -> d
    android.widget.TextView mNotificationContent -> e
    android.widget.TextView mNotificationTitle -> f
    android.view.View mCloseButton -> g
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void setupViews(android.view.View) -> a
    void bindIntent(android.content.Intent) -> b
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
    int getLoaderId() -> I
    android.os.Bundle createLoaderArguments() -> J
    void setNotifyViewed(boolean) -> a
    void updateContent(com.dailystudio.memory.notify.MemoryNotification) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    android.content.Intent access$1(com.dailystudio.memory.notify.MemoryNotificationFragment) -> a
    void access$2(com.dailystudio.memory.notify.MemoryNotificationFragment,boolean) -> a
com.dailystudio.memory.notify.MemoryNotificationFragment$1 -> com.dailystudio.memory.notify.c:
    com.dailystudio.memory.notify.MemoryNotificationFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.dailystudio.memory.notify.MemoryNotificationFragment$2 -> com.dailystudio.memory.notify.d:
    com.dailystudio.memory.notify.MemoryNotificationFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.dailystudio.memory.notify.MemoryNotificationLoader -> com.dailystudio.memory.notify.e:
    int mNid -> u
    java.lang.String mSourcePackage -> v
    java.lang.Class getObjectClass() -> w
    com.dailystudio.dataobject.query.Query getQuery(java.lang.Class) -> b
com.dailystudio.memory.notify.MemoryNotifyCursorAdapter -> com.dailystudio.memory.notify.f:
    long getItemId(int) -> getItemId
com.dailystudio.memory.notify.MemoryNotifyHostView -> com.dailystudio.memory.notify.MemoryNotifyHostView:
    android.content.Context mContext -> a
    android.widget.Adapter mAdapter -> b
    com.dailystudio.memory.notify.MemoryNotifyHostView$NotifyDataSetObserver mDataSetObserver -> c
    android.view.ViewGroup mNotifySlotsRoot -> d
    java.util.Set mReservedViews -> e
    android.util.SparseIntArray mActivedViews -> f
    android.view.animation.Animation mNotifyInAnim -> g
    java.lang.Runnable mRootDisplayRunnable -> h
    android.view.View$OnClickListener mNotifyChildOnClickListener -> i
    void initMembers() -> a
    void setAdapter(android.widget.Adapter) -> setAdapter
    void bindViews() -> b
    void showChild(int) -> a
    void hideChild(int) -> b
    android.view.animation.Animation access$0(com.dailystudio.memory.notify.MemoryNotifyHostView) -> a
    android.util.SparseIntArray access$1(com.dailystudio.memory.notify.MemoryNotifyHostView) -> b
    void access$2(com.dailystudio.memory.notify.MemoryNotifyHostView,int) -> a
    void access$3(com.dailystudio.memory.notify.MemoryNotifyHostView) -> c
    void access$4(com.dailystudio.memory.notify.MemoryNotifyHostView,int) -> b
com.dailystudio.memory.notify.MemoryNotifyHostView$1 -> com.dailystudio.memory.notify.g:
    com.dailystudio.memory.notify.MemoryNotifyHostView this$0 -> a
    void run() -> run
com.dailystudio.memory.notify.MemoryNotifyHostView$2 -> com.dailystudio.memory.notify.h:
    com.dailystudio.memory.notify.MemoryNotifyHostView this$0 -> a
    void onClick(android.view.View) -> onClick
com.dailystudio.memory.notify.MemoryNotifyHostView$NotifyChildDisappearRunnable -> com.dailystudio.memory.notify.i:
    int mViewIndex -> b
    com.dailystudio.memory.notify.MemoryNotifyHostView this$0 -> a
    void run() -> run
com.dailystudio.memory.notify.MemoryNotifyHostView$NotifyChildDisplayRunnable -> com.dailystudio.memory.notify.j:
    int mViewIndex -> b
    com.dailystudio.memory.notify.MemoryNotifyHostView this$0 -> a
    void run() -> run
com.dailystudio.memory.notify.MemoryNotifyHostView$NotifyDataSetObserver -> com.dailystudio.memory.notify.k:
    com.dailystudio.memory.notify.MemoryNotifyHostView this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.dailystudio.memory.plugin.MemoryPlugin -> com.dailystudio.memory.plugin.a:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void startTaskActionExecutor(com.dailystudio.memory.plugin.TaskActionExecutor) -> a
    boolean onRegister(android.content.Context,long) -> a
    boolean onUnregister(android.content.Context,long) -> b
    boolean onCreateTask(android.content.Context,int,java.lang.String,long) -> a
    boolean onDestoryTask(android.content.Context,int,long) -> a
    boolean onExecuteTask(android.content.Context,int,long) -> b
    boolean onPauseTask(android.content.Context,int,long) -> c
    boolean onResumeTask(android.content.Context,int,long) -> d
    boolean onPrepareTaskObservables(android.content.Context,int,long) -> e
    boolean onDestoryTaskObservables(android.content.Context,int,long) -> f
    boolean onKeepAliveTask(android.content.Context,int,long) -> g
    boolean onClearTasks(android.content.Context,long) -> c
    android.content.Intent getKeepAliveTaskServiceIntent(android.content.Context) -> a
    android.content.Intent getAppWidgetDataServiceIntent(android.content.Context) -> b
com.dailystudio.memory.plugin.MemoryPluginInfo -> com.dailystudio.memory.plugin.b:
    android.content.Context mContext -> a
    android.content.ComponentName mComponent -> b
    java.lang.String mLabel -> c
    int mIconRes -> d
    int mPrivacyPolicyRes -> e
    android.net.Uri mShowcasePageUri -> f
    java.lang.String mSearchDatabaseAuthority -> g
    android.content.ComponentName getComponent() -> b
    java.lang.String getLabel() -> d
    int getIconResource() -> e
    int getPrivacyPolicResource() -> f
    void createTask(java.lang.String,int) -> a
    void destroyTask(int) -> a
    void pauseTask(int) -> b
    void executeTask(int) -> c
    void keepAliveTask(int) -> d
    void sendBroadcast(android.content.Intent) -> a
    java.lang.String getSingletonKey() -> g
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    java.lang.String getGroup() -> h
    java.lang.Object getSingletonKey() -> c
    java.lang.Object getGroup() -> a
com.dailystudio.memory.plugin.PluginManager -> com.dailystudio.memory.plugin.c:
    com.dailystudio.memory.plugin.PluginManager getInstance() -> f
    void removeTaskHosts(com.dailystudio.memory.plugin.MemoryPluginInfo) -> b
    void removeObject(com.dailystudio.memory.plugin.MemoryPluginInfo) -> a
    com.dailystudio.memory.plugin.MemoryPluginInfo removeObject(java.lang.String) -> a
    com.dailystudio.memory.plugin.MemoryPluginInfo getPlugin(java.lang.String) -> b
    java.util.List listPlugins(java.lang.String) -> c
    com.dailystudio.manager.IGroupObject removeObject(java.lang.Object) -> b
    void removeObject(com.dailystudio.manager.IGroupObject) -> b
com.dailystudio.memory.plugin.PluginObserverable -> com.dailystudio.memory.plugin.PluginObserverable:
    void onCreate() -> a
    void onDestroy() -> b
    void onPause() -> d
    void onResume() -> e
com.dailystudio.memory.plugin.TaskActionExecutor -> com.dailystudio.memory.plugin.d:
    java.util.concurrent.BlockingQueue mPendingQueue -> b
    boolean mEndFlag -> c
    java.lang.Object mWaitObject -> d
    com.dailystudio.memory.plugin.TaskActionExecutor sInstance -> e
    android.os.Handler mHandler -> f
    com.dailystudio.memory.plugin.TaskActionExecutor getInstance() -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void tryToExecuteAction(com.dailystudio.memory.plugin.actions.TaskAction) -> a
    void onCancelled() -> f
    java.lang.Object doInBackground(java.lang.Object[]) -> a
com.dailystudio.memory.plugin.actions.ClearTasksAction -> com.dailystudio.memory.plugin.a.a:
    boolean doTaskAction(int,long) -> a
com.dailystudio.memory.plugin.actions.CreateTaskAction -> com.dailystudio.memory.plugin.a.b:
    boolean doTaskAction(int,long) -> a
com.dailystudio.memory.plugin.actions.DestroyTaskAction -> com.dailystudio.memory.plugin.a.c:
    boolean doTaskAction(int,long) -> a
com.dailystudio.memory.plugin.actions.DestroyTaskObservablesAction -> com.dailystudio.memory.plugin.a.d:
    boolean doTaskAction(int,long) -> a
com.dailystudio.memory.plugin.actions.ExecuteTaskAction -> com.dailystudio.memory.plugin.a.e:
    boolean doTaskAction(int,long) -> a
com.dailystudio.memory.plugin.actions.KeepAliveTaskAction -> com.dailystudio.memory.plugin.a.f:
    boolean doTaskAction(int,long) -> a
com.dailystudio.memory.plugin.actions.PauseTaskAction -> com.dailystudio.memory.plugin.a.g:
    boolean doTaskAction(int,long) -> a
com.dailystudio.memory.plugin.actions.PrepareTaskObservablesAction -> com.dailystudio.memory.plugin.a.h:
    boolean doTaskAction(int,long) -> a
com.dailystudio.memory.plugin.actions.ResumeTaskAction -> com.dailystudio.memory.plugin.a.i:
    boolean doTaskAction(int,long) -> a
com.dailystudio.memory.plugin.actions.TaskAction -> com.dailystudio.memory.plugin.a.j:
    android.content.Context mContext -> a
    com.dailystudio.memory.plugin.MemoryPlugin mPlugin -> b
    android.content.Intent mIntent -> c
    boolean mRunInMainThread -> d
    void run() -> run
    boolean isRunInMainThread() -> a
    java.lang.String toString() -> toString
    boolean doTaskAction(int,long) -> a
com.dailystudio.memory.record.MemoryRecord -> com.dailystudio.memory.record.MemoryRecord:
    com.dailystudio.dataobject.Column COLUMN_NAME -> a
    com.dailystudio.dataobject.Column COLUMN_SCORE -> b
    com.dailystudio.dataobject.Column COLUMN_DELTA_SCORE -> f
    com.dailystudio.dataobject.Column COLUMN_REVIEWED -> g
    com.dailystudio.dataobject.Column[] sCloumns -> h
    java.lang.String getRecordName() -> a
    long getRecordScore() -> h
    long getDeltaScore() -> i
    boolean isReviewed() -> j
    java.lang.String toString() -> toString
com.dailystudio.memory.searchable.MemorySearchableContent -> com.dailystudio.memory.searchable.a:
    java.lang.String[] COLUMNS -> a
    int id -> b
    java.lang.String text1 -> c
    java.lang.String text2 -> d
    java.lang.String icon1ResId -> e
    java.lang.String icon2ResId -> f
    java.lang.String time -> g
    java.lang.Object[] toColumnValues() -> a
com.dailystudio.memory.searchable.MemorySearchableContentProvider -> com.dailystudio.memory.searchable.b:
    boolean onCreate() -> onCreate
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    android.database.Cursor queryData(java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> b
    android.database.Cursor querySuggestions(java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> a
    com.dailystudio.memory.searchable.MemorySearchableQuery buildSearchableQuery(java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> c
    java.lang.String composeResourceUri(android.content.Context,int) -> a
    java.lang.String composeResourceUri(android.content.Context,java.lang.String,int) -> a
    android.database.Cursor doQueryData(com.dailystudio.memory.searchable.MemorySearchableQuery) -> b
    java.util.List doQuerySuggestions(com.dailystudio.memory.searchable.MemorySearchableQuery) -> a
    com.dailystudio.memory.searchable.MemorySearchableContent memoryToSearchableContent(android.database.Cursor) -> a
    java.lang.String getSearchableAuthority() -> a
com.dailystudio.memory.searchable.MemorySearchableQuery -> com.dailystudio.memory.searchable.MemorySearchableQuery:
    com.dailystudio.memory.searchable.queryparams.QueryParamterAnanlyzer[] sAnalyzers -> sAnalyzers
    java.lang.String queryInputs -> queryInputs
    java.util.List keywordQueryParams -> keywordQueryParams
    java.util.List timeQueryParams -> timeQueryParams
    java.util.List textQueryParams -> textQueryParams
    void buildFromInputs(java.lang.String) -> buildFromInputs
    void dispatchAndAddQueryParameters(com.dailystudio.memory.searchable.queryparams.QueryParameter) -> dispatchAndAddQueryParameters
    java.lang.String toString() -> toString
com.dailystudio.memory.searchable.MemorySearchableQuery$AnalyzedResult -> com.dailystudio.memory.searchable.c:
    java.util.List params -> a
    java.lang.String remainedKeywords -> b
    java.lang.String toString() -> toString
com.dailystudio.memory.searchable.MemorySearchableSuggestion -> com.dailystudio.memory.searchable.d:
    java.lang.String[] COLUMNS -> a
    int id -> b
    java.lang.String query -> c
    java.lang.String text1 -> d
    java.lang.String text2 -> e
    java.lang.String intentData -> f
    java.lang.String icon1ResId -> g
    java.lang.String icon2ResId -> h
    java.lang.String intentExtraData -> i
    java.lang.Object[] toColumnValues() -> a
com.dailystudio.memory.searchable.queryparams.KeywordQueryParameter -> com.dailystudio.memory.searchable.queryparams.KeywordQueryParameter:
    java.util.Map sTranlators -> sTranlators
    java.lang.String keyword -> keyword
    boolean isValid() -> isValid
    java.lang.String toString() -> toString
    com.dailystudio.memory.searchable.queryparams.QueryParameter checkOrTranlateBuildinKeyword(com.dailystudio.memory.searchable.queryparams.KeywordQueryParameter) -> checkOrTranlateBuildinKeyword
com.dailystudio.memory.searchable.queryparams.KeywordQueryParameterAnanlzyer -> com.dailystudio.memory.searchable.queryparams.a:
    java.lang.String getQueryPattern() -> a
    com.dailystudio.memory.searchable.queryparams.QueryParameter createParamter() -> b
    void onFillMatchedParameters(java.util.regex.Matcher,com.dailystudio.memory.searchable.queryparams.QueryParameter) -> a
com.dailystudio.memory.searchable.queryparams.QueryParameter -> com.dailystudio.memory.searchable.queryparams.b:
    java.lang.String QUERY_TYPE_DATE -> QUERY_TYPE_DATE
    java.lang.String QUERY_TYPE_TEXT -> QUERY_TYPE_TEXT
    java.lang.String QUERY_TYPE_KEYWORD -> QUERY_TYPE_KEYWORD
    java.lang.String queryType -> queryType
    boolean isValid() -> isValid
    java.lang.String toString() -> toString
com.dailystudio.memory.searchable.queryparams.QueryParamterAnanlyzer -> com.dailystudio.memory.searchable.queryparams.c:
    com.dailystudio.memory.searchable.MemorySearchableQuery$AnalyzedResult analyzeKeywords(java.lang.String) -> a
    com.dailystudio.memory.searchable.queryparams.QueryParameter createParamter() -> b
    java.lang.String getQueryPattern() -> a
    void onFillMatchedParameters(java.util.regex.Matcher,com.dailystudio.memory.searchable.queryparams.QueryParameter) -> a
    void printMatcher(java.util.regex.Matcher) -> a
com.dailystudio.memory.searchable.queryparams.TextQueryParameter -> com.dailystudio.memory.searchable.queryparams.TextQueryParameter:
    java.lang.String text -> text
    boolean isValid() -> isValid
    java.lang.String toString() -> toString
com.dailystudio.memory.searchable.queryparams.TextQueryParameterAnanlzyer -> com.dailystudio.memory.searchable.queryparams.d:
    java.lang.String getQueryPattern() -> a
    com.dailystudio.memory.searchable.queryparams.QueryParameter createParamter() -> b
    void onFillMatchedParameters(java.util.regex.Matcher,com.dailystudio.memory.searchable.queryparams.QueryParameter) -> a
com.dailystudio.memory.searchable.queryparams.TimeQueryParameter -> com.dailystudio.memory.searchable.queryparams.TimeQueryParameter:
    long timeBegin -> timeBegin
    long timeEnd -> timeEnd
    boolean isValid() -> isValid
    java.lang.String toString() -> toString
com.dailystudio.memory.searchable.queryparams.TimeQueryParameterAnanlzyer -> com.dailystudio.memory.searchable.queryparams.e:
    java.lang.String getQueryPattern() -> a
    com.dailystudio.memory.searchable.queryparams.QueryParameter createParamter() -> b
    void onFillMatchedParameters(java.util.regex.Matcher,com.dailystudio.memory.searchable.queryparams.QueryParameter) -> a
    void analyzeTimeRange(com.dailystudio.memory.searchable.queryparams.TimeQueryParameter,java.lang.String) -> a
    long analyzeTime(java.lang.String) -> b
com.dailystudio.memory.searchable.queryparams.keywords.AbsKeywordTranslator -> com.dailystudio.memory.searchable.queryparams.a.a:
    com.dailystudio.memory.searchable.queryparams.QueryParameter tranlate(com.dailystudio.memory.searchable.queryparams.KeywordQueryParameter) -> a
com.dailystudio.memory.searchable.queryparams.keywords.KeywordLastWeekTranslator -> com.dailystudio.memory.searchable.queryparams.a.b:
    com.dailystudio.memory.searchable.queryparams.QueryParameter tranlate(com.dailystudio.memory.searchable.queryparams.KeywordQueryParameter) -> a
com.dailystudio.memory.searchable.queryparams.keywords.KeywordThisMonthTranslator -> com.dailystudio.memory.searchable.queryparams.a.c:
    com.dailystudio.memory.searchable.queryparams.QueryParameter tranlate(com.dailystudio.memory.searchable.queryparams.KeywordQueryParameter) -> a
com.dailystudio.memory.searchable.queryparams.keywords.KeywordThisWeekTranslator -> com.dailystudio.memory.searchable.queryparams.a.d:
    com.dailystudio.memory.searchable.queryparams.QueryParameter tranlate(com.dailystudio.memory.searchable.queryparams.KeywordQueryParameter) -> a
com.dailystudio.memory.searchable.queryparams.keywords.KeywordTodayTranslator -> com.dailystudio.memory.searchable.queryparams.a.e:
    com.dailystudio.memory.searchable.queryparams.QueryParameter tranlate(com.dailystudio.memory.searchable.queryparams.KeywordQueryParameter) -> a
com.dailystudio.memory.searchable.queryparams.keywords.KeywordYesterdayTranslator -> com.dailystudio.memory.searchable.queryparams.a.f:
    com.dailystudio.memory.searchable.queryparams.QueryParameter tranlate(com.dailystudio.memory.searchable.queryparams.KeywordQueryParameter) -> a
com.dailystudio.memory.task.ConditionalTaskHost -> com.dailystudio.memory.task.ConditionalTaskHost:
com.dailystudio.memory.task.PeriodicalTaskHost -> com.dailystudio.memory.task.PeriodicalTaskHost:
    int mExecPeroidMillis -> a
    android.app.PendingIntent mAlarmSender -> k
    void initMembers() -> t
    int getExecPeroid() -> b
    long predictNextExecTime() -> d
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    void startTask() -> e
    android.content.ComponentName composeTaskComponent() -> u
    void stopTask() -> f
com.dailystudio.memory.task.Task -> com.dailystudio.memory.task.a:
    android.content.Context mContext -> a
    int mTaskId -> b
    boolean mInDBUpdates -> c
    android.os.Handler mHandler -> d
    void initMembers() -> f
    int getTaskId() -> a
    void setTaskId(int) -> a
    java.lang.Integer getSingletonKey() -> b
    boolean isInDatabaseUpdates() -> d
    android.content.ComponentName composeTaskComponent() -> g
    void requestExecute() -> e
    void onCreate(android.content.Context,long) -> a
    void onDestroy(android.content.Context,long) -> c
    void onPause(android.content.Context,long) -> d
    void onResume(android.content.Context,long) -> e
    void onPrepareObservables(android.content.Context,long) -> f
    void onDestoryObservables(android.content.Context,long) -> g
    void onExecute(android.content.Context,long) -> b
    java.lang.Object getSingletonKey() -> c
com.dailystudio.memory.task.TaskFactory -> com.dailystudio.memory.task.b:
    int sTaskIdSeed -> a
    com.dailystudio.memory.task.TaskFactory getInstance() -> b
    com.dailystudio.memory.task.Task createTask(java.lang.String) -> c
    com.dailystudio.memory.task.Task newObject(java.lang.String) -> d
    java.lang.Object newObject(java.lang.String) -> a
com.dailystudio.memory.task.TaskHost -> com.dailystudio.memory.task.c:
    android.content.Context mContext -> b
    int mTaskId -> c
    java.lang.String mLabel -> d
    android.content.ComponentName mComponent -> e
    java.lang.String mTaskClass -> f
    int mSuccessTimes -> g
    int mFailureTimes -> h
    long mLastExecTime -> i
    long mNextExecTime -> j
    boolean mIsOneshot -> a
    com.dailystudio.memory.task.TaskStatus mStatus -> k
    void initMembers() -> b
    int getTaskId() -> g
    java.lang.String getLabel() -> h
    void execSuccess() -> i
    void execFailure() -> j
    long predictNextExecTime() -> d
    boolean isOneshot() -> k
    android.content.ComponentName getComponent() -> l
    com.dailystudio.memory.plugin.MemoryPluginInfo getPlugin() -> m
    void createTask() -> n
    void destroyTask() -> o
    void startTask() -> e
    void stopTask() -> f
    void executeTask() -> p
    void keepAliveTask() -> q
    java.lang.String getGroup() -> r
    java.lang.Integer getSingletonKey() -> s
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    void run() -> run
    void saveIntoDatabase(java.lang.String) -> a
    java.lang.Object getSingletonKey() -> c
    java.lang.Object getGroup() -> a
com.dailystudio.memory.task.TaskHostAction -> com.dailystudio.memory.task.TaskHostAction:
    com.dailystudio.dataobject.Column COLUMN_TASK_ID -> a
    com.dailystudio.dataobject.Column COLUMN_TASK_CLASS -> b
    com.dailystudio.dataobject.Column COLUMN_TASK_ACTION -> f
    com.dailystudio.dataobject.Column[] sColumns -> g
com.dailystudio.memory.task.TaskHostManager -> com.dailystudio.memory.task.d:
    android.content.BroadcastReceiver mResultReceiver -> e
    android.content.BroadcastReceiver mKeepAliveReceiver -> f
    android.content.BroadcastReceiver mRequestExecuteReceiver -> g
    void registerResultReceiver() -> h
    void unregisterResultReceiver() -> i
    void registerKeepAliveReceiver() -> j
    void unregisterKeepAliveReceiver() -> k
    void registerRequestReceiver() -> l
    void unregisterRequestReceiver() -> m
    void addObject(com.dailystudio.memory.task.TaskHost) -> a
    void removeObject(com.dailystudio.memory.task.TaskHost) -> b
    com.dailystudio.memory.task.TaskHost removeObject(java.lang.Integer) -> a
    com.dailystudio.memory.task.TaskHostManager getInstance() -> f
    void unregisterTask(com.dailystudio.memory.task.TaskHost) -> c
    com.dailystudio.memory.task.TaskHost getTask(int) -> a
    java.util.List getTasks(android.content.ComponentName) -> a
    int countTasks() -> g
    void recoveryTask(int) -> b
    void addObject(com.dailystudio.manager.IGroupObject) -> a
    com.dailystudio.manager.IGroupObject removeObject(java.lang.Object) -> b
    void removeObject(com.dailystudio.manager.IGroupObject) -> b
    android.content.BroadcastReceiver access$3(com.dailystudio.memory.task.TaskHostManager) -> a
com.dailystudio.memory.task.TaskHostManager$1 -> com.dailystudio.memory.task.e:
    com.dailystudio.memory.task.TaskHostManager this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.dailystudio.memory.task.TaskHostManager$2 -> com.dailystudio.memory.task.f:
    com.dailystudio.memory.task.TaskHostManager this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void keepAliveHostsInPackage(java.lang.String) -> a
    void keepAliveHostsInPlugin(com.dailystudio.memory.plugin.MemoryPluginInfo) -> a
com.dailystudio.memory.task.TaskHostManager$3 -> com.dailystudio.memory.task.g:
    com.dailystudio.memory.task.TaskHostManager this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.dailystudio.memory.task.TaskManager -> com.dailystudio.memory.task.h:
    com.dailystudio.memory.task.TaskManager getInstance() -> f
    void registerTask(com.dailystudio.memory.task.Task) -> a
    void unregisterTask(com.dailystudio.memory.task.Task) -> b
    com.dailystudio.memory.task.Task getTask(int) -> a
    java.util.List listTasks() -> g
com.dailystudio.memory.task.TaskStatus -> com.dailystudio.memory.task.i:
    com.dailystudio.memory.task.TaskStatus IDLE -> a
    com.dailystudio.memory.task.TaskStatus RUNNING -> b
    com.dailystudio.memory.task.TaskStatus DONE -> c
    com.dailystudio.memory.task.TaskStatus CANCELLED -> d
    com.dailystudio.memory.task.TaskStatus[] ENUM$VALUES -> e
    com.dailystudio.memory.task.TaskStatus[] values() -> values
    com.dailystudio.memory.task.TaskStatus valueOf(java.lang.String) -> valueOf
com.dailystudio.memory.task.TasksKeepAliveService -> com.dailystudio.memory.task.j:
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
com.dailystudio.memory.ui.AlertDialogFragment -> com.dailystudio.memory.ui.a:
    com.dailystudio.memory.ui.AlertDialogFragment$AlertDialogFragmentCallbacks mCallbacks -> Y
    android.app.Dialog onCreateDialog(android.os.Bundle) -> c
    int getDefaultTheme() -> I
    boolean hasConfirmButton() -> J
    boolean hasCancelButton() -> K
    boolean hasCustomView() -> F
    void setCallbacks(com.dailystudio.memory.ui.AlertDialogFragment$AlertDialogFragmentCallbacks) -> a
    android.view.View createCustomView() -> G
    java.lang.CharSequence getConfirmText() -> B
    java.lang.CharSequence getCancelText() -> C
    java.lang.CharSequence getTitle() -> D
    java.lang.CharSequence getMessage() -> E
    void onDialogConfirmed(android.content.DialogInterface,int) -> a
    void onDialogCancelled(android.content.DialogInterface,int) -> b
    com.dailystudio.memory.ui.AlertDialogFragment$AlertDialogFragmentCallbacks access$0(com.dailystudio.memory.ui.AlertDialogFragment) -> a
com.dailystudio.memory.ui.AlertDialogFragment$1 -> com.dailystudio.memory.ui.b:
    com.dailystudio.memory.ui.AlertDialogFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.dailystudio.memory.ui.AlertDialogFragment$2 -> com.dailystudio.memory.ui.c:
    com.dailystudio.memory.ui.AlertDialogFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.dailystudio.memory.ui.AlertDialogFragment$AlertDialogFragmentCallbacks -> com.dailystudio.memory.ui.d:
    void onDialogConfirmed(com.dailystudio.memory.ui.AlertDialogFragment,android.content.DialogInterface,int) -> a
    void onDialogCancelled(com.dailystudio.memory.ui.AlertDialogFragment,android.content.DialogInterface,int) -> b
com.dailystudio.memory.ui.AlertDialogFragment$CompatAlertDialog -> com.dailystudio.memory.ui.e:
    com.dailystudio.memory.ui.AlertDialogFragment this$0 -> a
com.dailystudio.memory.ui.CountView -> com.dailystudio.memory.ui.CountView:
    int DEFAULT_MINI_DIGITS -> b
    long DELTA_INC_DELAY -> c
    long DURATION_ESTIMATION_UNIT -> d
    long MAX_COUNT_DURATION -> e
    android.content.Context mContext -> a
    int mMiniDigits -> f
    java.lang.String mCountValueTempl -> g
    long mDestCount -> h
    long mCurrCount -> i
    com.dailystudio.memory.ui.CountView$OnCountListener mOnCountListener -> j
    void initMembers() -> a
    void setMinimumDigits(int) -> setMinimumDigits
    int getMinimumDigits() -> getMinimumDigits
    void updateCountValue() -> b
    void setOnCountListener(com.dailystudio.memory.ui.CountView$OnCountListener) -> setOnCountListener
com.dailystudio.memory.ui.CountView$OnCountListener -> com.dailystudio.memory.ui.f:
com.dailystudio.memory.ui.R -> com.dailystudio.memory.ui.g:
com.dailystudio.memory.ui.R$anim -> com.dailystudio.memory.ui.h:
    int actbar_overflow_dropdown_in -> actbar_overflow_dropdown_in
    int actbar_overflow_dropdown_out -> actbar_overflow_dropdown_out
    int actbar_overflow_popup_overlay_in -> actbar_overflow_popup_overlay_in
    int actbar_overflow_popup_overlay_out -> actbar_overflow_popup_overlay_out
    int actbar_prompt_in_bottom -> actbar_prompt_in_bottom
    int actbar_prompt_out_bottom -> actbar_prompt_out_bottom
    int ask_board_in -> ask_board_in
    int ask_board_out -> ask_board_out
    int char_layout_anim -> char_layout_anim
    int chart_in -> chart_in
    int circle_item_in -> circle_item_in
    int circle_layout_anim -> circle_layout_anim
    int expand_list_item_in -> expand_list_item_in
    int expand_list_item_layout_anim -> expand_list_item_layout_anim
    int fade_in -> fade_in
    int fade_out -> fade_out
    int grid_item_in -> grid_item_in
    int grid_layout_anim -> grid_layout_anim
    int grow_fade_in -> grow_fade_in
    int grow_fade_in_center -> grow_fade_in_center
    int grow_fade_in_from_bottom -> grow_fade_in_from_bottom
    int list_item_in -> list_item_in
    int list_layout_anim -> list_layout_anim
    int notify_view_in -> notify_view_in
    int notify_view_out -> notify_view_out
    int paper_clip_in -> paper_clip_in
    int paper_clip_out -> paper_clip_out
    int shrink_fade_out -> shrink_fade_out
    int shrink_fade_out_center -> shrink_fade_out_center
    int shrink_fade_out_from_bottom -> shrink_fade_out_from_bottom
    int slide_fade_in_bottom -> slide_fade_in_bottom
    int slide_fade_in_left -> slide_fade_in_left
    int slide_fade_in_right -> slide_fade_in_right
    int slide_fade_in_top -> slide_fade_in_top
    int slide_fade_out_bottom -> slide_fade_out_bottom
    int slide_fade_out_left -> slide_fade_out_left
    int slide_fade_out_right -> slide_fade_out_right
    int slide_fade_out_top -> slide_fade_out_top
com.dailystudio.memory.ui.R$color -> com.dailystudio.memory.ui.i:
    int action_bar_bg_color -> action_bar_bg_color
    int action_bar_popup_content_overlay -> action_bar_popup_content_overlay
    int action_bar_text_color -> action_bar_text_color
    int action_bar_text_disable_color -> action_bar_text_disable_color
    int android_blue -> android_blue
    int android_blue_light -> android_blue_light
    int black -> black
    int blue -> blue
    int chart_transparent -> chart_transparent
    int core_app_check_step_text_color -> core_app_check_step_text_color
    int dark_red -> dark_red
    int default_button_text_color -> default_button_text_color
    int fadeText -> fadeText
    int gold_yellow -> gold_yellow
    int gray -> gray
    int green -> green
    int light_black -> light_black
    int light_gray -> light_gray
    int light_white -> light_white
    int orange -> orange
    int red -> red
    int royal_blue -> royal_blue
    int see_green -> see_green
    int tomato_red -> tomato_red
    int translucent_background -> translucent_background
    int transparent -> transparent
    int transparent_background -> transparent_background
    int white -> white
com.dailystudio.memory.ui.R$dimen -> com.dailystudio.memory.ui.j:
    int actbar_custom_view_right_padding -> actbar_custom_view_right_padding
    int actbar_overflow_menu_icon_height -> actbar_overflow_menu_icon_height
    int actbar_overflow_menu_icon_width -> actbar_overflow_menu_icon_width
    int actbar_overflow_menu_item_padding -> actbar_overflow_menu_item_padding
    int actbar_overflow_menu_max_width -> actbar_overflow_menu_max_width
    int actbar_overflow_menu_text_size -> actbar_overflow_menu_text_size
    int action_bar_height -> action_bar_height
    int action_bar_padding -> action_bar_padding
    int action_bar_right_padding -> action_bar_right_padding
    int action_bar_text_size -> action_bar_text_size
    int alert_dialog_custom_view_padding_bottom -> alert_dialog_custom_view_padding_bottom
    int alert_dialog_custom_view_padding_left -> alert_dialog_custom_view_padding_left
    int alert_dialog_custom_view_padding_right -> alert_dialog_custom_view_padding_right
    int alert_dialog_custom_view_padding_top -> alert_dialog_custom_view_padding_top
    int app_widget_btn_padding -> app_widget_btn_padding
    int app_widget_chart_margin_bottom -> app_widget_chart_margin_bottom
    int app_widget_chart_margin_left -> app_widget_chart_margin_left
    int app_widget_chart_margin_right -> app_widget_chart_margin_right
    int app_widget_chart_margin_top -> app_widget_chart_margin_top
    int app_widget_frame_padding -> app_widget_frame_padding
    int app_widget_grid_height -> app_widget_grid_height
    int app_widget_grid_width -> app_widget_grid_width
    int app_widget_label_font_size -> app_widget_label_font_size
    int app_widget_label_padding -> app_widget_label_padding
    int app_widget_margin -> app_widget_margin
    int app_widget_title_padding -> app_widget_title_padding
    int ask_question_answers_padding -> ask_question_answers_padding
    int ask_question_content_padding -> ask_question_content_padding
    int bfw_hpadding -> bfw_hpadding
    int bfw_min_content_height -> bfw_min_content_height
    int bfw_title_height -> bfw_title_height
    int bfw_title_hpadding -> bfw_title_hpadding
    int close_button_size -> close_button_size
    int core_app_check_badge_margin -> core_app_check_badge_margin
    int core_app_check_padding -> core_app_check_padding
    int daygroup_item_height -> daygroup_item_height
    int default_ask_board_width -> default_ask_board_width
    int default_button_padding -> default_button_padding
    int default_chart_axis_title_size -> default_chart_axis_title_size
    int default_chart_label_size -> default_chart_label_size
    int default_chart_legend_height -> default_chart_legend_height
    int default_chart_legend_size -> default_chart_legend_size
    int default_chart_margin_bottom -> default_chart_margin_bottom
    int default_chart_margin_left -> default_chart_margin_left
    int default_chart_margin_right -> default_chart_margin_right
    int default_chart_margin_top -> default_chart_margin_top
    int default_chart_title_size -> default_chart_title_size
    int default_check_padding -> default_check_padding
    int default_content_hpadding -> default_content_hpadding
    int default_content_vpadding -> default_content_vpadding
    int default_empty_text_font_size -> default_empty_text_font_size
    int default_font_size -> default_font_size
    int default_label_padding -> default_label_padding
    int default_notify_height -> default_notify_height
    int lv_index_font_size -> lv_index_font_size
    int lv_index_padding -> lv_index_padding
    int lv_index_width -> lv_index_width
    int lv_item_font_size -> lv_item_font_size
    int lv_item_padding -> lv_item_padding
    int memory_ic_height -> memory_ic_height
    int memory_ic_witdh -> memory_ic_witdh
    int memory_index_font_size -> memory_index_font_size
    int memory_index_padding -> memory_index_padding
    int memory_index_width -> memory_index_width
    int notification_content_padding -> notification_content_padding
    int notification_dialog_height -> notification_dialog_height
    int paper_clip_content_hpadding -> paper_clip_content_hpadding
    int paper_clip_content_vpadding -> paper_clip_content_vpadding
    int paper_clip_frame_padding -> paper_clip_frame_padding
    int paper_clip_title_font_size -> paper_clip_title_font_size
    int paper_clip_title_height -> paper_clip_title_height
    int paper_clip_title_hmargin -> paper_clip_title_hmargin
    int paper_clip_title_vmargin -> paper_clip_title_vmargin
com.dailystudio.memory.ui.R$drawable -> com.dailystudio.memory.ui.k:
    int actbar_button -> actbar_button
    int actbar_button_pressed_light -> actbar_button_pressed_light
    int actbar_dropdown_background -> actbar_dropdown_background
    int actbar_prg_01 -> actbar_prg_01
    int actbar_prg_02 -> actbar_prg_02
    int actbar_prg_03 -> actbar_prg_03
    int actbar_prg_04 -> actbar_prg_04
    int actbar_prg_05 -> actbar_prg_05
    int actbar_prg_06 -> actbar_prg_06
    int actbar_prg_07 -> actbar_prg_07
    int actbar_prg_08 -> actbar_prg_08
    int actbar_vert_separator -> actbar_vert_separator
    int app_widget_background -> app_widget_background
    int app_widget_btn -> app_widget_btn
    int app_widget_btn_pressed -> app_widget_btn_pressed
    int ask_board -> ask_board
    int ask_board_normal -> ask_board_normal
    int ask_board_pressed -> ask_board_pressed
    int ask_dialog_bg -> ask_dialog_bg
    int check_background -> check_background
    int check_off_dark -> check_off_dark
    int check_off_light -> check_off_light
    int check_on -> check_on
    int content_bg_op60 -> content_bg_op60
    int content_bg_op80 -> content_bg_op80
    int content_bg_op90 -> content_bg_op90
    int default_button -> default_button
    int default_button_disabled_focused_light -> default_button_disabled_focused_light
    int default_button_disabled_light -> default_button_disabled_light
    int default_button_focused_light -> default_button_focused_light
    int default_button_normal_light -> default_button_normal_light
    int default_button_pressed_light -> default_button_pressed_light
    int default_content_bg -> default_content_bg
    int default_content_bg_pattern -> default_content_bg_pattern
    int default_dark_check -> default_dark_check
    int default_light_check -> default_light_check
    int edit_text_light -> edit_text_light
    int get_it_on_play_logo_large -> get_it_on_play_logo_large
    int get_it_on_play_logo_large_disabled -> get_it_on_play_logo_large_disabled
    int get_it_on_play_logo_large_normal -> get_it_on_play_logo_large_normal
    int get_it_on_play_logo_large_pressed -> get_it_on_play_logo_large_pressed
    int guess_right -> guess_right
    int guess_wrong -> guess_wrong
    int ic_action_overflow -> ic_action_overflow
    int ic_action_search -> ic_action_search
    int ic_calendar_day -> ic_calendar_day
    int ic_calendar_month -> ic_calendar_month
    int ic_calendar_week -> ic_calendar_week
    int ic_close_button -> ic_close_button
    int ic_close_button_normal -> ic_close_button_normal
    int ic_close_button_pressed -> ic_close_button_pressed
    int ic_done -> ic_done
    int ic_done_highlight -> ic_done_highlight
    int ic_done_normal -> ic_done_normal
    int ic_launcher -> ic_launcher
    int ic_memory_bar_chart -> ic_memory_bar_chart
    int ic_memory_chart -> ic_memory_chart
    int ic_memory_list -> ic_memory_list
    int ic_memory_record -> ic_memory_record
    int ic_menu_add -> ic_menu_add
    int ic_menu_calendar -> ic_menu_calendar
    int ic_menu_history -> ic_menu_history
    int ic_menu_list -> ic_menu_list
    int ic_menu_search -> ic_menu_search
    int ic_menu_share -> ic_menu_share
    int ic_menu_today -> ic_menu_today
    int ic_nofity -> ic_nofity
    int icon -> icon
    int list_divider -> list_divider
    int list_focused -> list_focused
    int list_longpressed -> list_longpressed
    int list_pressed_dark -> list_pressed_dark
    int list_pressed_light -> list_pressed_light
    int list_selector_background_transition_dark -> list_selector_background_transition_dark
    int list_selector_background_transition_light -> list_selector_background_transition_light
    int list_selector_dark -> list_selector_dark
    int list_selector_disabled_dark -> list_selector_disabled_dark
    int list_selector_disabled_light -> list_selector_disabled_light
    int list_selector_light -> list_selector_light
    int menu_dropdown_panel_holo_light -> menu_dropdown_panel_holo_light
    int notification_dialog_bg -> notification_dialog_bg
    int notify_bird_left -> notify_bird_left
    int notify_bird_right -> notify_bird_right
    int notify_pole_and_line -> notify_pole_and_line
    int paper_clip_close_normal -> paper_clip_close_normal
    int paper_clip_close_pressed -> paper_clip_close_pressed
    int paper_clip_window -> paper_clip_window
    int paper_clip_window_close -> paper_clip_window_close
    int scrollbar_handle -> scrollbar_handle
    int textfield_activated_light -> textfield_activated_light
    int textfield_default_light -> textfield_default_light
    int textfield_disabled_focused_light -> textfield_disabled_focused_light
    int textfield_disabled_light -> textfield_disabled_light
    int textfield_focused_light -> textfield_focused_light
    int vert_divider -> vert_divider
com.dailystudio.memory.ui.R$id -> com.dailystudio.memory.ui.l:
    int actbar_activity_actionbar -> actbar_activity_actionbar
    int actbar_activity_content -> actbar_activity_content
    int actbar_activity_overflow_menu -> actbar_activity_overflow_menu
    int actbar_custome_view -> actbar_custome_view
    int actbar_overflow -> actbar_overflow
    int actbar_overflow_menu_item -> actbar_overflow_menu_item
    int actbar_overflow_menu_list -> actbar_overflow_menu_list
    int actbar_overflow_menu_root -> actbar_overflow_menu_root
    int actbar_overflow_popup_overlay -> actbar_overflow_popup_overlay
    int actbar_progress -> actbar_progress
    int actbar_prompt -> actbar_prompt
    int actbar_root -> actbar_root
    int actbar_title -> actbar_title
    int ask_board -> ask_board
    int ask_view -> ask_view
    int bold -> bold
    int chartStub -> chartStub
    int core_app_check_explain -> core_app_check_explain
    int core_app_check_google_play_badge -> core_app_check_google_play_badge
    int core_app_check_know_button -> core_app_check_know_button
    int core_app_check_memory_installed -> core_app_check_memory_installed
    int core_app_check_not_show_again_check -> core_app_check_not_show_again_check
    int core_app_check_plugin -> core_app_check_plugin
    int core_app_check_plugin_icon -> core_app_check_plugin_icon
    int core_app_check_plugin_name -> core_app_check_plugin_name
    int core_app_check_step_one -> core_app_check_step_one
    int core_app_check_step_two -> core_app_check_step_two
    int core_app_check_steps -> core_app_check_steps
    int fragment_notification -> fragment_notification
    int fragment_question -> fragment_question
    int fragment_view_root -> fragment_view_root
    int horizontal -> horizontal
    int italic -> italic
    int menu_item_icon -> menu_item_icon
    int menu_item_text -> menu_item_text
    int month_name -> month_name
    int normal -> normal
    int notification_close -> notification_close
    int notification_content -> notification_content
    int notification_title -> notification_title
    int notification_title_separator -> notification_title_separator
    int notify_slot_1 -> notify_slot_1
    int notify_slot_2 -> notify_slot_2
    int notify_slot_3 -> notify_slot_3
    int notify_slot_4 -> notify_slot_4
    int notify_slots_root -> notify_slots_root
    int notify_view -> notify_view
    int paper_clip_close_button -> paper_clip_close_button
    int paper_clip_content -> paper_clip_content
    int paper_clip_icon -> paper_clip_icon
    int paper_clip_title -> paper_clip_title
    int paper_clip_title_separator -> paper_clip_title_separator
    int question_answer_right -> question_answer_right
    int question_answer_wrong -> question_answer_wrong
    int question_answers -> question_answers
    int question_content -> question_content
    int question_title -> question_title
    int question_title_separator -> question_title_separator
    int stats_lifetime_day -> stats_lifetime_day
    int stats_lifetime_day_label -> stats_lifetime_day_label
    int stats_lifetime_hour -> stats_lifetime_hour
    int stats_lifetime_hour_label -> stats_lifetime_hour_label
    int stats_lifetime_min -> stats_lifetime_min
    int stats_lifetime_min_label -> stats_lifetime_min_label
    int stats_lifetime_sec -> stats_lifetime_sec
    int stats_lifetime_sec_label -> stats_lifetime_sec_label
    int vertical -> vertical
    int week_num -> week_num
    int week_range -> week_range
    int weekay_time -> weekay_time
    int weekday_dayname -> weekday_dayname
com.dailystudio.memory.ui.R$layout -> com.dailystudio.memory.ui.m:
    int actbar_activity -> actbar_activity
    int actbar_base -> actbar_base
    int actbar_overflow_menu -> actbar_overflow_menu
    int actbar_overflow_menu_item -> actbar_overflow_menu_item
    int activity_core_app_check -> activity_core_app_check
    int activity_notification -> activity_notification
    int activity_question -> activity_question
    int ask_host_view -> ask_host_view
    int fragment_chart -> fragment_chart
    int fragment_list -> fragment_list
    int fragment_memory_ask -> fragment_memory_ask
    int fragment_memory_notification -> fragment_memory_notification
    int fragment_memory_notify -> fragment_memory_notify
    int fragment_memory_question -> fragment_memory_question
    int layout_duration_count_view -> layout_duration_count_view
    int month_item -> month_item
    int notify_host_view -> notify_host_view
    int paper_clip_window -> paper_clip_window
    int week_item -> week_item
    int weekday_item -> weekday_item
com.dailystudio.memory.ui.R$string -> com.dailystudio.memory.ui.n:
    int activity_ask_question -> activity_ask_question
    int activity_notification -> activity_notification
    int alert_dialog_button_cancel -> alert_dialog_button_cancel
    int alert_dialog_button_confirm -> alert_dialog_button_confirm
    int app_name -> app_name
    int build_device -> build_device
    int build_manufacture -> build_manufacture
    int build_platform -> build_platform
    int chart_lable_date -> chart_lable_date
    int core_app_check_button_know -> core_app_check_button_know
    int core_app_check_confirm_dialog_message -> core_app_check_confirm_dialog_message
    int core_app_check_confirm_dialog_title -> core_app_check_confirm_dialog_title
    int core_app_check_explaination -> core_app_check_explaination
    int core_app_check_installed -> core_app_check_installed
    int core_app_check_not_installed -> core_app_check_not_installed
    int core_app_check_not_show_again -> core_app_check_not_show_again
    int core_app_check_step_one -> core_app_check_step_one
    int core_app_check_step_two -> core_app_check_step_two
    int default_ask_board_text -> default_ask_board_text
    int default_ask_question_title -> default_ask_question_title
    int default_bfw_title -> default_bfw_title
    int default_category_label -> default_category_label
    int default_iv_description -> default_iv_description
    int default_nodata_prompt -> default_nodata_prompt
    int default_notification_title -> default_notification_title
    int default_paper_clip_window_title -> default_paper_clip_window_title
    int default_searchable_matches_templ -> default_searchable_matches_templ
    int error_unknow -> error_unknow
    int month_pattern -> month_pattern
    int time_print_date_format -> time_print_date_format
    int time_print_label_day -> time_print_label_day
    int time_print_label_days -> time_print_label_days
    int time_print_label_hour -> time_print_label_hour
    int time_print_label_min -> time_print_label_min
    int time_print_label_sec -> time_print_label_sec
    int time_print_time_format -> time_print_time_format
com.dailystudio.memory.ui.R$styleable -> com.dailystudio.memory.ui.o:
    int[] CountView -> CountView
    int CountView_count -> CountView_count
    int CountView_minDigits -> CountView_minDigits
    int[] DurationCountView -> DurationCountView
    int DurationCountView_textColor -> DurationCountView_textColor
    int DurationCountView_textSize -> DurationCountView_textSize
    int DurationCountView_textStyle -> DurationCountView_textStyle
    int[] SlidingDrawer -> SlidingDrawer
    int SlidingDrawer_allowSingleTap -> SlidingDrawer_allowSingleTap
    int SlidingDrawer_animateOnClick -> SlidingDrawer_animateOnClick
    int SlidingDrawer_bottomOffset -> SlidingDrawer_bottomOffset
    int SlidingDrawer_content -> SlidingDrawer_content
    int SlidingDrawer_handle -> SlidingDrawer_handle
    int SlidingDrawer_orientation -> SlidingDrawer_orientation
    int SlidingDrawer_topOffset -> SlidingDrawer_topOffset
com.dailystudio.memory.ui.WeekdaysAdatper -> com.dailystudio.memory.ui.p:
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.dailystudio.memory.ui.WeeksAdatper -> com.dailystudio.memory.ui.q:
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.dailystudio.memory.ui.utils.ColorHelper -> com.dailystudio.memory.ui.a.a:
    int getColorResource(android.content.Context,int) -> a
com.dailystudio.memory.ui.utils.DateTimePrintUtils -> com.dailystudio.memory.ui.a.b:
    java.lang.String printTimeString(android.content.Context,long,boolean,boolean) -> a
    java.lang.String printTimeString(android.content.Context,long) -> a
    java.lang.String printTimeStringWithoutTime(android.content.Context,long) -> b
    java.lang.String printTimeStringWithoutDate(android.content.Context,long) -> c
com.dailystudio.memory.ui.utils.ViewHelper -> com.dailystudio.memory.ui.a.c:
    void disableHardwareAccelerated(android.view.View) -> a
    boolean isLargeScreen(android.content.Context) -> a
com.dailystudio.nativelib.application.AppObservable -> com.dailystudio.nativelib.application.AppObservable:
    android.content.BroadcastReceiver mAppReceiver -> b
    void onCreate() -> a
    void onDestroy() -> b
    void onPause() -> d
    void onResume() -> e
com.dailystudio.nativelib.application.AppObservable$AppBroadcastReceiver -> com.dailystudio.nativelib.application.a:
    com.dailystudio.nativelib.application.AppObservable this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.dailystudio.nativelib.observable.ConnectivityObservable -> com.dailystudio.nativelib.observable.ConnectivityObservable:
    android.content.BroadcastReceiver mConnectivityReceiver -> b
    void onCreate() -> a
    void onDestroy() -> b
    void onPause() -> d
    void onResume() -> e
    void addObserver(java.util.Observer) -> addObserver
    void deleteObserver(java.util.Observer) -> deleteObserver
com.dailystudio.nativelib.observable.ConnectivityObservable$ConnectivityReceiver -> com.dailystudio.nativelib.observable.a:
    com.dailystudio.nativelib.observable.ConnectivityObservable this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.dailystudio.nativelib.observable.NativeObservable -> com.dailystudio.nativelib.observable.b:
    android.content.Context mContext -> a
    android.os.Handler mHandler -> b
    void initMembers() -> g
    void addObserver(java.util.Observer) -> addObserver
    void deleteObserver(java.util.Observer) -> deleteObserver
    void deleteObservers() -> deleteObservers
    void notifyObservers() -> notifyObservers
    void notifyObservers(java.lang.Object) -> notifyObservers
    void realNotifyObservers(java.lang.Object) -> a
    java.lang.Class getSingletonKey() -> f
    void onCreate() -> a
    void onDestroy() -> b
    void onPause() -> d
    void onResume() -> e
    java.lang.Object getSingletonKey() -> c
    void access$1(com.dailystudio.nativelib.observable.NativeObservable,java.lang.Object) -> a
com.dailystudio.nativelib.observable.NativeObservable$1 -> com.dailystudio.nativelib.observable.c:
    com.dailystudio.nativelib.observable.NativeObservable this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.dailystudio.nativelib.observable.ObservableFactory -> com.dailystudio.nativelib.observable.d:
    com.dailystudio.nativelib.observable.ObservableFactory getInstance() -> b
    com.dailystudio.nativelib.observable.NativeObservable createObservable(java.lang.Class) -> d
com.dailystudio.nativelib.observable.ObservableManager -> com.dailystudio.nativelib.observable.e:
    com.dailystudio.nativelib.observable.ObservableManager getInstance() -> f
    void addObject(com.dailystudio.nativelib.observable.NativeObservable) -> a
    void removeObject(com.dailystudio.nativelib.observable.NativeObservable) -> b
    com.dailystudio.nativelib.observable.NativeObservable removeObject(java.lang.Class) -> b
    void registerObservable(com.dailystudio.nativelib.observable.NativeObservable) -> c
    com.dailystudio.nativelib.observable.NativeObservable getObservable(java.lang.Class) -> c
    void addObject(com.dailystudio.manager.ISingletonObject) -> a
    com.dailystudio.manager.ISingletonObject removeObject(java.lang.Object) -> a
    void removeObject(com.dailystudio.manager.ISingletonObject) -> b
com.dailystudio.nativelib.observable.ScreenOnOffObservable -> com.dailystudio.nativelib.observable.ScreenOnOffObservable:
    android.content.BroadcastReceiver mScreenOnOffReceiver -> b
    void onCreate() -> a
    void onDestroy() -> b
    void onPause() -> d
    void onResume() -> e
    void addObserver(java.util.Observer) -> addObserver
    void deleteObserver(java.util.Observer) -> deleteObserver
com.dailystudio.nativelib.observable.ScreenOnOffObservable$ScreenOnOffChanged -> com.dailystudio.nativelib.observable.f:
    com.dailystudio.nativelib.observable.ScreenOnOffObservable this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.dailystudio.nativelib.observable.TimeTickObservable -> com.dailystudio.nativelib.observable.TimeTickObservable:
    com.dailystudio.nativelib.observable.TimeTickObservable$TimeTickThread mTickThread -> b
    void onCreate() -> a
    void onDestroy() -> b
    void onPause() -> d
    void onResume() -> e
    void addObserver(java.util.Observer) -> addObserver
    void deleteObserver(java.util.Observer) -> deleteObserver
    void startTimeTickThread() -> g
    void stopTimeTickThread() -> h
com.dailystudio.nativelib.observable.TimeTickObservable$TimeTickThread -> com.dailystudio.nativelib.observable.g:
    boolean mEndFlag -> b
    long mCurrentTime -> c
    long mSleepTime -> d
    com.dailystudio.nativelib.observable.TimeTickObservable this$0 -> a
    void run() -> run
    void cancel() -> a
com.dailystudio.nativelib.observable.WifiObservable -> com.dailystudio.nativelib.observable.WifiObservable:
    android.content.BroadcastReceiver mWifiReceiver -> b
    void onCreate() -> a
    void onDestroy() -> b
    void onPause() -> d
    void onResume() -> e
    void addObserver(java.util.Observer) -> addObserver
    void deleteObserver(java.util.Observer) -> deleteObserver
com.dailystudio.nativelib.observable.WifiObservable$WifiChangedReceiver -> com.dailystudio.nativelib.observable.h:
    com.dailystudio.nativelib.observable.WifiObservable this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.dailystudio.utils.ClassNameUtils -> com.dailystudio.g.a:
    java.lang.String getClassName(java.lang.Class) -> a
    java.lang.String getPackageName(java.lang.Class) -> b
com.google.gson.ExclusionStrategy -> com.a.a.a:
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> a
    boolean shouldSkipClass(java.lang.Class) -> a
com.google.gson.FieldAttributes -> com.a.a.b:
    java.lang.reflect.Field field -> a
com.google.gson.FieldNamingPolicy -> com.a.a.c:
    com.google.gson.FieldNamingPolicy IDENTITY -> a
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE -> b
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES -> c
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES -> d
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DASHES -> e
    com.google.gson.FieldNamingPolicy[] $VALUES -> f
    com.google.gson.FieldNamingPolicy[] values() -> values
    com.google.gson.FieldNamingPolicy valueOf(java.lang.String) -> valueOf
    java.lang.String separateCamelCase(java.lang.String,java.lang.String) -> b
    java.lang.String upperCaseFirstLetter(java.lang.String) -> b
    java.lang.String modifyString(char,java.lang.String,int) -> a
    java.lang.String access$100(java.lang.String) -> a
    java.lang.String access$200(java.lang.String,java.lang.String) -> a
com.google.gson.FieldNamingPolicy$1 -> com.a.a.d:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.FieldNamingPolicy$2 -> com.a.a.e:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.FieldNamingPolicy$3 -> com.a.a.f:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.FieldNamingPolicy$4 -> com.a.a.g:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.FieldNamingPolicy$5 -> com.a.a.h:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.FieldNamingStrategy -> com.a.a.i:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.Gson -> com.a.a.j:
    java.lang.ThreadLocal calls -> c
    java.util.Map typeTokenCache -> d
    java.util.List factories -> e
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> f
    boolean serializeNulls -> g
    boolean htmlSafe -> h
    boolean generateNonExecutableJson -> i
    boolean prettyPrinting -> j
    com.google.gson.JsonDeserializationContext deserializationContext -> a
    com.google.gson.JsonSerializationContext serializationContext -> b
    com.google.gson.TypeAdapter doubleAdapter(boolean) -> a
    com.google.gson.TypeAdapter floatAdapter(boolean) -> b
    void checkValidFloatingPoint(double) -> a
    com.google.gson.TypeAdapter longAdapter(com.google.gson.LongSerializationPolicy) -> a
    com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> a
    com.google.gson.TypeAdapter getAdapter(java.lang.Class) -> a
    java.lang.Object fromJson(java.lang.String,java.lang.Class) -> a
    java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type) -> a
    java.lang.Object fromJson(java.io.Reader,java.lang.reflect.Type) -> a
    void assertFullConsumption(java.lang.Object,com.google.gson.stream.JsonReader) -> a
    java.lang.Object fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type) -> a
    java.lang.String toString() -> toString
    void access$000(com.google.gson.Gson,double) -> a
    java.util.List access$100(com.google.gson.Gson) -> a
com.google.gson.Gson$1 -> com.a.a.k:
    com.google.gson.Gson this$0 -> a
    java.util.Map initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.google.gson.Gson$2 -> com.a.a.l:
    com.google.gson.Gson this$0 -> a
com.google.gson.Gson$3 -> com.a.a.m:
    com.google.gson.Gson this$0 -> a
com.google.gson.Gson$4 -> com.a.a.n:
    com.google.gson.Gson this$0 -> a
    java.lang.Double read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.Gson$5 -> com.a.a.o:
    com.google.gson.Gson this$0 -> a
    java.lang.Float read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.Gson$6 -> com.a.a.p:
    com.google.gson.Gson this$0 -> a
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.Gson$7 -> com.a.a.q:
    com.google.gson.TypeAdapter getNextAdapter(com.google.gson.Gson,com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken) -> a
com.google.gson.Gson$FutureTypeAdapter -> com.a.a.r:
    com.google.gson.TypeAdapter delegate -> a
    void setDelegate(com.google.gson.TypeAdapter) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.InstanceCreator -> com.a.a.s:
    java.lang.Object createInstance(java.lang.reflect.Type) -> a
com.google.gson.JsonArray -> com.a.a.t:
    java.util.List elements -> a
    void add(com.google.gson.JsonElement) -> a
    java.util.Iterator iterator() -> iterator
    java.lang.Number getAsNumber() -> a
    java.lang.String getAsString() -> b
    double getAsDouble() -> c
    long getAsLong() -> d
    int getAsInt() -> e
    boolean getAsBoolean() -> f
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.gson.JsonDeserializationContext -> com.a.a.u:
com.google.gson.JsonElement -> com.a.a.v:
    boolean isJsonArray() -> g
    boolean isJsonObject() -> h
    boolean isJsonPrimitive() -> i
    boolean isJsonNull() -> j
    com.google.gson.JsonObject getAsJsonObject() -> k
    com.google.gson.JsonArray getAsJsonArray() -> l
    com.google.gson.JsonPrimitive getAsJsonPrimitive() -> m
    boolean getAsBoolean() -> f
    java.lang.Boolean getAsBooleanWrapper() -> n
    java.lang.Number getAsNumber() -> a
    java.lang.String getAsString() -> b
    double getAsDouble() -> c
    long getAsLong() -> d
    int getAsInt() -> e
    java.lang.String toString() -> toString
com.google.gson.JsonIOException -> com.a.a.w:
com.google.gson.JsonNull -> com.a.a.x:
    com.google.gson.JsonNull INSTANCE -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.gson.JsonObject -> com.a.a.y:
    java.util.Map members -> a
    void add(java.lang.String,com.google.gson.JsonElement) -> a
    java.util.Set entrySet() -> o
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.gson.JsonParseException -> com.a.a.z:
com.google.gson.JsonPrimitive -> com.a.a.aa:
    java.lang.Class[] PRIMITIVE_TYPES -> a
    java.lang.Object value -> b
    void setValue(java.lang.Object) -> a
    boolean isBoolean() -> o
    java.lang.Boolean getAsBooleanWrapper() -> n
    boolean getAsBoolean() -> f
    boolean isNumber() -> p
    java.lang.Number getAsNumber() -> a
    boolean isString() -> q
    java.lang.String getAsString() -> b
    double getAsDouble() -> c
    long getAsLong() -> d
    int getAsInt() -> e
    boolean isPrimitiveOrString(java.lang.Object) -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean isIntegral(com.google.gson.JsonPrimitive) -> a
com.google.gson.JsonSerializationContext -> com.a.a.ab:
com.google.gson.JsonSyntaxException -> com.a.a.ac:
com.google.gson.LongSerializationPolicy -> com.a.a.ad:
    com.google.gson.LongSerializationPolicy DEFAULT -> a
    com.google.gson.LongSerializationPolicy STRING -> b
    com.google.gson.LongSerializationPolicy[] $VALUES -> c
    com.google.gson.LongSerializationPolicy[] values() -> values
    com.google.gson.LongSerializationPolicy valueOf(java.lang.String) -> valueOf
com.google.gson.LongSerializationPolicy$1 -> com.a.a.ae:
com.google.gson.LongSerializationPolicy$2 -> com.a.a.af:
com.google.gson.TypeAdapter -> com.a.a.ag:
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
com.google.gson.TypeAdapterFactory -> com.a.a.ah:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.annotations.Expose -> com.a.a.a.a:
    boolean serialize() -> a
    boolean deserialize() -> b
com.google.gson.annotations.SerializedName -> com.a.a.a.b:
    java.lang.String value() -> a
com.google.gson.annotations.Since -> com.a.a.a.c:
    double value() -> a
com.google.gson.annotations.Until -> com.a.a.a.d:
    double value() -> a
com.google.gson.internal.$Gson$Preconditions -> com.a.a.b.a:
    java.lang.Object checkNotNull(java.lang.Object) -> a
    void checkArgument(boolean) -> a
com.google.gson.internal.$Gson$Types -> com.a.a.b.b:
    java.lang.reflect.Type[] EMPTY_TYPE_ARRAY -> a
    java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> a
    java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type) -> a
    java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type) -> b
    java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type) -> c
    java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> d
    java.lang.Class getRawType(java.lang.reflect.Type) -> e
    boolean equal(java.lang.Object,java.lang.Object) -> a
    boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> a
    int hashCodeOrZero(java.lang.Object) -> b
    java.lang.String typeToString(java.lang.reflect.Type) -> f
    java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> a
    java.lang.reflect.Type getSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> b
    java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> g
    java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class) -> a
    java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> b
    java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> a
    java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> a
    int indexOf(java.lang.Object[],java.lang.Object) -> a
    java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable) -> a
    void checkNotPrimitive(java.lang.reflect.Type) -> i
    void access$000(java.lang.reflect.Type) -> h
    int access$100(java.lang.Object) -> a
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl -> com.a.a.b.c:
    java.lang.reflect.Type componentType -> a
    java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl -> com.a.a.b.d:
    java.lang.reflect.Type ownerType -> a
    java.lang.reflect.Type rawType -> b
    java.lang.reflect.Type[] typeArguments -> c
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.reflect.Type getRawType() -> getRawType
    java.lang.reflect.Type getOwnerType() -> getOwnerType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$WildcardTypeImpl -> com.a.a.b.e:
    java.lang.reflect.Type upperBound -> a
    java.lang.reflect.Type lowerBound -> b
    java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor -> com.a.a.b.f:
    java.util.Map instanceCreators -> a
    com.google.gson.internal.ObjectConstructor getConstructor(com.google.gson.reflect.TypeToken) -> a
    com.google.gson.internal.ObjectConstructor newDefaultConstructor(java.lang.Class) -> a
    com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.Class) -> b
    com.google.gson.internal.ObjectConstructor newUnsafeAllocator(java.lang.reflect.Type,java.lang.Class) -> a
    java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor$1 -> com.a.a.b.g:
    com.google.gson.InstanceCreator val$creator -> a
    java.lang.reflect.Type val$type -> b
    com.google.gson.internal.ConstructorConstructor this$0 -> c
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$2 -> com.a.a.b.h:
    java.lang.reflect.Constructor val$constructor -> a
    com.google.gson.internal.ConstructorConstructor this$0 -> b
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$3 -> com.a.a.b.i:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$4 -> com.a.a.b.j:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$5 -> com.a.a.b.k:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$6 -> com.a.a.b.l:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$7 -> com.a.a.b.m:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$8 -> com.a.a.b.n:
    com.google.gson.internal.UnsafeAllocator unsafeAllocator -> d
    java.lang.Class val$rawType -> a
    java.lang.reflect.Type val$type -> b
    com.google.gson.internal.ConstructorConstructor this$0 -> c
    java.lang.Object construct() -> a
com.google.gson.internal.Excluder -> com.a.a.b.o:
    com.google.gson.internal.Excluder DEFAULT -> a
    double version -> b
    int modifiers -> c
    boolean serializeInnerClasses -> d
    boolean requireExpose -> e
    java.util.List serializationStrategies -> f
    java.util.List deserializationStrategies -> g
    com.google.gson.internal.Excluder clone() -> a
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    boolean excludeField(java.lang.reflect.Field,boolean) -> a
    boolean excludeClass(java.lang.Class,boolean) -> a
    boolean isAnonymousOrLocal(java.lang.Class) -> a
    boolean isInnerClass(java.lang.Class) -> b
    boolean isStatic(java.lang.Class) -> c
    boolean isValidVersion(com.google.gson.annotations.Since,com.google.gson.annotations.Until) -> a
    boolean isValidSince(com.google.gson.annotations.Since) -> a
    boolean isValidUntil(com.google.gson.annotations.Until) -> a
    java.lang.Object clone() -> clone
com.google.gson.internal.Excluder$1 -> com.a.a.b.p:
    com.google.gson.TypeAdapter delegate -> f
    boolean val$skipDeserialize -> a
    boolean val$skipSerialize -> b
    com.google.gson.Gson val$gson -> c
    com.google.gson.reflect.TypeToken val$type -> d
    com.google.gson.internal.Excluder this$0 -> e
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    com.google.gson.TypeAdapter delegate() -> a
com.google.gson.internal.GsonInternalAccess -> com.a.a.b.q:
    com.google.gson.internal.GsonInternalAccess INSTANCE -> a
    com.google.gson.TypeAdapter getNextAdapter(com.google.gson.Gson,com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.JsonReaderInternalAccess -> com.a.a.b.r:
    com.google.gson.internal.JsonReaderInternalAccess INSTANCE -> a
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> a
com.google.gson.internal.LazilyParsedNumber -> com.a.a.b.s:
    java.lang.String value -> a
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.String toString() -> toString
com.google.gson.internal.ObjectConstructor -> com.a.a.b.t:
    java.lang.Object construct() -> a
com.google.gson.internal.Primitives -> com.a.a.b.u:
    java.util.Map PRIMITIVE_TO_WRAPPER_TYPE -> a
    java.util.Map WRAPPER_TO_PRIMITIVE_TYPE -> b
    void add(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class) -> a
    boolean isPrimitive(java.lang.reflect.Type) -> a
    java.lang.Class wrap(java.lang.Class) -> a
com.google.gson.internal.Streams -> com.a.a.b.v:
    void write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> a
com.google.gson.internal.UnsafeAllocator -> com.a.a.b.w:
    java.lang.Object newInstance(java.lang.Class) -> a
    com.google.gson.internal.UnsafeAllocator create() -> a
com.google.gson.internal.UnsafeAllocator$1 -> com.a.a.b.x:
    java.lang.reflect.Method val$allocateInstance -> a
    java.lang.Object val$unsafe -> b
    java.lang.Object newInstance(java.lang.Class) -> a
com.google.gson.internal.UnsafeAllocator$2 -> com.a.a.b.y:
    java.lang.reflect.Method val$newInstance -> a
    java.lang.Object newInstance(java.lang.Class) -> a
com.google.gson.internal.UnsafeAllocator$3 -> com.a.a.b.z:
    java.lang.reflect.Method val$newInstance -> a
    int val$constructorId -> b
    java.lang.Object newInstance(java.lang.Class) -> a
com.google.gson.internal.UnsafeAllocator$4 -> com.a.a.b.aa:
    java.lang.Object newInstance(java.lang.Class) -> a
com.google.gson.internal.bind.ArrayTypeAdapter -> com.a.a.b.a.a:
    com.google.gson.TypeAdapterFactory FACTORY -> a
    java.lang.Class componentType -> b
    com.google.gson.TypeAdapter componentTypeAdapter -> c
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.ArrayTypeAdapter$1 -> com.a.a.b.a.b:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.BigDecimalTypeAdapter -> com.a.a.b.a.c:
    java.math.BigDecimal read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.math.BigDecimal) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.BigIntegerTypeAdapter -> com.a.a.b.a.d:
    java.math.BigInteger read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.math.BigInteger) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.CollectionTypeAdapterFactory -> com.a.a.b.a.e:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> a
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter -> com.a.a.b.a.f:
    com.google.gson.TypeAdapter elementTypeAdapter -> b
    com.google.gson.internal.ObjectConstructor constructor -> c
    com.google.gson.internal.bind.CollectionTypeAdapterFactory this$0 -> a
    java.util.Collection read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Collection) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.DateTypeAdapter -> com.a.a.b.a.g:
    com.google.gson.TypeAdapterFactory FACTORY -> a
    java.text.DateFormat enUsFormat -> b
    java.text.DateFormat localFormat -> c
    java.text.DateFormat iso8601Format -> d
    java.text.DateFormat buildIso8601Format() -> a
    java.util.Date read(com.google.gson.stream.JsonReader) -> a
    java.util.Date deserializeToDate(java.lang.String) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Date) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.DateTypeAdapter$1 -> com.a.a.b.a.h:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.JsonTreeReader -> com.a.a.b.a.i:
    java.io.Reader UNREADABLE_READER -> a
    java.lang.Object SENTINEL_CLOSED -> b
    java.util.List stack -> c
    void beginArray() -> a
    void endArray() -> b
    void beginObject() -> c
    void endObject() -> d
    boolean hasNext() -> e
    com.google.gson.stream.JsonToken peek() -> f
    java.lang.Object peekStack() -> q
    java.lang.Object popStack() -> r
    void expect(com.google.gson.stream.JsonToken) -> a
    java.lang.String nextName() -> g
    java.lang.String nextString() -> h
    boolean nextBoolean() -> i
    void nextNull() -> j
    double nextDouble() -> k
    long nextLong() -> l
    int nextInt() -> m
    void close() -> close
    void skipValue() -> n
    java.lang.String toString() -> toString
    void promoteNameToValue() -> o
com.google.gson.internal.bind.JsonTreeReader$1 -> com.a.a.b.a.j:
    int read(char[],int,int) -> read
    void close() -> close
com.google.gson.internal.bind.JsonTreeWriter -> com.a.a.b.a.k:
    java.io.Writer UNWRITABLE_WRITER -> a
    com.google.gson.JsonPrimitive SENTINEL_CLOSED -> b
    java.util.List stack -> c
    java.lang.String pendingName -> d
    com.google.gson.JsonElement product -> e
    com.google.gson.JsonElement get() -> a
    com.google.gson.JsonElement peek() -> i
    void put(com.google.gson.JsonElement) -> a
    com.google.gson.stream.JsonWriter beginArray() -> b
    com.google.gson.stream.JsonWriter endArray() -> c
    com.google.gson.stream.JsonWriter beginObject() -> d
    com.google.gson.stream.JsonWriter endObject() -> e
    com.google.gson.stream.JsonWriter name(java.lang.String) -> a
    com.google.gson.stream.JsonWriter value(java.lang.String) -> b
    com.google.gson.stream.JsonWriter nullValue() -> f
    com.google.gson.stream.JsonWriter value(boolean) -> a
    com.google.gson.stream.JsonWriter value(long) -> a
    com.google.gson.stream.JsonWriter value(java.lang.Number) -> a
    void close() -> close
com.google.gson.internal.bind.JsonTreeWriter$1 -> com.a.a.b.a.l:
    void write(char[],int,int) -> write
    void flush() -> flush
    void close() -> close
com.google.gson.internal.bind.MapTypeAdapterFactory -> com.a.a.b.a.m:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> a
    boolean complexMapKeySerialization -> b
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    com.google.gson.TypeAdapter getKeyAdapter(com.google.gson.Gson,java.lang.reflect.Type) -> a
    com.google.gson.JsonElement toJsonTree(com.google.gson.TypeAdapter,java.lang.Object) -> b
    boolean access$000(com.google.gson.internal.bind.MapTypeAdapterFactory) -> a
    com.google.gson.JsonElement access$100(com.google.gson.TypeAdapter,java.lang.Object) -> a
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter -> com.a.a.b.a.n:
    com.google.gson.TypeAdapter keyTypeAdapter -> b
    com.google.gson.TypeAdapter valueTypeAdapter -> c
    com.google.gson.internal.ObjectConstructor constructor -> d
    com.google.gson.internal.bind.MapTypeAdapterFactory this$0 -> a
    java.util.Map read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Map) -> a
    java.lang.String keyToString(com.google.gson.JsonElement) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.ObjectTypeAdapter -> com.a.a.b.a.o:
    com.google.gson.TypeAdapterFactory FACTORY -> a
    com.google.gson.Gson gson -> b
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.ObjectTypeAdapter$1 -> com.a.a.b.a.p:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.ObjectTypeAdapter$2 -> com.a.a.b.a.q:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> a
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory -> com.a.a.b.a.r:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> a
    com.google.gson.FieldNamingStrategy fieldNamingPolicy -> b
    com.google.gson.internal.Excluder excluder -> c
    boolean excludeField(java.lang.reflect.Field,boolean) -> a
    java.lang.String getFieldName(java.lang.reflect.Field) -> a
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean) -> a
    java.util.Map getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class) -> a
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1 -> com.a.a.b.a.s:
    com.google.gson.TypeAdapter typeAdapter -> a
    com.google.gson.Gson val$context -> b
    com.google.gson.reflect.TypeToken val$fieldType -> c
    java.lang.reflect.Field val$field -> d
    boolean val$isPrimitive -> e
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory this$0 -> f
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    void read(com.google.gson.stream.JsonReader,java.lang.Object) -> a
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter -> com.a.a.b.a.t:
    com.google.gson.internal.ObjectConstructor constructor -> b
    java.util.Map boundFields -> c
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory this$0 -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField -> com.a.a.b.a.u:
    java.lang.String name -> g
    boolean serialized -> h
    boolean deserialized -> i
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    void read(com.google.gson.stream.JsonReader,java.lang.Object) -> a
com.google.gson.internal.bind.SqlDateTypeAdapter -> com.a.a.b.a.v:
    com.google.gson.TypeAdapterFactory FACTORY -> a
    java.text.DateFormat format -> b
    java.sql.Date read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.sql.Date) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.SqlDateTypeAdapter$1 -> com.a.a.b.a.w:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.TimeTypeAdapter -> com.a.a.b.a.x:
    com.google.gson.TypeAdapterFactory FACTORY -> a
    java.text.DateFormat format -> b
    java.sql.Time read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.sql.Time) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TimeTypeAdapter$1 -> com.a.a.b.a.y:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper -> com.a.a.b.a.z:
    com.google.gson.Gson context -> a
    com.google.gson.TypeAdapter delegate -> b
    java.lang.reflect.Type type -> c
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters -> com.a.a.b.a.aa:
    com.google.gson.TypeAdapter CLASS -> a
    com.google.gson.TypeAdapterFactory CLASS_FACTORY -> b
    com.google.gson.TypeAdapter BIT_SET -> c
    com.google.gson.TypeAdapterFactory BIT_SET_FACTORY -> d
    com.google.gson.TypeAdapter BOOLEAN -> e
    com.google.gson.TypeAdapter BOOLEAN_AS_STRING -> f
    com.google.gson.TypeAdapterFactory BOOLEAN_FACTORY -> g
    com.google.gson.TypeAdapter BYTE -> h
    com.google.gson.TypeAdapterFactory BYTE_FACTORY -> i
    com.google.gson.TypeAdapter SHORT -> j
    com.google.gson.TypeAdapterFactory SHORT_FACTORY -> k
    com.google.gson.TypeAdapter INTEGER -> l
    com.google.gson.TypeAdapterFactory INTEGER_FACTORY -> m
    com.google.gson.TypeAdapter LONG -> n
    com.google.gson.TypeAdapter FLOAT -> o
    com.google.gson.TypeAdapter DOUBLE -> p
    com.google.gson.TypeAdapter NUMBER -> q
    com.google.gson.TypeAdapterFactory NUMBER_FACTORY -> r
    com.google.gson.TypeAdapter CHARACTER -> s
    com.google.gson.TypeAdapterFactory CHARACTER_FACTORY -> t
    com.google.gson.TypeAdapter STRING -> u
    com.google.gson.TypeAdapterFactory STRING_FACTORY -> v
    com.google.gson.TypeAdapter STRING_BUILDER -> w
    com.google.gson.TypeAdapterFactory STRING_BUILDER_FACTORY -> x
    com.google.gson.TypeAdapter STRING_BUFFER -> y
    com.google.gson.TypeAdapterFactory STRING_BUFFER_FACTORY -> z
    com.google.gson.TypeAdapter URL -> A
    com.google.gson.TypeAdapterFactory URL_FACTORY -> B
    com.google.gson.TypeAdapter URI -> C
    com.google.gson.TypeAdapterFactory URI_FACTORY -> D
    com.google.gson.TypeAdapter INET_ADDRESS -> E
    com.google.gson.TypeAdapterFactory INET_ADDRESS_FACTORY -> F
    com.google.gson.TypeAdapter UUID -> G
    com.google.gson.TypeAdapterFactory UUID_FACTORY -> H
    com.google.gson.TypeAdapterFactory TIMESTAMP_FACTORY -> I
    com.google.gson.TypeAdapter CALENDAR -> J
    com.google.gson.TypeAdapterFactory CALENDAR_FACTORY -> K
    com.google.gson.TypeAdapter LOCALE -> L
    com.google.gson.TypeAdapterFactory LOCALE_FACTORY -> M
    com.google.gson.TypeAdapter JSON_ELEMENT -> N
    com.google.gson.TypeAdapterFactory JSON_ELEMENT_FACTORY -> O
    com.google.gson.TypeAdapterFactory ENUM_FACTORY -> P
    com.google.gson.TypeAdapterFactory newEnumTypeHierarchyFactory() -> a
    com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,com.google.gson.TypeAdapter) -> a
    com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> a
    com.google.gson.TypeAdapterFactory newFactoryForMultipleTypes(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> b
    com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter) -> b
com.google.gson.internal.bind.TypeAdapters$1 -> com.a.a.b.a.ab:
    void write(com.google.gson.stream.JsonWriter,java.lang.Class) -> a
    java.lang.Class read(com.google.gson.stream.JsonReader) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$10 -> com.a.a.b.a.ac:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$11 -> com.a.a.b.a.ad:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$12 -> com.a.a.b.a.ae:
    java.lang.Character read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Character) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$13 -> com.a.a.b.a.af:
    java.lang.String read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.String) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$14 -> com.a.a.b.a.ag:
    java.lang.StringBuilder read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.StringBuilder) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$15 -> com.a.a.b.a.ah:
    java.lang.StringBuffer read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.StringBuffer) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$16 -> com.a.a.b.a.ai:
    java.net.URL read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.net.URL) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$17 -> com.a.a.b.a.aj:
    java.net.URI read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.net.URI) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$18 -> com.a.a.b.a.ak:
    java.net.InetAddress read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.net.InetAddress) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$19 -> com.a.a.b.a.al:
    java.util.UUID read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.UUID) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$2 -> com.a.a.b.a.am:
    java.util.BitSet read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.BitSet) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$20 -> com.a.a.b.a.an:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.TypeAdapters$20$1 -> com.a.a.b.a.ao:
    com.google.gson.TypeAdapter val$dateTypeAdapter -> a
    com.google.gson.internal.bind.TypeAdapters$20 this$0 -> b
    java.sql.Timestamp read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.sql.Timestamp) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$21 -> com.a.a.b.a.ap:
    java.util.Calendar read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Calendar) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$22 -> com.a.a.b.a.aq:
    java.util.Locale read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Locale) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$23 -> com.a.a.b.a.ar:
    com.google.gson.JsonElement read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$24 -> com.a.a.b.a.as:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.TypeAdapters$26 -> com.a.a.b.a.at:
    java.lang.Class val$type -> a
    com.google.gson.TypeAdapter val$typeAdapter -> b
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$27 -> com.a.a.b.a.au:
    java.lang.Class val$unboxed -> a
    java.lang.Class val$boxed -> b
    com.google.gson.TypeAdapter val$typeAdapter -> c
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$28 -> com.a.a.b.a.av:
    java.lang.Class val$base -> a
    java.lang.Class val$sub -> b
    com.google.gson.TypeAdapter val$typeAdapter -> c
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$29 -> com.a.a.b.a.aw:
    java.lang.Class val$clazz -> a
    com.google.gson.TypeAdapter val$typeAdapter -> b
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$3 -> com.a.a.b.a.ax:
    java.lang.Boolean read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$30 -> com.a.a.b.a.ay:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> a
com.google.gson.internal.bind.TypeAdapters$4 -> com.a.a.b.a.az:
    java.lang.Boolean read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$5 -> com.a.a.b.a.ba:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$6 -> com.a.a.b.a.bb:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$7 -> com.a.a.b.a.bc:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$8 -> com.a.a.b.a.bd:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$9 -> com.a.a.b.a.be:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter -> com.a.a.b.a.bf:
    java.util.Map nameToConstant -> a
    java.util.Map constantToName -> b
    java.lang.Enum read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Enum) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.reflect.TypeToken -> com.a.a.c.a:
    java.lang.Class rawType -> a
    java.lang.reflect.Type type -> b
    int hashCode -> c
    java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> a
    java.lang.Class getRawType() -> a
    java.lang.reflect.Type getType() -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    com.google.gson.reflect.TypeToken get(java.lang.reflect.Type) -> a
    com.google.gson.reflect.TypeToken get(java.lang.Class) -> b
com.google.gson.stream.JsonReader -> com.a.a.d.a:
    char[] NON_EXECUTE_PREFIX -> a
    com.google.gson.stream.StringPool stringPool -> b
    java.io.Reader in -> c
    boolean lenient -> d
    char[] buffer -> e
    int pos -> f
    int limit -> g
    int bufferStartLine -> h
    int bufferStartColumn -> i
    com.google.gson.stream.JsonScope[] stack -> j
    int stackSize -> k
    com.google.gson.stream.JsonToken token -> l
    java.lang.String name -> m
    java.lang.String value -> n
    int valuePos -> o
    int valueLength -> p
    boolean skipping -> q
    void setLenient(boolean) -> a
    boolean isLenient() -> p
    void beginArray() -> a
    void endArray() -> b
    void beginObject() -> c
    void endObject() -> d
    void expect(com.google.gson.stream.JsonToken) -> a
    boolean hasNext() -> e
    com.google.gson.stream.JsonToken peek() -> f
    void consumeNonExecutePrefix() -> o
    com.google.gson.stream.JsonToken advance() -> q
    java.lang.String nextName() -> g
    java.lang.String nextString() -> h
    boolean nextBoolean() -> i
    void nextNull() -> j
    double nextDouble() -> k
    long nextLong() -> l
    int nextInt() -> m
    void close() -> close
    void skipValue() -> n
    void push(com.google.gson.stream.JsonScope) -> a
    com.google.gson.stream.JsonToken nextInArray(boolean) -> b
    com.google.gson.stream.JsonToken nextInObject(boolean) -> c
    com.google.gson.stream.JsonToken objectValue() -> r
    com.google.gson.stream.JsonToken nextValue() -> s
    boolean fillBuffer(int) -> a
    int getLineNumber() -> t
    int getColumnNumber() -> u
    int nextNonWhitespace(boolean) -> d
    void checkLenient() -> v
    void skipToEndOfLine() -> w
    boolean skipTo(java.lang.String) -> a
    java.lang.String nextString(char) -> a
    java.lang.String nextLiteral(boolean) -> e
    java.lang.String toString() -> toString
    char readEscapeCharacter() -> x
    com.google.gson.stream.JsonToken readLiteral() -> y
    com.google.gson.stream.JsonToken decodeLiteral() -> z
    com.google.gson.stream.JsonToken decodeNumber(char[],int,int) -> a
    java.io.IOException syntaxError(java.lang.String) -> b
    java.lang.CharSequence getSnippet() -> A
    com.google.gson.stream.JsonToken access$000(com.google.gson.stream.JsonReader) -> a
    int access$100(com.google.gson.stream.JsonReader) -> b
    int access$200(com.google.gson.stream.JsonReader) -> c
    java.lang.String access$302(com.google.gson.stream.JsonReader,java.lang.String) -> a
    java.lang.String access$400(com.google.gson.stream.JsonReader) -> d
    java.lang.String access$402(com.google.gson.stream.JsonReader,java.lang.String) -> b
    com.google.gson.stream.JsonToken access$002(com.google.gson.stream.JsonReader,com.google.gson.stream.JsonToken) -> a
com.google.gson.stream.JsonReader$1 -> com.a.a.d.b:
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> a
com.google.gson.stream.JsonReader$2 -> com.a.a.d.c:
    int[] $SwitchMap$com$google$gson$stream$JsonScope -> a
com.google.gson.stream.JsonScope -> com.a.a.d.d:
    com.google.gson.stream.JsonScope EMPTY_ARRAY -> a
    com.google.gson.stream.JsonScope NONEMPTY_ARRAY -> b
    com.google.gson.stream.JsonScope EMPTY_OBJECT -> c
    com.google.gson.stream.JsonScope DANGLING_NAME -> d
    com.google.gson.stream.JsonScope NONEMPTY_OBJECT -> e
    com.google.gson.stream.JsonScope EMPTY_DOCUMENT -> f
    com.google.gson.stream.JsonScope NONEMPTY_DOCUMENT -> g
    com.google.gson.stream.JsonScope CLOSED -> h
    com.google.gson.stream.JsonScope[] $VALUES -> i
    com.google.gson.stream.JsonScope[] values() -> values
    com.google.gson.stream.JsonScope valueOf(java.lang.String) -> valueOf
com.google.gson.stream.JsonToken -> com.a.a.d.e:
    com.google.gson.stream.JsonToken BEGIN_ARRAY -> a
    com.google.gson.stream.JsonToken END_ARRAY -> b
    com.google.gson.stream.JsonToken BEGIN_OBJECT -> c
    com.google.gson.stream.JsonToken END_OBJECT -> d
    com.google.gson.stream.JsonToken NAME -> e
    com.google.gson.stream.JsonToken STRING -> f
    com.google.gson.stream.JsonToken NUMBER -> g
    com.google.gson.stream.JsonToken BOOLEAN -> h
    com.google.gson.stream.JsonToken NULL -> i
    com.google.gson.stream.JsonToken END_DOCUMENT -> j
    com.google.gson.stream.JsonToken[] $VALUES -> k
    com.google.gson.stream.JsonToken[] values() -> values
    com.google.gson.stream.JsonToken valueOf(java.lang.String) -> valueOf
com.google.gson.stream.JsonWriter -> com.a.a.d.f:
    java.io.Writer out -> a
    java.util.List stack -> b
    java.lang.String indent -> c
    java.lang.String separator -> d
    boolean lenient -> e
    boolean htmlSafe -> f
    java.lang.String deferredName -> g
    boolean serializeNulls -> h
    void setLenient(boolean) -> b
    boolean isLenient() -> g
    boolean getSerializeNulls() -> h
    com.google.gson.stream.JsonWriter beginArray() -> b
    com.google.gson.stream.JsonWriter endArray() -> c
    com.google.gson.stream.JsonWriter beginObject() -> d
    com.google.gson.stream.JsonWriter endObject() -> e
    com.google.gson.stream.JsonWriter open(com.google.gson.stream.JsonScope,java.lang.String) -> a
    com.google.gson.stream.JsonWriter close(com.google.gson.stream.JsonScope,com.google.gson.stream.JsonScope,java.lang.String) -> a
    com.google.gson.stream.JsonScope peek() -> a
    void replaceTop(com.google.gson.stream.JsonScope) -> a
    com.google.gson.stream.JsonWriter name(java.lang.String) -> a
    void writeDeferredName() -> i
    com.google.gson.stream.JsonWriter value(java.lang.String) -> b
    com.google.gson.stream.JsonWriter nullValue() -> f
    com.google.gson.stream.JsonWriter value(boolean) -> a
    com.google.gson.stream.JsonWriter value(long) -> a
    com.google.gson.stream.JsonWriter value(java.lang.Number) -> a
    void close() -> close
    void string(java.lang.String) -> c
    void newline() -> j
    void beforeName() -> k
    void beforeValue(boolean) -> c
com.google.gson.stream.JsonWriter$1 -> com.a.a.d.g:
    int[] $SwitchMap$com$google$gson$stream$JsonScope -> a
com.google.gson.stream.MalformedJsonException -> com.a.a.d.h:
com.google.gson.stream.StringPool -> com.a.a.d.i:
    java.lang.String[] pool -> a
    java.lang.String get(char[],int,int) -> a
org.achartengine.ChartFactory -> a.a.a:
    org.achartengine.GraphicalView getLineChartView(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer) -> a
    org.achartengine.GraphicalView getTimeChartView(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,java.lang.String) -> a
    void checkParameters(org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer) -> a
org.achartengine.GraphicalView -> a.a.b:
    org.achartengine.chart.AbstractChart mChart -> a
    org.achartengine.renderer.DefaultRenderer mRenderer -> b
    android.graphics.Rect mRect -> c
    android.os.Handler mHandler -> d
    android.graphics.RectF mZoomR -> e
    android.graphics.Bitmap zoomInImage -> f
    android.graphics.Bitmap zoomOutImage -> g
    android.graphics.Bitmap fitZoomImage -> h
    int zoomSize -> i
    int ZOOM_BUTTONS_COLOR -> j
    org.achartengine.tools.Zoom mZoomIn -> k
    org.achartengine.tools.Zoom mZoomOut -> l
    org.achartengine.tools.FitZoom mFitZoom -> m
    android.graphics.Paint mPaint -> n
    org.achartengine.ITouchHandler mTouchHandler -> o
    float oldX -> p
    float oldY -> q
    org.achartengine.model.SeriesSelection getCurrentSeriesAndPoint() -> getCurrentSeriesAndPoint
    void onDraw(android.graphics.Canvas) -> onDraw
    void setZoomRate(float) -> setZoomRate
    void zoomIn() -> a
    void zoomOut() -> b
    void zoomReset() -> c
    android.graphics.RectF getZoomRectangle() -> getZoomRectangle
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void repaint() -> d
org.achartengine.GraphicalView$1 -> a.a.c:
    org.achartengine.GraphicalView this$0 -> a
    void run() -> run
org.achartengine.ITouchHandler -> a.a.d:
    boolean handleTouch(android.view.MotionEvent) -> a
org.achartengine.TouchHandler -> a.a.e:
    org.achartengine.renderer.DefaultRenderer mRenderer -> a
    float oldX -> b
    float oldY -> c
    float oldX2 -> d
    float oldY2 -> e
    android.graphics.RectF zoomR -> f
    org.achartengine.tools.Pan mPan -> g
    org.achartengine.tools.Zoom mPinchZoom -> h
    org.achartengine.GraphicalView graphicalView -> i
    boolean handleTouch(android.view.MotionEvent) -> a
org.achartengine.TouchHandlerOld -> a.a.f:
    org.achartengine.renderer.DefaultRenderer mRenderer -> a
    float oldX -> b
    float oldY -> c
    android.graphics.RectF zoomR -> d
    org.achartengine.tools.Pan mPan -> e
    org.achartengine.GraphicalView graphicalView -> f
    boolean handleTouch(android.view.MotionEvent) -> a
org.achartengine.chart.AbstractChart -> a.a.a.a:
    void draw(android.graphics.Canvas,int,int,int,int,android.graphics.Paint) -> a
    void drawBackground(org.achartengine.renderer.DefaultRenderer,android.graphics.Canvas,int,int,int,int,android.graphics.Paint,boolean,int) -> a
    int drawLegend(android.graphics.Canvas,org.achartengine.renderer.DefaultRenderer,java.lang.String[],int,int,int,int,int,int,android.graphics.Paint,boolean) -> a
    void drawString(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint) -> a
    boolean getExceed(float,org.achartengine.renderer.DefaultRenderer,int,int) -> a
    boolean isVertical(org.achartengine.renderer.DefaultRenderer) -> a
    float[] calculateDrawPoints(float,float,float,float,int,int) -> a
    void drawPath(android.graphics.Canvas,float[],android.graphics.Paint,boolean) -> a
    int getLegendShapeWidth(int) -> a
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> a
    int getLegendSize(org.achartengine.renderer.DefaultRenderer,int,float) -> a
    boolean isNullValue(double) -> a
    org.achartengine.model.SeriesSelection getSeriesAndPointForScreenCoordinate(org.achartengine.model.Point) -> a
org.achartengine.chart.ClickableArea -> a.a.a.b:
    android.graphics.RectF rect -> a
    double x -> b
    double y -> c
    android.graphics.RectF getRect() -> a
    double getX() -> b
    double getY() -> c
org.achartengine.chart.LineChart -> a.a.a.c:
    org.achartengine.chart.ScatterChart pointsChart -> c
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,float[],org.achartengine.renderer.SimpleSeriesRenderer,float,int,int) -> a
    org.achartengine.chart.ClickableArea[] clickableAreasForPoints(float[],double[],float,int,int) -> a
    int getLegendShapeWidth(int) -> a
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> a
    boolean isRenderPoints(org.achartengine.renderer.SimpleSeriesRenderer) -> a
    org.achartengine.chart.ScatterChart getPointsChart() -> a
org.achartengine.chart.PointStyle -> a.a.a.d:
    org.achartengine.chart.PointStyle X -> a
    org.achartengine.chart.PointStyle CIRCLE -> b
    org.achartengine.chart.PointStyle TRIANGLE -> c
    org.achartengine.chart.PointStyle SQUARE -> d
    org.achartengine.chart.PointStyle DIAMOND -> e
    org.achartengine.chart.PointStyle POINT -> f
    java.lang.String mName -> g
    org.achartengine.chart.PointStyle[] $VALUES -> h
    org.achartengine.chart.PointStyle[] values() -> values
    org.achartengine.chart.PointStyle valueOf(java.lang.String) -> valueOf
    java.lang.String getName() -> a
    java.lang.String toString() -> toString
org.achartengine.chart.RoundChart -> a.a.a.e:
    org.achartengine.renderer.DefaultRenderer mRenderer -> a
    int mCenterX -> b
    int mCenterY -> c
    int getLegendShapeWidth(int) -> a
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> a
    org.achartengine.renderer.DefaultRenderer getRenderer() -> a
    int getCenterX() -> b
    int getCenterY() -> c
    void setCenterX(int) -> b
    void setCenterY(int) -> c
org.achartengine.chart.ScatterChart -> a.a.a.f:
    float size -> c
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,float[],org.achartengine.renderer.SimpleSeriesRenderer,float,int,int) -> a
    org.achartengine.chart.ClickableArea[] clickableAreasForPoints(float[],double[],float,int,int) -> a
    int getLegendShapeWidth(int) -> a
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> a
    void drawX(android.graphics.Canvas,android.graphics.Paint,float,float) -> a
    void drawCircle(android.graphics.Canvas,android.graphics.Paint,float,float) -> b
    void drawTriangle(android.graphics.Canvas,android.graphics.Paint,float[],float,float) -> a
    void drawSquare(android.graphics.Canvas,android.graphics.Paint,float,float) -> c
    void drawDiamond(android.graphics.Canvas,android.graphics.Paint,float[],float,float) -> b
org.achartengine.chart.ScatterChart$1 -> a.a.a.g:
    int[] $SwitchMap$org$achartengine$chart$PointStyle -> a
org.achartengine.chart.TimeChart -> a.a.a.h:
    java.lang.String mDateFormat -> c
    boolean mXAxisSmart -> d
    java.lang.Double mStartPoint -> e
    void setDateFormat(java.lang.String) -> a
    void drawXLabels(java.util.List,java.lang.Double[],android.graphics.Canvas,android.graphics.Paint,int,int,int,double,double,double) -> a
    java.text.DateFormat getDateFormat(double,double) -> a
    java.util.List getXLabels(double,double,int) -> a
org.achartengine.chart.XYChart -> a.a.a.i:
    org.achartengine.model.XYMultipleSeriesDataset mDataset -> a
    org.achartengine.renderer.XYMultipleSeriesRenderer mRenderer -> b
    float mScale -> c
    float mTranslate -> d
    org.achartengine.model.Point mCenter -> e
    android.graphics.Rect mScreenR -> f
    java.util.Map mCalcRange -> g
    java.util.Map clickableAreas -> h
    void draw(android.graphics.Canvas,int,int,int,int,android.graphics.Paint) -> a
    java.util.List getXLabels(double,double,int) -> a
    java.util.Map getYLabels(double[],double[],int) -> a
    java.util.List getValidLabels(java.util.List) -> a
    void drawSeries(org.achartengine.model.XYSeries,android.graphics.Canvas,android.graphics.Paint,java.util.List,org.achartengine.renderer.SimpleSeriesRenderer,float,int,org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation,int) -> a
    void setStroke(android.graphics.Paint$Cap,android.graphics.Paint$Join,float,android.graphics.Paint$Style,android.graphics.PathEffect,android.graphics.Paint) -> a
    void drawChartValuesText(android.graphics.Canvas,org.achartengine.model.XYSeries,org.achartengine.renderer.SimpleSeriesRenderer,android.graphics.Paint,float[],int,int) -> a
    void drawText(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,float) -> a
    void transform(android.graphics.Canvas,float,boolean) -> a
    java.lang.String getLabel(double) -> b
    void drawXLabels(java.util.List,java.lang.Double[],android.graphics.Canvas,android.graphics.Paint,int,int,int,double,double,double) -> a
    void drawYLabels(java.util.Map,android.graphics.Canvas,android.graphics.Paint,int,int,int,int,double[],double[]) -> a
    void drawXTextLabels(java.lang.Double[],android.graphics.Canvas,android.graphics.Paint,boolean,int,int,int,double,double,double) -> a
    org.achartengine.renderer.XYMultipleSeriesRenderer getRenderer() -> b
    org.achartengine.model.XYMultipleSeriesDataset getDataset() -> c
    double[] getCalcRange(int) -> b
    int getLabelLinePos(android.graphics.Paint$Align) -> a
    double[] toRealPoint(float,float,int) -> a
    org.achartengine.model.SeriesSelection getSeriesAndPointForScreenCoordinate(org.achartengine.model.Point) -> a
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,float[],org.achartengine.renderer.SimpleSeriesRenderer,float,int,int) -> a
    org.achartengine.chart.ClickableArea[] clickableAreasForPoints(float[],double[],float,int,int) -> a
    boolean isRenderNullValues() -> d
    boolean isRenderPoints(org.achartengine.renderer.SimpleSeriesRenderer) -> a
    org.achartengine.chart.ScatterChart getPointsChart() -> a
org.achartengine.model.Point -> a.a.b.a:
    float mX -> a
    float mY -> b
    float getX() -> a
    float getY() -> b
org.achartengine.model.SeriesSelection -> a.a.b.b:
    int mSeriesIndex -> a
    int mPointIndex -> b
    double mXValue -> c
    double mValue -> d
org.achartengine.model.TimeSeries -> a.a.b.c:
    void add(java.util.Date,double) -> a
org.achartengine.model.XYMultipleSeriesDataset -> a.a.b.d:
    java.util.List mSeries -> a
    void addSeries(org.achartengine.model.XYSeries) -> a
    org.achartengine.model.XYSeries getSeriesAt(int) -> a
    int getSeriesCount() -> a
    org.achartengine.model.XYSeries[] getSeries() -> b
org.achartengine.model.XYSeries -> a.a.b.e:
    java.lang.String mTitle -> a
    org.achartengine.util.IndexXYMap mXY -> b
    double mMinX -> c
    double mMaxX -> d
    double mMinY -> e
    double mMaxY -> f
    int mScaleNumber -> g
    int getScaleNumber() -> a
    void initRange() -> h
    void updateRange(double,double) -> b
    java.lang.String getTitle() -> b
    void add(double,double) -> a
    double getX(int) -> a
    double getY(int) -> b
    java.util.SortedMap getRange(double,double,int) -> a
    int getIndexForKey(double) -> a
    int getItemCount() -> c
    double getMinX() -> d
    double getMinY() -> e
    double getMaxX() -> f
    double getMaxY() -> g
org.achartengine.renderer.BasicStroke -> a.a.c.a:
    org.achartengine.renderer.BasicStroke SOLID -> a
    org.achartengine.renderer.BasicStroke DASHED -> b
    org.achartengine.renderer.BasicStroke DOTTED -> c
    android.graphics.Paint$Cap mCap -> d
    android.graphics.Paint$Join mJoin -> e
    float mMiter -> f
    float[] mIntervals -> g
    float mPhase -> h
    android.graphics.Paint$Cap getCap() -> a
    android.graphics.Paint$Join getJoin() -> b
    float getMiter() -> c
    float[] getIntervals() -> d
    float getPhase() -> e
org.achartengine.renderer.DefaultRenderer -> a.a.c.b:
    java.lang.String mChartTitle -> a
    float mChartTitleTextSize -> b
    android.graphics.Typeface REGULAR_TEXT_FONT -> c
    java.lang.String mTextTypefaceName -> d
    int mTextTypefaceStyle -> e
    int mBackgroundColor -> f
    boolean mApplyBackgroundColor -> g
    boolean mShowAxes -> h
    int mAxesColor -> i
    boolean mShowLabels -> j
    int mLabelsColor -> k
    float mLabelsTextSize -> l
    boolean mShowLegend -> m
    float mLegendTextSize -> n
    boolean mFitLegend -> o
    boolean mShowGridX -> p
    boolean mShowGridY -> q
    boolean mShowCustomTextGrid -> r
    java.util.List mRenderers -> s
    boolean mAntialiasing -> t
    int mLegendHeight -> u
    int[] mMargins -> v
    float mScale -> w
    boolean mPanEnabled -> x
    boolean mZoomEnabled -> y
    boolean mZoomButtonsVisible -> z
    float mZoomRate -> A
    boolean mExternalZoomEnabled -> B
    float mOriginalScale -> C
    boolean mClickEnabled -> D
    int selectableBuffer -> E
    boolean mInScroll -> F
    float mStartAngle -> G
    java.lang.String getChartTitle() -> a
    void setChartTitle(java.lang.String) -> a
    float getChartTitleTextSize() -> b
    void setChartTitleTextSize(float) -> a
    void addSeriesRenderer(org.achartengine.renderer.SimpleSeriesRenderer) -> a
    org.achartengine.renderer.SimpleSeriesRenderer getSeriesRendererAt(int) -> a
    int getSeriesRendererCount() -> c
    int getBackgroundColor() -> d
    boolean isApplyBackgroundColor() -> e
    int getAxesColor() -> f
    void setAxesColor(int) -> b
    int getLabelsColor() -> g
    void setLabelsColor(int) -> c
    float getLabelsTextSize() -> h
    void setLabelsTextSize(float) -> b
    boolean isShowAxes() -> i
    boolean isShowLabels() -> j
    boolean isShowGridX() -> k
    boolean isShowGridY() -> l
    void setShowGridX(boolean) -> a
    void setShowGridY(boolean) -> b
    void setShowGrid(boolean) -> c
    boolean isShowCustomTextGrid() -> m
    boolean isShowLegend() -> n
    void setShowLegend(boolean) -> d
    boolean isFitLegend() -> o
    void setFitLegend(boolean) -> e
    java.lang.String getTextTypefaceName() -> p
    int getTextTypefaceStyle() -> q
    float getLegendTextSize() -> r
    void setLegendTextSize(float) -> c
    boolean isAntialiasing() -> s
    void setAntialiasing(boolean) -> f
    float getScale() -> t
    float getOriginalScale() -> u
    void setScale(float) -> d
    boolean isZoomEnabled() -> v
    boolean isZoomButtonsVisible() -> w
    boolean isExternalZoomEnabled() -> x
    float getZoomRate() -> y
    boolean isPanEnabled() -> z
    boolean isClickEnabled() -> A
    int getSelectableBuffer() -> B
    int getLegendHeight() -> C
    void setLegendHeight(int) -> d
    int[] getMargins() -> D
    void setMargins(int[]) -> a
    boolean isInScroll() -> E
org.achartengine.renderer.SimpleSeriesRenderer -> a.a.c.c:
    int mColor -> a
    boolean mDisplayChartValues -> b
    float mChartValuesTextSize -> c
    android.graphics.Paint$Align mChartValuesTextAlign -> d
    float mChartValuesSpacing -> e
    org.achartengine.renderer.BasicStroke mStroke -> f
    boolean mGradientEnabled -> g
    int getColor() -> a
    void setColor(int) -> a
    boolean isDisplayChartValues() -> b
    float getChartValuesTextSize() -> c
    android.graphics.Paint$Align getChartValuesTextAlign() -> d
    float getChartValuesSpacing() -> e
    org.achartengine.renderer.BasicStroke getStroke() -> f
    void setStroke(org.achartengine.renderer.BasicStroke) -> a
org.achartengine.renderer.XYMultipleSeriesRenderer -> a.a.c.d:
    java.lang.String mXTitle -> a
    java.lang.String[] mYTitle -> b
    float mAxisTitleTextSize -> c
    double[] mMinX -> d
    double[] mMaxX -> e
    double[] mMinY -> f
    double[] mMaxY -> g
    int mXLabels -> h
    int mYLabels -> i
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation mOrientation -> j
    java.util.Map mXTextLabels -> k
    java.util.Map mYTextLabels -> l
    boolean mPanXEnabled -> m
    boolean mPanYEnabled -> n
    boolean mZoomXEnabled -> o
    boolean mZoomYEnabled -> p
    double mBarSpacing -> q
    int mMarginsColor -> r
    double[] mPanLimits -> s
    double[] mZoomLimits -> t
    float mXLabelsAngle -> u
    float mYLabelsAngle -> v
    java.util.Map initialRange -> w
    float mPointSize -> x
    int mGridColor -> y
    int scalesCount -> z
    android.graphics.Paint$Align xLabelsAlign -> A
    android.graphics.Paint$Align[] yLabelsAlign -> B
    android.graphics.Paint$Align[] yAxisAlign -> C
    int mXLabelsColor -> D
    int[] mYLabelsColor -> E
    void initAxesRange(int) -> e
    void initAxesRangeForScale(int) -> f
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation getOrientation() -> F
    java.lang.String getXTitle() -> G
    void setXTitle(java.lang.String) -> b
    java.lang.String getYTitle() -> H
    java.lang.String getYTitle(int) -> g
    void setYTitle(java.lang.String) -> c
    void setYTitle(java.lang.String,int) -> a
    float getAxisTitleTextSize() -> I
    void setAxisTitleTextSize(float) -> e
    void setXAxisMin(double) -> a
    void setXAxisMax(double) -> b
    void setYAxisMin(double) -> c
    void setYAxisMax(double) -> d
    double getXAxisMin(int) -> h
    void setXAxisMin(double,int) -> a
    boolean isMinXSet(int) -> i
    double getXAxisMax(int) -> j
    void setXAxisMax(double,int) -> b
    boolean isMaxXSet(int) -> k
    double getYAxisMin(int) -> l
    void setYAxisMin(double,int) -> c
    boolean isMinYSet(int) -> m
    double getYAxisMax(int) -> n
    void setYAxisMax(double,int) -> d
    boolean isMaxYSet(int) -> o
    int getXLabels() -> J
    void setXLabels(int) -> p
    java.lang.String getXTextLabel(java.lang.Double) -> a
    java.lang.Double[] getXTextLabelLocations() -> K
    java.lang.String getYTextLabel(java.lang.Double,int) -> a
    java.lang.Double[] getYTextLabelLocations(int) -> q
    int getYLabels() -> L
    void setYLabels(int) -> r
    boolean isPanEnabled() -> z
    boolean isPanXEnabled() -> M
    boolean isPanYEnabled() -> N
    void setPanEnabled(boolean,boolean) -> a
    boolean isZoomEnabled() -> v
    boolean isZoomXEnabled() -> O
    boolean isZoomYEnabled() -> P
    int getMarginsColor() -> Q
    void setMarginsColor(int) -> s
    int getGridColor() -> R
    double[] getPanLimits() -> S
    void setPanLimits(double[]) -> a
    double[] getZoomLimits() -> T
    void setZoomLimits(double[]) -> b
    float getXLabelsAngle() -> U
    float getYLabelsAngle() -> V
    float getPointSize() -> W
    void setPointSize(float) -> f
    void setRange(double[],int) -> a
    boolean isInitialRangeSet() -> X
    boolean isInitialRangeSet(int) -> t
    double[] getInitialRange(int) -> u
    int getXLabelsColor() -> Y
    int getYLabelsColor(int) -> v
    void setXLabelsColor(int) -> w
    android.graphics.Paint$Align getXLabelsAlign() -> Z
    void setXLabelsAlign(android.graphics.Paint$Align) -> a
    android.graphics.Paint$Align getYLabelsAlign(int) -> x
    void setYLabelsAlign(android.graphics.Paint$Align) -> b
    android.graphics.Paint$Align getYAxisAlign(int) -> y
    void setYLabelsAlign(android.graphics.Paint$Align,int) -> a
    int getScalesCount() -> aa
org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation -> a.a.c.e:
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation HORIZONTAL -> a
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation VERTICAL -> b
    int mAngle -> c
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation[] $VALUES -> d
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation[] values() -> values
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation valueOf(java.lang.String) -> valueOf
    int getAngle() -> a
org.achartengine.renderer.XYSeriesRenderer -> a.a.c.f:
    boolean mFillPoints -> a
    boolean mFillBelowLine -> b
    int mFillColor -> c
    org.achartengine.chart.PointStyle mPointStyle -> d
    float mLineWidth -> e
    boolean isFillBelowLine() -> g
    boolean isFillPoints() -> h
    void setFillPoints(boolean) -> a
    int getFillBelowLineColor() -> i
    org.achartengine.chart.PointStyle getPointStyle() -> j
    void setPointStyle(org.achartengine.chart.PointStyle) -> a
    float getLineWidth() -> k
    void setLineWidth(float) -> a
org.achartengine.tools.AbstractTool -> a.a.d.a:
    org.achartengine.chart.AbstractChart mChart -> a
    org.achartengine.renderer.XYMultipleSeriesRenderer mRenderer -> b
    double[] getRange(int) -> a
    void checkRange(double[],int) -> a
    void setXRange(double,double,int) -> a
    void setYRange(double,double,int) -> b
org.achartengine.tools.FitZoom -> a.a.d.b:
    void apply() -> a
org.achartengine.tools.Pan -> a.a.d.c:
    java.util.List mPanListeners -> c
    boolean limitsReachedX -> d
    boolean limitsReachedY -> e
    void apply(float,float,float,float) -> a
    double getAxisRatio(double[]) -> a
    void notifyPanListeners() -> a
org.achartengine.tools.PanListener -> a.a.d.d:
    void panApplied() -> a
org.achartengine.tools.Zoom -> a.a.d.e:
    boolean mZoomIn -> c
    float mZoomRate -> d
    java.util.List mZoomListeners -> e
    boolean limitsReachedX -> f
    boolean limitsReachedY -> g
    void setZoomRate(float) -> a
    void apply(int) -> b
    void notifyZoomListeners(org.achartengine.tools.ZoomEvent) -> a
    void notifyZoomResetListeners() -> a
org.achartengine.tools.ZoomEvent -> a.a.d.f:
    boolean mZoomIn -> a
    float mZoomRate -> b
org.achartengine.tools.ZoomListener -> a.a.d.g:
    void zoomApplied(org.achartengine.tools.ZoomEvent) -> a
    void zoomReset() -> a
org.achartengine.util.IndexXYMap -> a.a.e.a:
    java.util.List indexList -> a
    double maxXDifference -> b
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void updateMaxXDifference() -> a
    void clear() -> clear
    java.lang.Object getXByIndex(int) -> a
    java.lang.Object getYByIndex(int) -> b
    int getIndexForKey(java.lang.Object) -> a
org.achartengine.util.MathHelper -> a.a.e.b:
    java.text.NumberFormat FORMAT -> a
    java.util.List getLabels(double,double,int) -> a
    double[] computeLabels(double,double,int) -> b
    double roundUp(double) -> a
    float[] getFloats(java.util.List) -> a
    double[] getDoubles(java.util.List) -> b
